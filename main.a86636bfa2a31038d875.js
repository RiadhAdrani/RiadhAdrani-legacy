(()=>{var e={7433:(e,t,o)=>{const{RecursiveWebApp:s,createComponentStyle:n}=o(5413);e.exports={RecursiveWebApp:s,createComponentStyle:n}},5413:(e,t,o)=>{const s=o(1317),n=o(6447),{RecursiveApp:r}=o(8221),{useRecursiveWindow:i}=o(402),{useRecursiveComponents:a}=o(8169);o(5663);e.exports={RecursiveWebApp:class extends r{constructor({root:e,app:t,route:o,base:r="",scrollCorrection:l=!1,cacheSize:d=1e3,onAppInit:c,scopedStyle:h}){super({cacheSize:d,buildRenderer:o=>new s(t,e,o,{scopedStyle:h}),buildRouter:e=>{if("object"==typeof o)return new n(o,r,l,e)},onAppInit:e=>{a(e),i(e),"function"==typeof c&&c(e)}})}setStyle(e){this.renderer.styler.setStyle(e)}},createComponentStyle:function(e){return{...e}}}},8534:(e,t,o)=>{const{RecursiveConsole:s}=o(8221);function n(e){const t=function(e){const t=[..."abcdefghijklmnopqrstuvwxyz-_0123456789"],o=t.length,s=[...e].reduce(((e,t)=>e+t.charCodeAt()),0);return[...e].map(((e,n)=>(e=>{const s=t[e%o];return n%3==0&&0!=n?s.toUpperCase():s})(e.charCodeAt()+s+n))).join("")}(e);return t}e.exports={useIntersectionObserver:function(e,t){var o=new IntersectionObserver((s=>{!0===s[0].isIntersecting&&(o.unobserve(s[0].target),s[0].target===e.lastChild&&"function"==typeof t&&t(e))}),{threshold:[0]});"#text"!=e.lastChild.nodeName?o.observe(e.lastChild):(s.warn("UseObserver : Unable to observe text node. Try wrapping it in another Element"),s.log(e))},createAnimationName:function(...e){return"_Rec_Animation_"+n(e.join("_"))},transformString:n}},5663:(e,t,o)=>{const{COLUMN_VIEW:s,ROW_VIEW:n,LAZY_COLUMN:r,LAZY_ROW:i,HTML_CONTAINER:a,CENTERED_ROW:l,CENTERED_COLUMN:d,HORIZONTAL_LINE:c,VERTICAL_LINE:h,TOGGLE_SWITCH:p,CIRCULAR_SPINNER:u}=o(3307),m=o(2304);HTMLElement;function g(e,t){m.addStaticStyle({selectors:{[e]:t}})}g(s,{display:"flex",flexDirection:"column"}),g(n,{display:"flex",flexDirection:"row"}),g(i,{display:"flex",flexDirection:"column"}),g(r,{display:"flex",flexDirection:"row"}),g(a,{display:"inline-block"}),g(l,{display:"flex",flexDirection:"row",justifyContent:"center",alignItems:"center"}),g(d,{display:"flex",flexDirection:"column",justifyContent:"center",alignItems:"center"}),g(p,{display:"inline-block"}),g(u,{display:"inline-block",width:"min-content",height:"min-content"})},8169:(e,t,o)=>{const{createElement:s,RecursiveConsole:n,RecursiveApp:r}=o(8221),{component:i}=o(7063);let a;e.exports={createElement:s,component:i,getApp:function(){return!a instanceof r&&n.error("Recursive Web : Failed to load the current App instance.",["This error is caused by an element that needs to use some methods from the app instance","Make sure to initialize with 'useApp' before calling the render() method."]),a},useRecursiveComponents:function(e){a=e}}},4694:(e,t,o)=>{const s=o(1901),n=o(2779),r=o(4787),i=o(7410),a=o(8946),l=o(3605),d=o(7401),c=o(8287),h=o(3651),p=o(4180),u=o(3426),m=o(8315),g=o(1896),f=o(4580),b=o(900),v=o(8177),y=o(9338),S=o(9623),w=o(178),k=o(9923),x=o(4017),C=o(5610),T=o(9774),R=o(4469),z=o(3217),E=o(3759),A=o(1444),U=o(1676),W=o(3837),I=o(6673),O=o(369),_=o(3231),P=o(3114),D=o(5348),M=o(8428);e.exports={items:{HtmlContainer:f(),Fragment:u(),Column:l(),Row:z(),CenteredColumn:s(),CenteredRow:n(),CheckBox:r(),ColorPicker:a(),DatePicker:d(),DateTimeLocalPicker:c(),EmailField:h(),FilePicker:p(),HiddenInput:m(),ImagePicker:b(),MonthPicker:w(),NumberPicker:k(),PasswordField:x(),RadioButton:C(),RangePicker:T(),ResetButton:R(),SearchField:E(),SubmitButton:U(),TelephoneNumberField:W(),TextField:I(),TimePicker:O(),UrlField:P(),WeekPicker:M(),Spacer:A(),LazyColumn:v(),LazyRow:y(),HorizontalLine:g(),VerticalLine:D(),Link:S(),ToggleSwitch:_(),CircularSpinner:i()}}},1901:(e,t,o)=>{const{component:s}=o(8169),{CENTERED_COLUMN:n}=o(3307);e.exports=()=>s({tag:n,props:{},docs:["An element displaying its children vertically and centered"]})},2779:(e,t,o)=>{const{component:s}=o(8169),{CENTERED_ROW:n}=o(3307);e.exports=()=>s({tag:n,props:{},docs:["An element displaying its children horizontally and centered"]})},4787:(e,t,o)=>{const{component:s}=o(8169);e.exports=()=>s({tag:"input",props:{value:"string",checked:"string"},handler:e=>{e.type="checkbox"},docs:["An element representing a boolean state of `true` or `false`.","Implement `onInput` or `onChange` to trigger actions when the state changes"]})},7410:(e,t,o)=>{const{component:s,createElement:n}=o(8169),{RecursiveConsole:r}=o(8221),{CIRCULAR_SPINNER:i,SVG_NS:a}=o(3307),{createAnimationName:l}=o(8534);e.exports=()=>s({tag:i,childless:!0,docs:["Progress indicator also known as `spinner`, ","Used to display an undetermined wait time."],props:{color:"Color",thickness:"number",size:"number"},handler:e=>{const t=e.color||"black",o="number"==typeof e.size?e.size:25;let s=3;e.hasOwnProperty("thickness")&&("number"==typeof e.thickness?e.thickness>=20||e.thickness<=0?r.warn('Circular Spinner : value of "thickness" should be between 0 and 20.'):s=e.thickness:r.warn(`Circular Spinner : type of "thickness" (${typeof e.thickness}) is not a number.`));const d=21-s,c=l(i,"Spin",t,s,o),h=l(i,"Rotate",t,s,o);e.children=n("svg",{rendererOptions:{ns:a},viewBox:"22 22 44 44",height:o+"px",width:o+"px",style:{scoped:!0,normal:{animation:["1.4s","linear","0s","infinite","normal","none","running",h]}},children:n("circle",{rendererOptions:{ns:a},cx:44,cy:44,r:d,strokeWidth:s,fill:"none",stroke:t,strokeDasharray:"80px 200px",strokeDashoffset:0,style:{scoped:!0,normal:{animation:["1.4s","ease-in-out","0s","infinite","normal","none","running",c]},animations:[{name:h,steps:{from:{rotate:"0deg"},to:{rotate:"360deg"}}},{name:c,steps:{"0%":{strokeDasharray:["1px,","200px"],strokeDashoffset:0},"50%":{strokeDasharray:["100px,","200px"],strokeDashoffset:"-15px"},"100%":{strokeDasharray:["100px,","200px"],strokeDashoffset:"-125px"}}}]}})})}})},8946:(e,t,o)=>{const{component:s}=o(8169);e.exports=()=>s({tag:"input",props:{value:"string"},handler:e=>{e.type="color"},docs:["Element allowing the user to pick a color from the displayed spectrum."]})},3605:(e,t,o)=>{const{component:s}=o(8169),{COLUMN_VIEW:n}=o(3307);e.exports=()=>s({tag:n,props:{},docs:["An element displaying its children vertically."]})},7401:(e,t,o)=>{const{component:s}=o(8169);e.exports=()=>s({tag:"input",props:{value:"string",max:"string",min:"string",step:"string"},handler:e=>{e.type="date"},docs:["Element providing a method for the user to pick a specific date."]})},8287:(e,t,o)=>{const{component:s}=o(8169);e.exports=()=>s({tag:"input",props:{value:"string",max:"string",min:"string",step:"string"},handler:e=>{e.type="datetime-local"},docs:["A more specific version of the `DatePicker` element, ","allowing the user to easily pick both date and time."]})},3651:(e,t,o)=>{const{component:s}=o(8169);e.exports=()=>s({tag:"input",props:{value:"string",autoComplete:"string",list:"string",maxLength:"string",minLength:"string",multiple:"string",pattern:"string",placeholder:"string",readOnly:"string",required:"boolean",size:"string"},handler:e=>{e.type="email"},docs:["Element used to let the user input one e-mail address, ","or multiple in case `multiple` attribute is specified."]})},4180:(e,t,o)=>{const{component:s}=o(8169);e.exports=()=>s({tag:"input",props:{required:"boolean",accept:"string",capture:"string",multiple:"string"},handler:e=>{e.type="file"},docs:["Element allowing the user to choose and select one or more files from their device storage, ","which can be later processed using JavaScript or uploaded directly using `form submission`."]})},3426:(e,t,o)=>{const{ELEMENT_TYPE_FRAGMENT:s}=o(9085),{component:n}=o(8169);e.exports=()=>n({tag:s,props:{},docs:["Utility element used to group elements without rendering the actual container, ","instead children will be rendered within the parent component."]})},8315:(e,t,o)=>{const{component:s}=o(8169);e.exports=()=>s({tag:"input",props:{name:"string",value:"string",autoComplete:"string"},handler:e=>{e.type="hidden"},docs:["Element that let web developers include data that cannot be seen or modified ","by users when a form is submitted."]})},1896:(e,t,o)=>{const{component:s}=o(8169),{HORIZONTAL_LINE:n}=o(3307);e.exports=()=>s({tag:n,props:{thickness:"string",width:"string",marginVertical:"string",color:"Color"},childless:!0,handler:e=>{e.style={...e.style,scoped:!0,normal:{width:e.width||"auto",height:e.thickness||"1px",minHeight:e.thickness||"1px",maxHeight:e.thickness||"1px",backgroundColor:e.color||"black",margin:[e.marginVertical||"5px",0],display:"block"}}},docs:["Element representing a line break between two elements. ","It works similarly to `<hr>`, but with better CSS support.`","`element.style.normal` can only be overriden within `element.style.mediaQueries`."]})},4580:(e,t,o)=>{const{ELEMENT_TYPE_RAW:s}=o(9085),{component:n}=o(8169);e.exports=()=>n({tag:s,props:{},docs:["Element rendering string as HTML."]})},900:(e,t,o)=>{const{component:s}=o(8169);e.exports=()=>s({tag:"input",props:{alt:"string",src:"string",height:"string",formAction:"string",formEncType:"string",formMethod:"string",formNoValidate:"string",formTarget:"string"},handler:e=>{e.type="image"},docs:["Element allowing the user to choose and select an image from their device storage, ","which can be later processed using JavaScript or uploaded directly using `form submission`."]})},8177:(e,t,o)=>{const{component:s}=o(8169),{LAZY_COLUMN:n}=o(3307),{useIntersectionObserver:r}=o(8534);e.exports=()=>s({tag:n,props:{onObserved:"Function"},handler:e=>{e.hooks||(e.hooks={});const t=e.hooks.onRef||(()=>{});e.hooks.onRef=o=>(0!==o.childNodes.length&&"function"==typeof e.onObserved&&r(o,e.onObserved),t(o))},docs:["Element displaying element vertically containing an `IntersectionObserver` ","that can watch for when the last element enter the user screen ","and execute the callback passed in `onObserved`."]})},9338:(e,t,o)=>{const{component:s}=o(8169),{LAZY_ROW:n}=o(3307),{useIntersectionObserver:r}=o(8534);e.exports=()=>s({tag:n,props:{onObserved:"Function"},handler:e=>{e.hooks={};const t=e.hooks.onRef||(()=>{});e.hooks.onRef=o=>{t(o),0!==o.childNodes.length&&"function"==typeof e.onObserved&&r(o,e.onObserved)}},docs:["Element displaying element horizontally containing an `IntersectionObserver` ","that can watch for when the last element enter the user screen ","and execute the callback passed in `onObserved`."]})},9623:(e,t,o)=>{const{RecursiveConsole:s}=o(8221),{component:n,getApp:r}=o(8169);e.exports=()=>n({tag:"a",docs:["An anchor element that allow the user to navigate between the different routes of the application. ","Use `href` to pass the destination route."],props:{href:"string"},handler:e=>{if(e.href){const t=r();t.router||s.error("Recursive Web : Unable to initialize a Link component without the presense of a Router.",["To initialize the Router, you need at least the root route '/'."]);const o=e.onClick||(()=>{}),n=e.href;e.href=t.router.useRouterMakeURL(n),e.onClick=e=>{e.preventDefault(),t.router.goTo(n),o(e)}}return e}})},178:(e,t,o)=>{const{component:s}=o(8169);e.exports=()=>s({tag:"input",props:{autoComplete:"string",list:"string",readOnly:"string",step:"string",value:"string"},handler:e=>{e.type="month"},docs:["Element providing a method for the user to pick a specific month."]})},9923:(e,t,o)=>{const{component:s}=o(8169);e.exports=()=>s({tag:"input",props:{autoComplete:"string",list:"string",placeholder:"string",readOnly:"string",list:"string",value:"string",valueAsNumber:"string"},handler:e=>{e.type="number"},docs:["Element providing a method for the user to pick a number in a given intervall."]})},4017:(e,t,o)=>{const{component:s}=o(8169);e.exports=()=>s({tag:"input",props:{autoComplete:"string",inputMode:"string",maxLength:"string",minLength:"string",pattern:"string",placeholder:"string",readOnly:"string",required:"string",size:"string",value:"string"},handler:e=>{e.type="password"},docs:["Element that treat the input of the user as a password and replace characters ","depending on the browser's `user agent` and operating system."]})},5610:(e,t,o)=>{const{component:s}=o(8169);e.exports=()=>s({tag:"input",props:{checked:"string",value:"string",required:"string"},handler:e=>{e.type="radio"},docs:["Element used generally in a group, describing a set of related options."]})},9774:(e,t,o)=>{const{component:s}=o(8169);e.exports=()=>s({tag:"input",props:{autoComplete:"string",list:"string",max:"string",min:"string",step:"string",value:"string",valueAsNumber:"string"},handler:e=>{e.type="range"},docs:["Element that let the user specify a numeric value which must be no less than a given value, ","and no more than another given value."]})},4469:(e,t,o)=>{const{component:s}=o(8169);e.exports=()=>s({tag:"input",props:{value:"string"},handler:e=>{e.type="reset"},docs:["Button that, by default, reset all inputs in the form to their initial values."]})},3217:(e,t,o)=>{const{component:s}=o(8169),{ROW_VIEW:n}=o(3307);e.exports=()=>s({tag:n,props:{},docs:["An element displaying its children horizontally."]})},3759:(e,t,o)=>{const{component:s}=o(8169);e.exports=()=>s({tag:"input",props:{autoComplete:"string",list:"string",maxLength:"string",minLength:"string",pattern:"string",placeholder:"string",required:"string",size:"string",value:"string"},handler:e=>{e.type="search"},docs:["A Text field element designed for the user to enter search queries into."]})},1444:(e,t,o)=>{const{component:s}=o(8169),{SPACER_VIEW:n}=o(3307);e.exports=()=>s({tag:n,props:{height:"number",width:"number"},childless:!0,handler:e=>{e.children=[],e.style={...e.style,scoped:!0,normal:{minHeight:e.height,height:e.height,maxHeight:e.height,display:"inline-block",maxWidth:e.width,width:e.width,minWidth:e.width}}},docs:["Element allowing the user to create space between components, vertically or horizontally. ","The space occupied by this element is indisputed by other components."]})},1676:(e,t,o)=>{const{component:s}=o(8169);e.exports=()=>s({tag:"input",props:{value:"string"},handler:e=>{e.type="submit"},docs:["Element rendered as a button, when it is clicked, ","the `user agent` (by default) attempts to submit the form to the server."]})},3837:(e,t,o)=>{const{component:s}=o(8169);e.exports=()=>s({tag:"input",props:{autoComplete:"string",list:"string",maxLength:"string",minLength:"string",pattern:"string",readOnly:"string",placeholder:"string",size:"string",value:"string"},handler:e=>{e.type="tel"},docs:["Element used to let the user enter and edit a telephone number."]})},6673:(e,t,o)=>{const{component:s}=o(8169);e.exports=()=>s({tag:"input",props:{autoComplete:"string",list:"string",maxLength:"string",minLength:"string",pattern:"string",readOnly:"string",placeholder:"string",size:"string",value:"string",required:"string"},handler:e=>{e.type="text"},docs:["Element for basic single-line text input."]})},369:(e,t,o)=>{const{component:s}=o(8169);e.exports=()=>s({tag:"input",props:{autoComplete:"string",list:"string",readOnly:"string",step:"string",value:"string"},handler:e=>{e.type="time"},docs:["Element that let the user easily enter a time (hours and minutes, and optionally seconds)."]})},3231:(e,t,o)=>{const{component:s,createElement:n}=o(8169),{TOGGLE_SWITCH:r}=o(3307);e.exports=()=>s({tag:r,docs:["Custom element rendered as `<"+r+">`.","","Create a toggle switch button allowing the user to change settings between two states, `true` and `false`.","","The `checked` parameter could be assigned a boolean to set the initial value of the switch.","","Use `radiuxPx` to set the radius of the button knob in pixels, with wich other dimensions will be calculated automatically."],props:{radiusPx:"number",color:"Color",backgroundColor:"Color",onBackgroundColor:"Color",checked:"boolean",onCheckChange:"(e: Event) => void"},childless:!0,handler:e=>{const t="number"==typeof e.radiusPx?e.radiusPx:20;let o=2*t,s=.13*t,r=t+s,i=.86*t;const a=e.color||"white",l=e.backgroundColor||"#ccc",d=e.onBackgroundColor||"#777";o+="px",s+="px",r+="px",i+="px",e.children=n("label",{children:[n("input",{type:"checkbox",checked:e.checked,placeholder:"toggle"}),n("span")],style:{scoped:!0,normal:{position:"relative",display:"inline-block",width:o,height:r}," input":{opacity:0,width:0,height:0}," span":{position:"absolute",cursor:"pointer",top:0,left:0,right:0,bottom:0,backgroundColor:l,transition:".4s",borderRadius:r}," span:before":{position:"absolute",content:"''",height:i,width:i,left:s,bottom:s,backgroundColor:a,transition:"0.4s",borderRadius:"50%"}," input:checked + span":{backgroundColor:d}," input:focus + span":{boxShadow:["0","0","5px",d]}," input:checked + span:before":{transform:`translate(${i})`}}})}})},3114:(e,t,o)=>{const{component:s}=o(8169);e.exports=()=>s({tag:"input",props:{autoComplete:"string",list:"string",maxLength:"string",minLength:"string",pattern:"string",readOnly:"string",placeholder:"string",size:"string",value:"string",required:"string"},handler:e=>{e.type="url"},docs:["Element used to let the user enter and edit an URL."]})},5348:(e,t,o)=>{const{component:s}=o(8169),{VERTICAL_LINE:n}=o(3307);e.exports=()=>s({tag:n,props:{thickness:"string",height:"string",marginHorizontal:"string",color:"Color"},childless:!0,handler:e=>{e.style={...e.style,scoped:!0,normal:{height:e.height||"5px",width:e.thickness||"1px",minWidth:e.thickness||"1px",maxWidth:e.thickness||"1px",backgroundColor:e.color||"black",margin:[0,e.marginHorizontal||"5px"],display:"inline-block"}}},docs:["Element representing a line break between two elements. ","It works similarly to `<hr>`, but vertically and with better CSS support.`","`element.style.normal` can only be overriden within `element.style.mediaQueries`."]})},8428:(e,t,o)=>{const{component:s}=o(8169);e.exports=()=>s({tag:"input",props:{autoComplete:"string",list:"string",readOnly:"string",step:"string",value:"string"},handler:e=>{e.type="tel"},docs:["Element allowing easy entry of a year plus the ``ISO 8601`` week number during that year"]})},3307:e=>{e.exports={HTML_NS:"http://www.w3.org/1999/xhtml",SVG_NS:"http://www.w3.org/2000/svg",MATH_NS:"http://www.w3.org/1998/Math/MathML",COLUMN_VIEW:"column-view",ROW_VIEW:"row-view",LAZY_COLUMN:"lazy-column",LAZY_ROW:"lazy-row",HTML_CONTAINER:"html-container",SPACER_VIEW:"spacer-view",CENTERED_COLUMN:"centered-column",CENTERED_ROW:"centered-row",HORIZONTAL_LINE:"horizontal-line",VERTICAL_LINE:"vertical-line",TOGGLE_SWITCH:"toggle-switch",CIRCULAR_SPINNER:"circular-spinner",WINDOW_ON_BEFORE_UNLOAD:"onBeforeUnloadGlobal",WINDOW_ON_CLICK:"onClickGlobal",WINDOW_ON_CONTEXT_MENU:"onContextMenuGlobal",WINDOW_ON_KEY_DOWN:"onKeyDownGlobal",WINDOW_ON_RESIZE:"onResizeGlobal",WINDOW_ON_SCROLL:"onScrollGlobal",WINDOW_ON_KEY_UP:"onKeyUpGlobal"}},203:(e,t,o)=>{const{renderSelector:s}=o(8481);function n(e){return"string"==typeof e&&(!!e.trim()&&(!["unset","none","initial","inherit"].includes(e)&&(!e.includes(" ")&&"--"!=e.substring(0,2))))}function r(e){return"object"==typeof e&&(!Array.isArray(e)&&(null!=e&&0!=Object.keys(e).length))}e.exports={isValidName:n,isValidStepsObject:r,renderAnimation:function(e,t){if(!n(e)||!r(t))return"";let o=`@keyframes ${e=e.trim()}{`;for(let e in t)o+=s(e,t[e]);return o+="}",o}}},3836:e=>{const t={ascentOverride:"ascent-override",descentOverride:"descent-override",fontDisplay:"font-display",fontFamily:"font-family",fontStretch:"font-stretch",fontStyle:"font-style",fontWeight:"font-weight",fontVariant:"font-variant",fontFeatureSettings:"font-feature-settings",fontVariationSettings:"font-variation-settings",lineGapOverride:"line-gap-override",src:"src",unicodeRange:"unicode-range",sizeAdjust:"size-adjust"};function o(e){return void 0!==t[e]}function s(e){return t[e]}e.exports={list:t,is:o,get:s,renderFontFace:function(e){if(!Array.isArray(e))return"";let t="@font-face{";return e.forEach((e=>{for(let n in e)o(n)&&!e[n].toString().includes(";")&&(t+=`${s(n)}:${e[n]};`)})),t+="}",t}}},461:(e,t,o)=>{const{isValidMediaQueryDeclaration:s}=o(2199),{areEqual:n}=o(459);e.exports=function(e){if(!Array.isArray(e))return{};const t={};function o(e){return!([null,void 0].includes(e)||["string","number","bigint","boolean","symbol"].includes(typeof e)||Array.isArray(e))&&("object"!=typeof e||0!=Object.keys(e).length)}return e.forEach((e=>{if(e)for(let i in e)switch(i){case"animations":if(!e.animations)break;for(let a in e.animations)o(e.animations[a])&&(t.animations||(t.animations={}),t.animations[a]=e.animations[a]);break;case"mediaQueries":if(!e.mediaQueries)break;for(let l in e.mediaQueries){const d=e.mediaQueries[l];if(!s(d))continue;t.mediaQueries||(t.mediaQueries=[]);const c={condition:l,selectors:e.mediaQueries[l]};let h=!0;for(let p in t.mediaQueries){const u={condition:t.mediaQueries[p].condition,selectors:t.mediaQueries[p].selectors};if(JSON.stringify(u)===JSON.stringify(c)){h=!1;break}}h&&t.mediaQueries.push(c)}break;case"fontFace":if(!Array.isArray(e.fontFace))break;t.fontFace||(t.fontFace=[]),t.fontFace.push(...e.fontFace);break;case"var":if(!e.var||"object"!=typeof e.var||Array.isArray(e.var)||0==Object.keys(e.var).length)break;for(let m in e.var)t.var||(t.var={}),"string"==typeof e.var[m]&&e.var[m].trim()&&(t.var[m]=e.var[m]);break;case"imports":if(!Array.isArray(e.imports))break;t.imports||(t.imports=[]),e.imports.forEach((e=>{"string"==typeof e&&e.trim()&&t.imports.push(e.trim())}));break;case"selectors":if(!e.hasOwnProperty("selectors"))break;for(let g in e.selectors){if(!o(e.selectors[g]))continue;t.hasOwnProperty("selectors")||(t.selectors=[]);const f={selector:g,content:e.selectors[g]};function r(){for(let e of t.selectors)if(n(f,e))return!0;return!1}r()||t.selectors.push(f)}}})),t}},2030:(e,t,o)=>{const{RecursiveConsole:s}=o(8221),{isValidName:n}=o(203),{get:r,is:i,customSelectorAlreadyExists:a,getSelectorSupport:l}=o(8481);e.exports=function(e){const t={};if(!e||void 0===e.className)return t;function o(e,t,o){if(!e||!o)return;return{key:"."+e+r(t),content:o}}for(let r in e)switch(r){case"inline":case"scoped":break;case"animations":if(!Array.isArray(e.animations))break;t.animations={},e.animations.forEach((e=>{n(e.name)&&e.steps&&(t.animations[e.name]=e.steps)}));break;case"mediaQueries":if(!Array.isArray(e.mediaQueries))break;t.mediaQueries={},e.mediaQueries.forEach((n=>{if(n.condition)for(let r in n){if("condition"===r){"string"!=typeof n.condition&&s.warn('Recursive CSSOM : the word "condition" cannot be used as name for a component style selector.');continue}const i=o(e.className,r,n[r]);i&&(t.mediaQueries[n.condition]||(t.mediaQueries[n.condition]={}),t.mediaQueries[n.condition][i.key]=i.content)}}));break;default:if(["className","scoped","mediaQueries","animations"].includes(r))break;if(!i(r)){const e=a(r);if(!1!==e){s.warn(`Recursive Web CSSOM : Custom selector "${r}" is already defined and the custom declaration have been igonred. Use predefined selector "${e}"`);break}}const d=o(e.className,r,e[r]);if(d){t.selectors||(t.selectors={}),t.selectors[d.key]=d.content;l(r).forEach((o=>{const s={key:"."+e.className+o,content:d.content};t.selectors[s.key]=s.content}))}}return t}},8533:e=>{e.exports={renderImport:function(e){if(!Array.isArray(e))return"";let t="";return e.forEach((e=>{t+=`@import url("${e}");`})),t}}},2304:(e,t,o)=>{const s=o(2030),n=o(461),r=o(2381);function i(){const e=document.createElement("style");return document.querySelector("head").append(e),e}class a{static common=i();static highPriority=i();static lowPriority=i();constructor(){this.highPriority="",this.lowPriority="",this.dynamicStack=[]}update(e){const t=(e||[]).map((e=>s(e))),o=r(n([...this.dynamicStack,...t]));this.highPriority!==o.highPriority&&(a.highPriority.innerHTML=o.highPriority,this.highPriority=o.highPriority),this.lowPriority!==o.lowPriority&&(a.lowPriority.innerHTML=o.lowPriority,this.lowPriority=o.lowPriority),this.dynamicStack=[]}static addStaticStyle(e){const t=r(n([e]));a.common.innerHTML+=t.highPriority,a.common.innerHTML+=t.lowPriority}addDynamicDeclaration(e){this.dynamicStack.push(e)}setStyle(e){this.addDynamicDeclaration(e)}}e.exports=a},2199:(e,t,o)=>{const{renderSelector:s}=o(8481);e.exports={renderMediaQuery:function(e,t){if("string"!=typeof e||!e.trim())return"";if(null===t)return"";if("object"!=typeof t)return"";if(Array.isArray(t))return"";if(0==Object.keys(t).length)return"";let o=`@media ${e}{`;for(let e in t)o+=s(e,t[e]);return o+="}",o},isValidMediaQueryDeclaration:function(e){return!!(e&&"object"==typeof e&&!Array.isArray(e)&&Object.keys(e).length>0)}}},7432:(e,t,o)=>{const{RecursiveConsole:s}=o(8221),{ListOfCssProperties:n,globalValues:r}=o(6017),i=/\{|\}/g;function a(e){return void 0!==n[e]&&null!=n[e].css}function l(e){return n[e].css}function d(e){return!!["number","string"].includes(typeof e)&&(!!(e=e.toString().trim())&&-1==e.search(i))}function c(e,t){let o="";const n=[];return Array.isArray(e)?n.push(...e):n.push(e),n.forEach((e=>{d(e)?o+=` ${e}`:s.warn(`Recursive Web CSSOM: value "${e}" of property "${t}" has been ignored.`)})),o}e.exports={is:a,get:l,renderProperty:function(e,t){if(!a(e)||[void 0,null,""].includes(t))return"";const o=c(t,e);if(!o)return"";const s=[];var r;return(r=e,a(r)?n[r].support:[]).forEach((e=>{s.push(`${e}:${o};`)})),s.push(`${l(e)}:${o};`),s.join("")},renderValue:c,validValue:d,ListOfCssProperties:n,globalValues:r}},6017:(e,t,o)=>{const{property:s}=o(7063),n="Color",r={accentColor:s({css:"accent-color",values:["auto"],type:n,docs:["The accent-color CSS property sets the accent color for user-interface controls generated by some elements.","","Browsers that support accent-color currently apply it to the following HTML elements:",'* `<input type="checkbox">`','* `<input type="radio">`','* `<input type="range">`',"* `<progress>`"],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/accent-color"]}),alignContent:s({css:"align-content",values:["center","start","end","flex-start","flex-end","normal","baseline","first baseline","last baseline","space-between","space-around","space-evenly","stretch","safe center","unsafe center"],type:"string",docs:["The CSS align-content property sets the distribution of space between and around content items along a flexbox's cross-axis or a grid's block axis.","","This property has no effect on single line flex containers (i.e. ones with ``flex-wrap: nowrap``)."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/align-content"]}),alignItems:s({css:"align-items",values:["center","start","end","flex-start","flex-end","normal","baseline","first baseline","last baseline","stretch","safe center","unsafe center"],type:"string",docs:["The CSS align-items property sets the align-self value on all direct children as a group. In Flexbox, it controls the alignment of items on the Cross Axis. In Grid Layout, it controls the alignment of items on the Block Axis within their grid area."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/align-items"]}),alignSelf:s({css:"align-self",values:["center","start","end","flex-start","flex-end","normal","baseline","first baseline","last baseline","space-between","space-around","space-evenly","self-start","self-end","stretch","safe center","unsafe center"],type:"string",docs:["The align-self CSS property overrides a grid or flex item's align-items value. In Grid, it aligns the item inside the grid area. In Flexbox, it aligns the item on the cross axis.","","The property doesn't apply to block-level boxes, or to table cells. If a flexbox item's cross-axis margin is auto, then align-self is ignored."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/align-self"]}),alignTracks:s({css:"align-tracks",values:["start","space-between","center"],type:"string",docs:["**Experimental: This is an experimental technology Check the browser compatibility table carefully before using this in production.**","","The align-tracks CSS property sets the alignment in the masonry axis for grid containers that have masonry in their block axis.","","The property can take a single value, in which case all tracks are aligned in the same way. If a list of values is used then the first value applies to the first track in the grid axis, the second to the next and so on.","","If there are fewer values than tracks, the last value is used for all remaining tracks. If there are more values than tracks, any additional values are ignored."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/align-tracks"]}),all:s({css:"all",values:[],type:"string",support:["The all shorthand CSS property resets all of an element's properties except ``unicode-bidi``, ``direction``, and ``CSS Custom Properties``. It can set properties to their initial or inherited values, or to the values specified in another cascade layer or stylesheet origin."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/all"]}),animation:s({css:"animation",values:[],type:"string",docs:["The animation shorthand CSS property applies an animation between styles. It is a shorthand for animation-name, animation-duration, animation-timing-function, animation-delay, animation-iteration-count, animation-direction, animation-fill-mode, and animation-play-state.","","This property is a shorthand for the following CSS properties:","* animation-delay","* animation-direction","* animation-duration","* animation-fill-mode","* animation-iteration-count","* animation-name","* animation-play-state","* animation-timing-function"],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/animation"]}),animationDelay:s({css:"animation-delay",values:[],type:"string",docs:["The animation-delay CSS property specifies the amount of time to wait from applying the animation to an element before beginning to perform the animation. The animation can start later, immediately from its beginning, or immediately and partway through the animation."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/animation-delay"]}),animationDuration:s({css:"animation-duration",values:[],type:"string",docs:["The animation-duration CSS property sets the length of time that an animation takes to complete one cycle."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/animation-duration"]}),animationFillMode:s({css:"animation-fill-mode",values:["none","forwards","backwards","both"],type:"string",docs:["The animation-fill-mode CSS property sets how a CSS animation applies styles to its target before and after its execution."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/animation-fill-mode"]}),animationIterationCount:s({css:"animation-iteration-count",values:["infinite"],type:"number",docs:["The animation-iteration-count CSS property sets the number of times an animation sequence should be played before stopping."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/animation-iteration-count"]}),animationName:s({css:"animation-name",values:[],type:"string",docs:["The animation-name CSS property specifies the names of one or more @keyframes at-rules describing the animation or animations to apply to the element."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/animation-name"]}),animationPlayState:s({css:"animation-play-state",values:["running","paused"],type:"string",docs:["The animation-play-state CSS property sets whether an animation is running or paused.","","Resuming a paused animation will start the animation from where it left off at the time it was paused, rather than starting over from the beginning of the animation sequence."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/animation-play-state"]}),animationTimingFunction:s({css:"animation-timing-function",values:["ease","ease-in","ease-out","ease-in-out","linear","step-start","step-end"],type:"string",docs:["The animation-timing-function CSS property sets how an animation progresses through the duration of each cycle."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/animation-timing-function"]}),appearance:s({css:"appearance",values:["none","auto","menulist-button","textfield","button","searchfield","textarea","push-button","slide-horizontal","checkbox","radio","square-button","menulist","meter","progress-bar"],type:"string",docs:["The appearance CSS property is used to control native appearance of UI controls, that are based on operating system's theme.","","Before standardization this property allowed simple elements to be shown as widgets, such as buttons or check boxes. It was considered a misfeature and authors are encouraged to use only standard keywords now.","_Note: If you wish to use this property on websites, you should test it very carefully. Although it is supported in most modern browsers, its implementation varies. In older browsers, even the keyword none does not have the same effect on all form elements across different browsers, and some do not support it at all. The differences are smaller in the newest browsers._"],support:["-webkit-appearance","-moz-appearance"],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/appearance"]}),ascentOverride:s({css:"ascent-override",values:[],type:"string",docs:["The ascent-override CSS descriptor defines the ascent metric for the font. The ascent metric is the height above the baseline that CSS uses to lay out line boxes in an inline formatting context."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/ascent-override"]}),aspectRatio:s({css:"aspect-ratio",values:["auto"],type:"string",docs:["The aspect-ratio CSS property sets a preferred aspect ratio for the box, which will be used in the calculation of auto sizes and some other layout functions."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/aspect-ratio"]}),backdropFilter:s({css:"backdrop-filter",values:["none"],type:"string",docs:["The backdrop-filter CSS property lets you apply graphical effects such as blurring or color shifting to the area behind an element. Because it applies to everything behind the element, to see the effect you must make the element or its background at least partially transparent."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/backdrop-filter"]}),backfaceVisibility:s({css:"backface-visibility",values:["hidden","visible"],type:"string",docs:["The backface-visibility CSS property sets whether the back face of an element is visible when turned towards the user.","","An element's back face is a mirror image of its front face. Though invisible in 2D, the back face can become visible when a transformation causes the element to be rotated in 3D space. (This property has no effect on 2D transforms, which have no perspective.)"],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/backface-visibility"]}),background:s({css:"background",values:[],type:"string",docs:["The background shorthand CSS property sets all background style properties at once, such as color, image, origin and size, or repeat method.","","This property is a shorthand for the following CSS properties:","* background-attachment","* background-clip","* background-color","* background-image","* background-origin","* background-position","* background-repeat","* background-size"],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/background"]}),backgroundAttachment:s({css:"background-attachment",values:["scroll","fixed","local"],type:"string",docs:["The background-attachment CSS property sets whether a background image's position is fixed within the viewport, or scrolls with its containing block."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/background-attachment"]}),backgroundBlendMode:s({css:"background-blend-mode",values:[],type:"string",docs:["The background-blend-mode CSS property sets how an element's background images should blend with each other and with the element's background color."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/background-blend-mode"]}),backgroundClip:s({css:"background-clip",values:["border-box","padding-box","content-box","text"],type:"string",docs:["The background-clip CSS property sets whether an element's background extends underneath its border box, padding box, or content box.","","If the element has no background-image or background-color, this property will only have a visual effect when the border has transparent regions or partially opaque regions (due to border-style or border-image); otherwise, the border masks the difference."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/background-clip"]}),backgroundColor:s({css:"background-color",values:[],type:n,docs:["The background-color CSS property sets the background color of an element."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/background-color"]}),backgroundImage:s({css:"background-image",values:[],type:"string",docs:["The background-image CSS property sets one or more background images on an element.","","The background images are drawn on stacking context layers on top of each other. The first layer specified is drawn as if it is closest to the user.","","The borders of the element are then drawn on top of them, and the background-color is drawn beneath them. How the images are drawn relative to the box and its borders is defined by the background-clip and background-origin CSS properties.","","If a specified image cannot be drawn (for example, when the file denoted by the specified URI cannot be loaded), browsers handle it as they would a none value."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/background-image"]}),backgroundOrigin:s({css:"background-origin",values:["border-box","padding-box","content-box"],type:"string",docs:["The background-origin CSS property sets the background's origin: from the border start, inside the border, or inside the padding.","","Note that background-origin is ignored when background-attachment is fixed."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/background-origin"]}),backgroundPosition:s({css:"background-position",values:["top","bottom","left","right","center"],type:"string",docs:["The background-position CSS property sets the initial position for each background image. The position is relative to the position layer set by background-origin."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/background-position"]}),backgroundPositionX:s({css:"background-position-x",values:["left","right","center"],type:"string",docs:["The background-position-x CSS property sets the initial horizontal position for each background image. The position is relative to the position layer set by background-origin.","","The value of this property is overridden by any declaration of the background or background-position shorthand properties applied to the element after it."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/background-position-x"]}),backgroundPositionY:s({css:"background-position-y",values:["top","center","bottom"],type:"string",docs:["The background-position-y CSS property sets the initial vertical position for each background image. The position is relative to the position layer set by background-origin.","","The value of this property is overridden by any declaration of the background or background-position shorthand properties applied to the element after it."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/background-position-y"]}),backgroundRepeat:s({css:"background-repeat",values:["repeat-x","repeat-y","repeat","space","round","no-repeat"],type:"string",docs:["The background-repeat CSS property sets how background images are repeated. A background image can be repeated along the horizontal and vertical axes, or not repeated at all.","","By default, the repeated images are clipped to the size of the element, but they can be scaled to fit (using round) or evenly distributed from end to end (using space)."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/background-repeat"]}),backgroundSize:s({css:"background-size",values:["cover","contain"],type:"string",docs:[],links:[]}),blockSize:s({css:"block-size",values:["max-content","min-content"],type:"string",docs:["The background-size CSS property sets the size of the element's background image. The image can be left to its natural size, stretched, or constrained to fit the available space.","","Spaces not covered by a background image are filled with the background-color property, and the background color will be visible behind background images that have transparency/translucency."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/background-size"]}),borderBlock:s({css:"border-block",values:[],type:"string",docs:["The border-block CSS property is a shorthand property for setting the individual logical block border property values in a single place in the style sheet.","border-block can be used to set the values for one or more of border-block-width, border-block-style, and border-block-color setting both the start and end in the block dimension at once. The physical borders to which it maps depends on the element's writing mode, directionality, and text orientation. It corresponds to the border-top and border-bottom or border-right, and border-left properties depending on the values defined for writing-mode, direction, and text-orientation."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-block"]}),borderBlockColor:s({css:"border-block-color",values:[],type:n,docs:["The border-block-color CSS property defines the color of the logical block borders of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-color and border-bottom-color, or border-right-color and border-left-color property depending on the values defined for writing-mode, direction, and text-orientation."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-block-color"]}),borderBlockStyle:s({css:"border-block-style",values:["dashed","dotted","groove"],type:"string",docs:["The border-block-style CSS property defines the style of the logical block borders of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-style and border-bottom-style, or border-left-style and border-right-style properties depending on the values defined for writing-mode, direction, and text-orientation."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-block-style"]}),borderBlockWidth:s({css:"border-block-width",values:["thick"],type:"string",docs:["The border-block-width CSS property defines the width of the logical block borders of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-width and border-bottom-width, or border-left-width, and border-right-width property depending on the values defined for writing-mode, direction, and text-orientation."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-block-width"]}),borderBlockEnd:s({css:"border-block-end",values:[],type:"string",docs:["The border-block-end CSS property is a shorthand property for setting the individual logical block-end border property values in a single place in the style sheet."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-block-end"]}),borderBlockEndColor:s({css:"border-block-end-color",values:[],type:n,docs:["The border-block-end-color CSS property defines the color of the logical block-end border of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-color, border-right-color, border-bottom-color, or border-left-color property depending on the values defined for writing-mode, direction, and text-orientation."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-block-end-color"]}),borderBlockEndStyle:s({css:"border-block-end-style",values:["dashed","dotted","groove"],type:"string",docs:["The border-block-end-style CSS property defines the style of the logical block-end border of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-style, border-right-style, border-bottom-style, or border-left-style property depending on the values defined for writing-mode, direction, and text-orientation."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-block-end-style"]}),borderBlockEndWidth:s({css:"border-block-end-width",values:["thick"],type:"string",docs:["The border-block-end-width CSS property defines the width of the logical block-end border of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-width, border-right-width, border-bottom-width, or border-left-width property depending on the values defined for writing-mode, direction, and text-orientation."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-block-end-width"]}),borderBlockStart:s({css:"border-block-start",values:[],type:"string",docs:["The border-block-start CSS property is a shorthand property for setting the individual logical block-start border property values in a single place in the style sheet."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-block-start"]}),borderBlockStartColor:s({css:"border-block-start-color",values:[],type:n,docs:["The border-block-start-color CSS property defines the color of the logical block-start border of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-color, border-right-color, border-bottom-color, or border-left-color property depending on the values defined for writing-mode, direction, and text-orientation."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-block-start-color"]}),borderBlockStartStyle:s({css:"border-block-start-style",values:["dashed","dotted","groove"],type:"string",docs:["The border-block-start-style CSS property defines the style of the logical block start border of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-style, border-right-style, border-bottom-style, or border-left-style property depending on the values defined for writing-mode, direction, and text-orientation."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-block-start-style"]}),borderBlockStartWidth:s({css:"border-block-start-width",values:["thick"],type:"string",docs:["The border-block-start-width CSS property defines the width of the logical block-start border of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-width, border-right-width, border-bottom-width, or border-left-width property depending on the values defined for writing-mode, direction, and text-orientation."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-block-start-width"]}),border:s({css:"border",values:[],type:"string",docs:["The border shorthand CSS property sets an element's border. It sets the values of border-width, border-style, and border-color."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border"]}),borderBottom:s({css:"border-bottom",value:[],type:"string",docs:["The border-bottom shorthand CSS property sets an element's bottom border. It sets the values of border-bottom-width, border-bottom-style and border-bottom-color."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-bottom"]}),borderBottomColor:s({css:"border-bottom-color",values:[],type:n,docs:["The border-bottom-color CSS property sets the color of an element's bottom border. It can also be set with the shorthand CSS properties border-color or border-bottom."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-bottom-color"]}),borderBottomLeftRadius:s({css:"border-bottom-left-radius",values:[],type:"string",docs:["The border-bottom-left-radius CSS property rounds the bottom-left corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-bottom-left-radius"]}),borderBottomRightRadius:s({css:"border-bottom-right-radius",values:[],type:"string",docs:["The border-bottom-right-radius CSS property rounds the bottom-right corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-bottom-right-radius"]}),borderBottomStyle:s({css:"border-bottom-style",values:["none","hidden","dotted","dashed","solid","double","groove","ridge","inset","outset"],type:"string",docs:["The border-bottom-style CSS property sets the line style of an element's bottom border."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-bottom-style"]}),borderBottomWidth:s({css:"border-bottom-width",values:["thin","medium","thick"],type:"string",docs:["The border-bottom-width CSS property sets the width of the bottom border of an element."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-bottom-width"]}),borderCollapse:s({css:"border-collapse",values:["collapse","seperate"],type:"string",docs:["The border-collapse CSS property sets whether cells inside a <table> have shared or separate borders."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-collapse"]}),borderColor:s({css:"border-color",values:[],type:n,docs:["The border-color shorthand CSS property sets the color of an element's border."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-color"]}),borderEndEndRadius:s({css:"border-end-end-radius",values:[],type:"string",docs:["The border-end-end-radius CSS property defines a logical border radius on an element, which maps to a physical border radius that depends on the element's writing-mode, direction, and text-orientation. This is useful when building styles to work regardless of the text orientation and writing mode."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-end-end-radius"]}),borderEndStartRadius:s({css:"border-end-start-radius",values:[],type:"string",docs:["The border-end-start-radius CSS property defines a logical border radius on an element, which maps to a physical border radius depending on the element's writing-mode, direction, and text-orientation. This is useful when building styles to work regardless of the text orientation and writing mode."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-end-start-radius"]}),borderStartEndRadius:s({css:"border-start-end-radius",values:[],type:"string",docs:["The border-start-end-radius CSS property defines a logical border radius on an element, which maps to a physical border radius depending on the element's writing-mode, direction, and text-orientation. This is useful when building styles to work regardless of the text orientation and writing mode."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-start-end-radius"]}),borderStartStartRadius:s({css:"border-start-start-radius",values:[],type:"string",docs:["The border-start-start-radius CSS property defines a logical border radius on an element, which maps to a physical border radius that depends on the element's writing-mode, direction, and text-orientation. This is useful when building styles to work regardless of the text orientation and writing mode."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-start-start-radius"]}),borderImage:s({css:"border-image",values:[],type:"string",docs:["The border-image CSS property draws an image around a given element. It replaces the element's regular border."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-image"]}),borderImageOutset:s({css:"border-outset",values:[],type:"string",docs:[],links:[]}),borderImageRepeat:s({css:"border-image-repeat",values:["stretch","repeat","round","space"],type:"string",docs:["The border-image-repeat CSS property defines how the edge regions of a source image are adjusted to fit the dimensions of an element's border image."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-image-repeat"]}),borderImageSlice:s({css:"border-image-slice",values:["fill"],type:"string",docs:["The border-image-slice CSS property divides the image specified by border-image-source into regions. These regions form the components of an element's border image."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-image-slice"]}),borderImageSource:s({css:"border-image-source",values:[],type:"string",docs:["The border-image-source CSS property sets the source image used to create an element's border image."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-image-source"]}),borderImageWidth:s({css:"border-image-width",values:[],type:"string",docs:["The border-image-width CSS property sets the width of an element's border image."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-image-width"]}),borderInline:s({css:"border-inline",values:[],type:n,docs:["The border-inline CSS property is a shorthand property for setting the individual logical inline border property values in a single place in the style sheet."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-inline"]}),borderInlineColor:s({css:"border-inline-color",values:[],type:n,docs:["The border-inline-color CSS property defines the color of the logical inline borders of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-color and border-bottom-color, or border-right-color and border-left-color property depending on the values defined for writing-mode, direction, and text-orientation."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-inline-color"]}),borderInlineStyle:s({css:"border-inline-style",values:["dashed","dotted","groove"],type:"string",docs:["The border-inline-style CSS property defines the style of the logical inline borders of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-style and border-bottom-style, or border-left-style and border-right-style properties depending on the values defined for writing-mode, direction, and text-orientation."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-inline-style"]}),borderInlineWidth:s({css:"border-inline-width",values:[],type:"string",docs:["The border-inline-width CSS property defines the width of the logical inline borders of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-width and border-bottom-width, or border-left-width, and border-right-width property depending on the values defined for writing-mode, direction, and text-orientation."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-inline-width"]}),borderInlineEnd:s({css:"border-inline-end",values:[],type:"string",docs:["The border-inline-end CSS property is a shorthand property for setting the individual logical inline-end border property values in a single place in the style sheet."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-inline-end"]}),borderInlineEndColor:s({css:"border-inline-end-color",values:[],type:n,docs:["The border-inline-end-color CSS property defines the color of the logical inline-end border of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-color, border-right-color, border-bottom-color, or border-left-color property depending on the values defined for writing-mode, direction, and text-orientation."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-inline-end-color"]}),borderInlineEndStyle:s({css:"border-inline-end-style",values:["dashed","dotted","groove"],type:"string",docs:["The border-inline-end-style CSS property defines the style of the logical inline end border of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-style, border-right-style, border-bottom-style, or border-left-style property depending on the values defined for writing-mode, direction, and text-orientation."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-inline-end-style"]}),borderInlineEndWidth:s({css:"border-inline-end-width",values:[],type:"string",docs:["The border-inline-end-width CSS property defines the width of the logical inline-end border of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-width, border-right-width, border-bottom-width, or border-left-width property depending on the values defined for writing-mode, direction, and text-orientation."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-inline-end-width"]}),borderInlineStart:s({css:"border-inline-start",values:[],type:"string",docs:["The border-inline-start CSS property is a shorthand property for setting the individual logical inline-start border property values in a single place in the style sheet."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-inline-start"]}),borderInlineStartColor:s({css:"border-inline-start-color",values:[],type:n,docs:["The border-inline-start-color CSS property defines the color of the logical inline start border of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-color, border-right-color, border-bottom-color, or border-left-color property depending on the values defined for writing-mode, direction, and text-orientation."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-inline-start-color"]}),borderInlineStartStyle:s({css:"border-inline-start-style",values:["dashed","dotted","groove"],type:"string",docs:["The border-inline-start-style CSS property defines the style of the logical inline start border of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-style, border-right-style, border-bottom-style, or border-left-style property depending on the values defined for writing-mode, direction, and text-orientation."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-inline-start-style"]}),borderInlineStartWidth:s({css:"border-inline-start-width",values:[],type:"string",docs:["The border-inline-start-width CSS property defines the width of the logical inline-start border of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-width, border-right-width, border-bottom-width, or border-left-width property depending on the values defined for writing-mode, direction, and text-orientation."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-inline-start-width"]}),borderLeft:s({css:"border-left",values:[],type:"string",docs:["The border-left shorthand CSS property sets all the properties of an element's left border."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-left"]}),borderLeftColor:s({css:"border-left-color",values:[],type:n,docs:["The border-left-color CSS property sets the color of an element's left border. It can also be set with the shorthand CSS properties border-color or border-left."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-left-color"]}),borderLeftStyle:s({css:"border-left-style",values:["none","hidden","dotted","dashed","solid","double","groove","ridge","inset","outset"],type:"string",docs:["The border-left-style CSS property sets the line style of an element's left border."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-left-style"]}),borderLeftWidth:s({css:"border-left-width",values:[],type:"string",docs:["The border-left-width CSS property sets the width of the left border of an element."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-left-width"]}),borderRadius:s({css:"border-radius",values:[],type:"string",docs:["The border-radius CSS property rounds the corners of an element's outer border edge. You can set a single radius to make circular corners, or two radii to make elliptical corners."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-radius"]}),borderRight:s({css:"border-right",values:[],type:"string",docs:["The border-right shorthand CSS property sets all the properties of an element's right border."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-right"]}),borderRightColor:s({css:"border-right-color",values:[],type:n,docs:["The border-right-color CSS property sets the color of an element's right border. It can also be set with the shorthand CSS properties border-color or border-right."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-right-color"]}),borderRightStyle:s({css:"border-right-style",values:["none","hidden","dotted","dashed","solid","double","groove","ridge","inset","outset"],type:"string",docs:["The border-right-style CSS property sets the line style of an element's right border."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-right-style"]}),borderRightWidth:s({css:"border-right-width",values:[],type:"string",docs:["The border-right-width CSS property sets the width of the right border of an element."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-right-width"]}),borderSpacing:s({css:"border-spacing",values:[],type:"string",docs:["The border-spacing CSS property sets the distance between the borders of adjacent cells in a ``<table>``. This property applies only when border-collapse is separate."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-spacing"]}),borderStyle:s({css:"border-style",values:["none","hidden","dotted","dashed","solid","double","groove","ridge","inset","outset"],type:"string",docs:["The border-style shorthand CSS property sets the line style for all four sides of an element's border."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-style"]}),borderTop:s({css:"border-top",values:[],type:"string",docs:["The border-top shorthand CSS property sets all the properties of an element's top border."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-top"]}),borderTopColor:s({css:"border-top-color",values:[],type:n,docs:["The border-top-color CSS property sets the color of an element's top border. It can also be set with the shorthand CSS properties border-color or border-top."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-top-color"]}),borderTopLeftRadius:s({css:"border-top-left-radius",values:[],type:"string",docs:["The border-top-left-radius CSS property rounds the top-left corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-top-left-radius"]}),borderTopRightRadius:s({css:"border-top-right-radius",values:[],type:"string",docs:["The border-top-right-radius CSS property rounds the top-right corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-top-right-radius"]}),borderTopStyle:s({css:"border-top-style",values:["none","hidden","dotted","dashed","solid","double","groove","ridge","inset","outset"],type:"string",docs:["The border-top-style CSS property sets the line style of an element's top border."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-top-style"]}),borderTopWidth:s({css:"border-top-width",values:[],type:"string",docs:["The border-top-width CSS property sets the width of the top border of an element."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-top-width"]}),borderWidth:s({css:"border-width",values:[],type:"string",docs:["The border-width shorthand CSS property sets the width of an element's border."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/border-width"]}),bottom:s({css:"bottom",values:["auto"],type:"string",docs:["The bottom CSS property participates in setting the vertical position of a positioned element. It has no effect on non-positioned elements."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/bottom"]}),boxDecorationBreak:s({css:"box-decoration-break",values:["slice","clone"],type:"string",docs:["The box-decoration-break CSS property specifies how an element's fragments should be rendered when broken across multiple lines, columns, or pages."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/box-decoration-break"]}),boxShadow:s({css:"box-shadow",values:["none"],type:"string",docs:["The box-shadow CSS property adds shadow effects around an element's frame. You can set multiple effects separated by commas. A box shadow is described by X and Y offsets relative to the element, blur and spread radius, and color."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/box-shadow"]}),boxSizing:s({css:"box-sizing",values:["border-box","box-sizing"],type:"string",docs:["The box-sizing CSS property sets how the total width and height of an element is calculated."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/box-sizing"]}),breakAfter:s({css:"break-after",values:["auto","avoid","always","all","avoid-page","page","left","right","recto","verso","avoid-column","column","avoid-region","region"],type:"string",docs:["The break-after CSS property sets how page, column, or region breaks should behave after a generated box. If there is no generated box, the property is ignored."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/break-after"]}),breakBefore:s({css:"break-before",values:["auto","avoid","always","all","avoid-page","page","left","right","recto","verso","avoid-column","column","avoid-region","region"],type:"string",docs:["The break-before CSS property sets how page, column, or region breaks should behave before a generated box. If there is no generated box, the property is ignored."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/break-before"]}),breakInside:s({css:"break-inside",values:["auto","avoid","avoid-page","avoid-column","avoid-region"],type:"string",docs:["The break-inside CSS property sets how page, column, or region breaks should behave inside a generated box. If there is no generated box, the property is ignored."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/break-inside"]}),captionSide:s({css:"caption-side",values:["top","bottom","block-start","block-end","inline-start","inline-end"],type:"string",docs:["The caption-side CSS property puts the content of a table's <caption> on the specified side. The values are relative to the writing-mode of the table."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/caption-side"]}),caretColor:s({css:"caret-color",values:["auto","transparent","currentcolor"],type:n,docs:["The caret-color CSS property sets the color of the insertion caret, the visible marker where the next character typed will be inserted. This is sometimes referred to as the text input cursor. The caret appears in elements such as <input> or those with the contenteditable attribute. The caret is typically a thin vertical line that flashes to help make it more noticeable. By default, it is black, but its color can be altered with this property."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/caret-color"]}),clear:s({css:"clear",values:["none","left","right","both","inline-start","inline-end"],type:"string",docs:["The clear CSS property sets whether an element must be moved below (cleared) floating elements that precede it. The clear property applies to floating and non-floating elements."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/clear"]}),clip:s({css:"clip",values:["auto"],type:"string",docs:["The clip CSS property defines a visible portion of an element. The clip property applies only to absolutely positioned elements — that is, elements with position:absolute or position:fixed."],decorators:["deprecated"],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/clip"]}),clipPath:s({css:"clip-path",values:["none","margin-box","border-box","padding-box","content-box","fill-box","stroke","view-box"],type:"string",docs:["The clip-path CSS property creates a clipping region that sets what part of an element should be shown. Parts that are inside the region are shown, while those outside are hidden."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/clip-path"]}),color:s({css:"color",values:[],type:n,docs:["The color CSS property sets the foreground color value of an element's text and text decorations, and sets the currentcolor value. currentcolor may be used as an indirect value on other properties and is the default for other color properties, such as border-color."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/color"]}),colorAdjust:s({css:"print-color-adjust",values:[],type:"string",docs:["The print-color-adjust CSS property sets what, if anything, the user agent may do to optimize the appearance of the element on the output device. By default, the browser is allowed to make any adjustments to the element's appearance it determines to be necessary and prudent given the type and capabilities of the output device."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/print-color-adjust"]}),colorScheme:s({css:"color-scheme",values:["normal","light","dark"],type:"string",docs:[],links:[]}),columnCount:s({css:"column-count",values:["auto"],type:"string",docs:["The color-scheme CSS property allows an element to indicate which color schemes it can comfortably be rendered in."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme"]}),columnFill:s({css:"column-fill",values:["auto","balance","balance-all"],type:"string",docs:[],links:[]}),columnGap:s({css:"column-gap",values:["normal"],type:"string",docs:["The column-fill CSS property controls how an element's contents are balanced when broken into columns."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/column-fill"]}),columnRule:s({css:"column-rule",values:[],type:"string",docs:["The column-rule shorthand CSS property sets the width, style, and color of the line drawn between columns in a multi-column layout."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/column-rule"]}),columnRuleColor:s({css:"column-rule-color",values:[],type:n,docs:["The column-rule-color CSS property sets the color of the line drawn between columns in a multi-column layout."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/column-rule-color"]}),columnRuleStyle:s({css:"column-rule-style",values:["none","hidden","dotted","dashed","solid","double","groove","ridge","inset","outset"],type:"string",docs:["The column-rule-style CSS property sets the style of the line drawn between columns in a multi-column layout."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/column-rule-style"]}),columnRuleWidth:s({css:"column-rule-width",values:["thin","medium","thick"],type:"string",docs:["The column-rule-width CSS property sets the width of the line drawn between columns in a multi-column layout."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/column-rule-width"]}),columnSpan:s({css:"column-span",values:["none","all"],type:"string",docs:["The column-span CSS property makes it possible for an element to span across all columns when its value is set to all."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/column-span"]}),columnWidth:s({css:"column-width",values:["auto"],type:"string",docs:["The column-width CSS property sets the ideal column width in a multi-column layout. The container will have as many columns as can fit without any of them having a width less than the column-width value. If the width of the container is narrower than the specified value, the single column's width will be smaller than the declared column width."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/column-width"]}),columns:s({css:"columns",values:["auto"],type:"string",docs:["The columns CSS shorthand property sets the number of columns to use when drawing an element's contents, as well as those columns' widths."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/columns"]}),contain:s({css:"contain",values:["none","strict","content","size","layout","style","paint"],type:"string",docs:["The contain CSS property allows an author to indicate that an element and its contents are, as much as possible, independent of the rest of the document tree. Containment allows the browser to calculate layout, style, paint, size, or any combination of them for a specific area of the DOM. Changes within an element with containment applied are not propagated outside of the contained element to the rest of the page, leading to performance benefits through fewer DOM re-renders."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/contain"]}),content:s({css:"content",values:["normal","none","open-quote","close-quote","no-open-quote","no-close-quote"],type:"string",docs:["The content CSS property replaces an element with a generated value. Objects inserted using the content property are anonymous replaced elements."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/content"]}),contentVisibility:s({css:"content-visibility",values:["visible","hidden","auto"],type:"string",docs:["The content-visibility CSS property controls whether or not an element renders its contents at all, along with forcing a strong set of containments, allowing user agents to potentially omit large swathes of layout and rendering work until it becomes needed. Basically it enables the user agent to skip an element's rendering work (including layout and painting) until it is needed — which makes the initial page load much faster."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/content-visibility"]}),counterIncrement:s({css:"counter-increment",values:[],type:"string",docs:["The counter-increment CSS property increases or decreases the value of a CSS counter by a given value."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/counter-increment"]}),counterReset:s({css:"counter-reset",values:[],type:"string",docs:["The counter-reset CSS property resets a CSS counter to a given value. This property will create a new counter or reversed counter with the given name on the specified element."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/counter-reset"]}),counterSet:s({css:"counter-set",values:[],type:"string",docs:["The counter-set CSS property sets a CSS counter to a given value. It manipulates the value of existing counters, and will only create new counters if there isn't already a counter of the given name on the element."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/counter-set"]}),cursor:s({css:"cursor",values:["auto","default","none","context-menu","help","pointer","progress","wait","cell","crosshair","text","vertical-text","alias","move","no-drop","not-allowed","grab","grabbing","n-resize","e-resize","w-resize","ne-resize","nw-resize","se-resize","sw-resize","ew-resize","ns-resize","ns-resize","nesw-resize","nwse-resize","zoom-in","zoom-out"],type:"string",docs:["The cursor CSS property sets the mouse cursor, if any, to show when the mouse pointer is over an element."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/cursor"]}),direction:s({css:"direction",values:["ltr","rtl"],type:"string",docs:["The direction CSS property sets the direction of text, table columns, and horizontal overflow. Use rtl for languages written from right to left (like Hebrew or Arabic), and ltr for those written from left to right (like English and most other languages)."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/direction"]}),display:s({css:"display",values:["block","inline","inline-block","flex","inline-flex","grid","inline-grid","flow-root","none","contents","table","table-row"],type:"string",docs:["The display CSS property sets whether an element is treated as a block or inline element and the layout used for its children, such as flow layout, grid or flex."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/display"]}),emptyCells:s({css:"empty-cells",values:["show","hide"],type:"string",docs:["The empty-cells CSS property sets whether borders and backgrounds appear around <table> cells that have no visible content."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/empty-cells"]}),filter:s({css:"filter",values:["none"],type:"string",docs:["The filter CSS property applies graphical effects like blur or color shift to an element. Filters are commonly used to adjust the rendering of images, backgrounds, and borders."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/filter"]}),flex:s({css:"flex",values:["auto","none"],type:"string",docs:["The flex CSS shorthand property sets how a flex item will grow or shrink to fit the space available in its flex container."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/flex"]}),flexBasis:s({css:"flex-basis",values:["max-content","min-content","fit-content","auto"],type:"string",docs:["The flex-basis CSS property sets the initial main size of a flex item. It sets the size of the content box unless otherwise set with box-sizing."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/flex-basis"]}),flexDirection:s({css:"flex-direction",values:["row","row-reverse","column","column-reverse"],type:"string",docs:["The flex-direction CSS property sets how flex items are placed in the flex container defining the main axis and the direction (normal or reversed)."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/flex-direction"]}),flexFlow:s({css:"flex-flow",values:[],type:"string",docs:["The flex-flow CSS shorthand property specifies the direction of a flex container, as well as its wrapping behavior."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/flex-flow"]}),flexGrow:s({css:"flex-grow",values:[],type:"string",docs:["The flex-grow CSS property sets the flex grow factor of a flex item's main size."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/flex-grow"]}),flexShrink:s({css:"flex-shrink",values:[],type:"string",docs:["The flex-shrink CSS property sets the flex shrink factor of a flex item. If the size of all flex items is larger than the flex container, items shrink to fit according to flex-shrink."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/flex-shrink"]}),flexWrap:s({css:"flex-wrap",values:["nowrap","wrap","wrap-reverse"],type:"string",docs:["The flex-wrap CSS property sets whether flex items are forced onto one line or can wrap onto multiple lines. If wrapping is allowed, it sets the direction that lines are stacked."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/flex-wrap"]}),float:s({css:"float",values:["left","right","none","inline-start","inline-end"],type:"string",docs:["The float CSS property places an element on the left or right side of its container, allowing text and inline elements to wrap around it. The element is removed from the normal flow of the page, though still remaining a part of the flow (in contrast to absolute positioning)."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/float"]}),font:s({css:"font",values:[],type:"string",docs:["The font CSS shorthand property sets all the different properties of an element's font. Alternatively, it sets an element's font to a system font."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/font"]}),fontFamily:s({css:"font-family",values:["serif","sans-serif","monospace","cursive","fantasy","system-ui","ui-serif","ui-sans-serif","ui-monospace","ui-rounded","emoji","math","fangsong"],type:"string",docs:["The font-family CSS property specifies a prioritized list of one or more font family names and/or generic family names for the selected element."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/font-family"]}),fontFeatureSettings:s({css:"font-feature-settings",values:[],type:"string",docs:["The font-feature-settings CSS property controls advanced typographic features in OpenType fonts."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/font-feature-settings"]}),fontKerning:s({css:"font-kerning",values:["auto","normal","none"],type:"string",docs:["The font-kerning CSS property sets the use of the kerning information stored in a font."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/font-kerning"]}),fontSize:s({css:"font-size",values:["xx-small","x-small","small","medium","large","x-large","xx-large","xxx-large"],type:"string",docs:["The font-size CSS property sets the size of the font. Changing the font size also updates the sizes of the font size-relative <length> units, such as em, ex, and so forth."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/font-size"]}),fontSizeAdjust:s({css:"font-size-adjust",values:["none"],type:"string",docs:["The font-size-adjust CSS property sets the size of lower-case letters relative to the current font size (which defines the size of upper-case letters)."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/font-size-adjust"]}),fontStretch:s({css:"font-stretch",values:["ultra-condensed","extra-condensed","condensed","semi-condensed","normal","semi-expanded","expanded","extra-expanded","ultra-expanded"],type:"string",docs:["The font-stretch CSS property selects a normal, condensed, or expanded face from a font."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/font-stretch"]}),fontStyle:s({css:"font-style",values:["normal","italic","oblique"],type:"string",docs:["The font-style CSS property sets whether a font should be styled with a normal, italic, or oblique face from its font-family."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/font-style"]}),fontSynthesis:s({css:"font-synthesis",values:["none","weight","style","small-caps"],type:"string",docs:["The font-synthesis CSS property controls which missing typefaces, bold, italic, or small-caps, may be synthesized by the browser."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/font-synthesis"]}),fontVariant:s({css:"font-variant",values:[],type:"string",docs:["The font-variant CSS shorthand property allows you to set all the font variants for a font."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/font-variant"]}),fontVariantAlternates:s({css:"font-variant-alternates",values:[],type:"string",docs:["The font-variant-alternates CSS property controls the usage of alternate glyphs. These alternate glyphs may be referenced by alternative names defined in @font-feature-values."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/font-variant-alternates"]}),fontVariantCaps:s({css:"font-variant-caps",values:[],type:"string",docs:["The font-variant-caps CSS property controls the use of alternate glyphs for capital letters."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/font-variant-caps"]}),fontVariantEastAsian:s({css:"font-variant-east-asian",values:[],type:"string",docs:["The font-variant-east-asian CSS property controls the use of alternate glyphs for East Asian scripts, like Japanese and Chinese."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/font-variant-east-asian"]}),fontVariantLigatures:s({css:"font-variant-ligatures",values:[],type:"string",docs:["The font-variant-ligatures CSS property controls which ligatures and contextual forms are used in textual content of the elements it applies to. This leads to more harmonized forms in the resulting text."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/font-variant-ligatures"]}),fontVariantNumeric:s({css:"font-variant-numeric",values:[],type:"string",docs:["The font-variant-numeric CSS property controls the usage of alternate glyphs for numbers, fractions, and ordinal markers."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/font-variant-numeric"]}),fontVariantPosition:s({css:"font-variant-position",values:[],type:"string",docs:["The font-variant-position CSS property controls the use of alternate, smaller glyphs that are positioned as superscript or subscript."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/font-variant-position"]}),fontVariantSettings:s({css:"font-variant-settings",values:[],type:"string",docs:[],links:[]}),fontWeight:s({css:"font-weight",values:["normal","bold","lighter","bolder","100","200","300","400","500","600","700","800","900"],type:"string",docs:["The font-weight CSS property sets the weight (or boldness) of the font. The weights available depend on the font-family that is currently set."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight"]}),forcedColorAdjust:s({css:"forced-color-adjust",values:["auto","none"],type:n,docs:["The forced-color-adjust CSS property allows authors to opt certain elements out of forced colors mode. This then restores the control of those values to CSS."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/forced-color-adjust"]}),gap:s({css:"gap",values:[],type:"string",docs:[],links:[]}),grid:s({css:"grid",values:["none"],type:"string",docs:["The gap CSS property sets the gaps (gutters) between rows and columns. It is a shorthand for row-gap and column-gap."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/gap"]}),gridArea:s({css:"grid-area",values:[],type:"string",docs:["The grid-area CSS shorthand property specifies a grid item's size and location within a grid by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the edges of its grid area."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/grid-area"]}),gridAutoColumns:s({css:"grid-auto-columns",values:["in-content","max-content","auto"],type:"string",docs:["The grid-auto-columns CSS property specifies the size of an implicitly-created grid column track or pattern of tracks."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/grid-auto-columns"]}),gridAutoFlow:s({css:"grid-auto-flow",values:["row","column","dense"],type:"string",docs:["The grid-auto-flow CSS property controls how the auto-placement algorithm works, specifying exactly how auto-placed items get flowed into the grid."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/grid-auto-flow"]}),gridAutoRows:s({css:"grid-auto-rows",values:["min-content","max-content","auto"],type:"string",docs:["The grid-auto-rows CSS property specifies the size of an implicitly-created grid row track or pattern of tracks."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/grid-auto-rows"]}),gridColumn:s({css:"grid-column",values:["auto"],type:"string",docs:["The grid-column CSS shorthand property specifies a grid item's size and location within a grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column"]}),gridColumnEnd:s({css:"grid-column-end",values:["auto"],type:"string",docs:["The grid-column-end CSS property specifies a grid item's end position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the block-end edge of its grid area."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column-end"]}),gridColumnGap:s({css:"grid-column-gap",values:["auto"],type:"string",docs:["The column-gap CSS property sets the size of the gap (gutter) between an element's columns."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/column-gap"]}),gridColumnStart:s({css:"grid-column-start",values:[],type:"string",docs:["The grid-column-start CSS property specifies a grid item's start position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement. This start position defines the block-start edge of the grid area."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column-start"]}),gridGap:s({css:"grid-gap",values:[],type:"string",docs:["The gap CSS property sets the gaps (gutters) between rows and columns. It is a shorthand for row-gap and column-gap."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/gap"]}),gridRow:s({css:"grid-row",values:["auto"],type:"string",docs:["The grid-row CSS shorthand property specifies a grid item's size and location within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/grid-row"]}),gridRowEnd:s({css:"grid-row-end",values:["auto"],type:"string",docs:["The grid-row-end CSS property specifies a grid item's end position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-end edge of its grid area."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/grid-row-end"]}),gridRowGap:s({css:"grid-row-gap",values:["auto"],type:"string",docs:["The row-gap CSS property sets the size of the gap (gutter) between an element's rows."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/row-gap"]}),gridRowStart:s({css:"grid-row-start",values:[],type:"string",docs:["The grid-row-start CSS property specifies a grid item's start position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start edge of its grid area."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/grid-row-start"]}),gridTemplate:s({css:"grid-template",values:["none"],type:"string",docs:["The grid-template CSS property is a shorthand property for defining grid columns, rows, and areas."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/grid-template"]}),gridTemplateAreas:s({css:"grid-template-areas",values:["none"],type:"string",docs:["The grid-template-areas CSS property specifies named grid areas, establishing the cells in the grid and assigning them names."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/grid-template-areas"]}),gridTemplateColumns:s({css:"grid-template-columns",values:["none"],type:"string",docs:["The grid-template-columns CSS property defines the line names and track sizing functions of the grid columns."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/grid-template-columns"]}),gridTemplateRows:s({css:"grid-template-rows",values:["none"],type:"string",docs:["The grid-template-rows CSS property defines the line names and track sizing functions of the grid rows."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/grid-template-rows"]}),hangingPunctuation:s({css:"hanging-punctuation",values:["none","first","last","force-end","allow-end"],type:"string",docs:["The hanging-punctuation CSS property specifies whether a punctuation mark should hang at the start or end of a line of text. Hanging punctuation may be placed outside the line box."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/hanging-punctuation"]}),height:s({css:"height",values:["max-content","min-content","auto"],type:"string",docs:["The height CSS property specifies the height of an element. By default, the property defines the height of the content area. If box-sizing is set to border-box, however, it instead determines the height of the border area."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/height"]}),hyphens:s({css:"hyphens",values:["none","manual","auto"],type:"string",support:["-webkit-hyphens","-moz-hyphens","-ms-hyphens"],docs:["The hyphens CSS property specifies how words should be hyphenated when text wraps across multiple lines. It can prevent hyphenation entirely, hyphenate at manually-specified points within the text, or let the browser automatically insert hyphens where appropriate."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/hyphens"]}),isolation:s({css:"isolation",values:["auto","isolate"],type:"string",docs:["The isolation CSS property determines whether an element must create a new stacking context."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/isolation"]}),imageOrientation:s({css:"image-orientation",values:["none","from-image"],type:"string",docs:["The image-orientation CSS property specifies a layout-independent correction to the orientation of an image."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/image-orientation"]}),imageRendering:s({css:"image-rendering",values:["auto","crisp-edge","pixelated"],type:"string",docs:["The image-rendering CSS property sets an image scaling algorithm. The property applies to an element itself, to any images set in its other properties, and to its descendants."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/image-rendering"]}),imageResolution:s({css:"image-resolution",values:["from-image"],type:"string",docs:["The image-resolution CSS property specifies the intrinsic resolution of all raster images used in or on the element. It affects content images such as replaced elements and generated content, and decorative images such as background-image images."],decorators:["experimental"],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/image-resolution"]}),initialLetter:s({css:"initial-letter",values:["normal"],type:"string",docs:["The initial-letter CSS property sets styling for dropped, raised, and sunken initial letters."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/initial-letter"]}),inlineSize:s({css:"inline-size",values:["auto","max-content","min-content"],type:"string",docs:["The inline-size CSS property defines the horizontal or vertical size of an element's block, depending on its writing mode. It corresponds to either the width or the height property, depending on the value of writing-mode."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/inline-size"]}),inset:s({css:"inset",values:["auto"],type:"string",docs:["The inset CSS property is a shorthand that corresponds to the top, right, bottom, and/or left properties. It has the same multi-value syntax of the margin shorthand."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/inset"]}),insetBlock:s({css:"inset-inline",values:["auto"],type:"string",docs:["The inset-inline CSS property defines the logical start and end offsets of an element in the inline direction, which maps to physical offsets depending on the element's writing mode, directionality, and text orientation. It corresponds to the top and bottom, or right and left properties depending on the values defined for writing-mode, direction, and text-orientation."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/inset-inline"]}),insetBlockStart:s({css:"inset-block-start",values:["auto"],type:"string",docs:["The inset-block-start CSS property defines the logical block start offset of an element, which maps to a physical inset depending on the element's writing mode, directionality, and text orientation. It corresponds to the top, right, bottom, or left property depending on the values defined for writing-mode, direction, and text-orientation."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/inset-block-start"]}),insetInlineStart:s({css:"inset-inline-start",values:["auto"],type:"string",docs:["The inset-inline-start CSS property defines the logical inline start inset of an element, which maps to a physical offset depending on the element's writing mode, directionality, and text orientation. It corresponds to the top, right, bottom, or left property depending on the values defined for writing-mode, direction, and text-orientation."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/inset-inline-start"]}),justifyContent:s({css:"justify-content",values:["center","start","end","flex-start","flex-end","left","right","normal","space-between","space-around","stretch","safe center","unsafe center"],type:"string",docs:["The CSS justify-content property defines how the browser distributes space between and around content items along the main-axis of a flex container, and the inline axis of a grid container."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/justify-content"]}),justifyItems:s({css:"justify-items",values:["center","start","end","flex-start","flex-end","left","right","normal","space-between","space-around","stretch","safe center","unsafe center","self-start","self-end","baseline","first baseline","last baseline","legacy right","legacy left","legacy center"],type:"string",docs:["The CSS justify-items property defines the default justify-self for all items of the box, giving them all a default way of justifying each box along the appropriate axis."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/justify-items"]}),justifySelf:s({css:"justify-self",values:["auto","normal","stretch","center","start","end","flex-start","flex-end","self-start","self-end","left","right","baseline","first baseline","last baseline","safe center","unsafe center"],type:"string",docs:["The CSS justify-self property sets the way a box is justified inside its alignment container along the appropriate axis."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/justify-self"]}),left:s({css:"left",values:["auto"],type:"string",docs:["The left CSS property participates in specifying the horizontal position of a positioned element. It has no effect on non-positioned elements."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/left"]}),letterSpacing:s({css:"letter-spacing",values:["normal"],type:"string",docs:["The letter-spacing CSS property sets the horizontal spacing behavior between text characters. This value is added to the natural spacing between characters while rendering the text. Positive values of letter-spacing causes characters to spread farther apart, while negative values of letter-spacing bring characters closer together."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/letter-spacing"]}),lineHeight:s({css:"line-height",values:["normal"],type:"string",docs:["The line-height CSS property sets the height of a line box. It's commonly used to set the distance between lines of text. On block-level elements, it specifies the minimum height of line boxes within the element. On non-replaced inline elements, it specifies the height that is used to calculate line box height."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/line-height"]}),lineBreak:s({css:"line-break",values:["auto","loose","normal","strict","anywhere"],type:"string",docs:["The line-break CSS property sets how to break lines of Chinese, Japanese, or Korean (CJK) text when working with punctuation and symbols."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/line-break"]}),listStyle:s({css:"list-style",values:[],type:"string",docs:["The list-style CSS shorthand property allows you to set all the list style properties at once."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/list-style"]}),listStyleImage:s({css:"list-style-image",values:["none"],type:"string",docs:["The list-style-image CSS property sets an image to be used as the list item marker."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/list-style-image"]}),listStylePosition:s({css:"list-style-position",values:["inside","outside"],type:"string",docs:["The list-style-position CSS property sets the position of the ::marker relative to a list item."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/list-style-position"]}),listStyleType:s({css:"list-style-type",values:["none","disc","circle","square","decimal","georgian","trad-chinese-informal","kannada","decimal-leading-zero","lower-roman","upper-roman","lower-greek","lower-alpha","upper-alpha","armenian","bengali","cambodian","devanagari","gujarati","kannada","lao","malayalam","myanmar","oriya","telugu"],type:"string",docs:["The list-style-type CSS property sets the marker (such as a disc, character, or custom counter style) of a list item element."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/list-style-type"]}),margin:s({css:"margin",values:["auto"],type:"string",docs:["The margin CSS shorthand property sets the margin area on all four sides of an element."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/margin"]}),marginBlock:s({css:"margin-block",values:[],type:"string",docs:["The margin-block CSS shorthand property defines the logical block start and end margins of an element, which maps to physical margins depending on the element's writing mode, directionality, and text orientation."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/margin-block"]}),marginBlockEnd:s({css:"margin-block-end",values:["auto"],type:"string",docs:["The margin-block-end CSS property defines the logical block end margin of an element, which maps to a physical margin depending on the element's writing mode, directionality, and text orientation."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/margin-block-end"]}),marginBlockStart:s({css:"margin-block-start",values:["auto"],type:"string",docs:["The margin-block-start CSS property defines the logical block start margin of an element, which maps to a physical margin depending on the element's writing mode, directionality, and text orientation."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/margin-block-start"]}),marginBottom:s({css:"margin-bottom",values:["auto"],type:"string",docs:["The margin-bottom CSS property sets the margin area on the bottom of an element. A positive value places it farther from its neighbors, while a negative value places it closer."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/margin-bottom"]}),marginInline:s({css:"margin-inline",values:["auto"],type:"string",docs:["The margin-inline CSS shorthand property is a shorthand property that defines both the logical inline start and end margins of an element, which maps to physical margins depending on the element's writing mode, directionality, and text orientation."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/margin-inline"]}),marginInlineEnd:s({css:"margin-inline-end",values:["auto"],type:"string",docs:["The margin-inline-end CSS property defines the logical inline end margin of an element, which maps to a physical margin depending on the element's writing mode, directionality, and text orientation. In other words, it corresponds to the margin-top, margin-right, margin-bottom or margin-left property depending on the values defined for writing-mode, direction, and text-orientation."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/margin-inline-end"]}),marginInlineStart:s({css:"margin-inline-start",values:["auto"],type:"string",docs:["The margin-inline-start CSS property defines the logical inline start margin of an element, which maps to a physical margin depending on the element's writing mode, directionality, and text orientation. It corresponds to the margin-top, margin-right, margin-bottom, or margin-left property depending on the values defined for writing-mode, direction, and text-orientation."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/margin-inline-start"]}),marginLeft:s({css:"margin-left",values:["auto"],type:"string",docs:["The margin-left CSS property sets the margin area on the left side of an element. A positive value places it farther from its neighbors, while a negative value places it closer."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/margin-left"]}),marginRight:s({css:"margin-right",values:["auto"],type:"string",docs:["The margin-right CSS property sets the margin area on the right side of an element. A positive value places it farther from its neighbors, while a negative value places it closer."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/margin-right"]}),marginTop:s({css:"margin-top",values:["auto"],type:"string",docs:["The margin-top CSS property sets the margin area on the top of an element. A positive value places it farther from its neighbors, while a negative value places it closer."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/margin-top"]}),mask:s({css:"mask",values:["none"],type:"string",docs:["The mask CSS shorthand property hides an element (partially or fully) by masking or clipping the image at specific points."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/mask"]}),maskBorder:s({css:"mask-border",values:[],type:"string",docs:["The mask-border CSS shorthand property lets you create a mask along the edge of an element's border."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/mask-border"]}),maskBorderMode:s({css:"mask-border-mode",values:["luminance","alpha"],type:"string",docs:["The mask-border-mode CSS property specifies the blending mode used in a mask border."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/mask-border-mode"]}),maskBorderOutset:s({css:"mask-border-outset",values:[],type:"string",docs:["The mask-border-outset CSS property specifies the distance by which an element's mask border is set out from its border box."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/mask-border-outset"]}),maskBorderRepeat:s({css:"mask-border-repeat",values:["stretch","repeat","round","space"],type:"string",docs:["The mask-border-repeat CSS property sets how the edge regions of a source image are adjusted to fit the dimensions of an element's mask border."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/mask-border-repeat"]}),maskBorderSlice:s({css:"mask-border-slice",values:[],type:"string",docs:["The mask-border-slice CSS property divides the image set by mask-border-source into regions. These regions are used to form the components of an element's mask border."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/mask-border-slice"]}),maskBorderSource:s({css:"mask-border-source",values:["none"],type:"string",docs:["The mask-border-source CSS property sets the source image used to create an element's mask border."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/mask-border-source"]}),maskBorderWidth:s({css:"mask-border-width",values:["auto"],type:"string",docs:["The mask-border-width CSS property sets the width of an element's mask border."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/mask-border-width"]}),maskClip:s({css:"mask-clip",values:["content-box","padding-box","border-box","margin-box","fill-box","stroke-box","view-box","no-clip"],type:"string",docs:["The mask-clip CSS property determines the area which is affected by a mask. The painted content of an element must be restricted to this area."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/mask-clip"]}),maskComposite:s({css:"mask-composite",values:["add","subtract","intersect","exclude"],type:"string",docs:["The mask-composite CSS property represents a compositing operation used on the current mask layer with the mask layers below it."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/mask-composite"]}),maskImage:s({css:"mask-image",values:["none"],type:"string",docs:["The mask-image CSS property sets the image that is used as mask layer for an element. By default this means the alpha channel of the mask image will be multiplied with the alpha channel of the element. This can be controlled with the mask-mode property."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/mask-image"]}),maskMode:s({css:"mask-mode",values:["alpha","luminance","match-source"],type:"string",docs:["The mask-mode CSS property sets whether the mask reference defined by mask-image is treated as a luminance or alpha mask."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/mask-mode"]}),maskOrigin:s({css:"mask-origin",values:["content-box","padding-box","border-box","margin-box","fill-box","stroke-box","view-box","content","padding","border"],type:"string",docs:["The mask-origin CSS property sets the origin of a mask."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/mask-origin"]}),maskPosition:s({css:"mask-position",values:["top","bottom","left","right","center"],type:"string",docs:["The mask-position CSS property sets the initial position, relative to the mask position layer set by mask-origin, for each defined mask image."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/mask-position"]}),maskRepeat:s({css:"mask-repeat",values:["repeat-x","repeat-y","repeat","space","round","no-repeat"],type:"string",docs:["The mask-repeat CSS property sets how mask images are repeated. A mask image can be repeated along the horizontal axis, the vertical axis, both axes, or not repeated at all."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/mask-repeat"]}),maskSize:s({css:"mask-size",values:["cover","contain"],type:"string",docs:["The mask-size CSS property specifies the sizes of the mask images. The size of the image can be fully or partially constrained in order to preserve its intrinsic ratio."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/mask-size"]}),maskType:s({css:"mask-type",values:["alpha","luminance"],type:"string",docs:["The mask-type CSS property sets whether an SVG <mask> element is used as a luminance or an alpha mask. It applies to the <mask> element itself."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/mask-type"]}),mathStyle:s({css:"math-style",values:["normal","compact"],type:"string",docs:["The math-style property indicates whether MathML equations should render with normal or compact height.",""],decorators:["experimental"],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/math-style"]}),maxBlockSize:s({css:"max-block-size",values:["none","max-content","min-content"],type:"string",docs:["The max-block-size CSS property specifies the maximum size of an element in the direction opposite that of the writing direction as specified by writing-mode. That is, if the writing direction is horizontal, then max-block-size is equivalent to max-height; if the writing direction is vertical, max-block-size is the same as max-width."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/max-block-size"]}),maxInlineSize:s({css:"max-inline-size",values:["none","max-content","min-content"],type:"string",docs:["The max-inline-size CSS property defines the horizontal or vertical maximum size of an element's block, depending on its writing mode. It corresponds to either the max-width or the max-height property, depending on the value of writing-mode."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/max-inline-size"]}),minBlockSize:s({css:"min-block-size",values:["none","max-content","min-content"],type:"string",docs:["The min-block-size CSS property defines the minimum horizontal or vertical size of an element's block, depending on its writing mode. It corresponds to either the min-width or the min-height property, depending on the value of writing-mode."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/min-block-size"]}),minInlineSize:s({css:"min-inline-size",values:["none","max-content","min-content"],type:"string",docs:["The min-inline-size CSS property defines the horizontal or vertical minimal size of an element's block, depending on its writing mode. It corresponds to either the min-width or the min-height property, depending on the value of writing-mode."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/min-inline-size"]}),maxHeight:s({css:"max-height",values:["none","max-content","min-content"],type:"string",docs:["The max-height CSS property sets the maximum height of an element. It prevents the used value of the height property from becoming larger than the value specified for max-height."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/max-height"]}),maxWidth:s({css:"max-width",values:["none","max-content","min-content"],type:"string",docs:["The max-width CSS property sets the maximum width of an element. It prevents the used value of the width property from becoming larger than the value specified by max-width."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/max-width"]}),minHeight:s({css:"min-height",values:["none","max-content","min-content"],type:"string",docs:["The min-height CSS property sets the minimum height of an element. It prevents the used value of the height property from becoming smaller than the value specified for min-height."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/min-height"]}),minWidth:s({css:"min-width",values:["none","max-content","min-content"],type:"string",docs:["The min-width CSS property sets the minimum width of an element. It prevents the used value of the width property from becoming smaller than the value specified for min-width."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/min-width"]}),mixBlendMode:s({css:"mix-blend-mode",values:["normal","multiply","screen","overlay","darken","lighten","color-dodge","color-burn","hard-light","soft-light","difference","exclusion","hue","saturation","color","luminosity"],type:"string",docs:["The mix-blend-mode CSS property sets how an element's content should blend with the content of the element's parent and the element's background."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode"]}),objectFit:s({css:"object-fit",values:["contain","cover","fill","none","scale-down"],type:"string",docs:["The object-fit CSS property sets how the content of a replaced element, such as an <img> or <video>, should be resized to fit its container."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit"]}),objectPosition:s({css:"object-position",values:["top","bottom","left","right","center"],type:"string",docs:["The object-position CSS property specifies the alignment of the selected replaced element's contents within the element's box. Areas of the box which aren't covered by the replaced element's object will show the element's background."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/object-position"]}),offset:s({css:"offset",values:["none","auto"],type:"string",docs:["The offset CSS shorthand property sets all the properties required for animating an element along a defined path."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/offset"]}),offsetAnchor:s({css:"offset-anchor",values:["top","bottom","left","right","center","auto"],type:"string",docs:["The offset-anchor CSS property specifies the point inside the box of an element traveling along an offset-path that is actually moving along the path."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/offset-anchor"]}),offsetDistance:s({css:"offset-distance",values:[],type:"string",docs:["The offset-distance CSS property specifies a position along an offset-path for an element to be placed."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/offset-distance"]}),offsetPath:s({css:"offset-path",values:["none","margin-box","stroke-box"],type:"string",docs:["The offset-path CSS property specifies a motion path for an element to follow and defines the element's positioning within the parent container or SVG coordinate system."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/offset-path"]}),offsetPosition:s({css:"offset-position",values:["top","bottom","left","right","center","auto"],type:"string",docs:["The offset-position CSS property defines the initial position of the offset-path."],decorators:["experimental"],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/offset-position"]}),offsetRotate:s({css:"offset-rotate",values:["auto"],type:"string",docs:["The offset-rotate CSS property defines the orientation/direction of the element as it is positioned along the offset-path."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/offset-rotate"]}),opacity:s({css:"opacity",values:[],type:"string",docs:["The opacity CSS property sets the opacity of an element. Opacity is the degree to which content behind an element is hidden, and is the opposite of transparency."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/opacity"]}),order:s({css:"order",values:[],type:"string",docs:["The order CSS property sets the order to lay out an item in a flex or grid container. Items in a container are sorted by ascending order value and then by their source code order."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/order"]}),orphans:s({css:"orphans",values:[],type:"string",docs:["The orphans CSS property sets the minimum number of lines in a block container that must be shown at the bottom of a page, region, or column."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/orphans"]}),outline:s({css:"outline",values:[],type:"string",docs:["The outline CSS shorthand property sets most of the outline properties in a single declaration."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/outline"]}),outlineColor:s({css:"outline-color",values:[],type:n,docs:["The outline-color CSS property sets the color of an element's outline."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/outline-color"]}),outlineOffset:s({css:"outline-offset",values:[],type:"string",docs:["The outline-offset CSS property sets the amount of space between an outline and the edge or border of an element."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/outline-offset"]}),outlineStyle:s({css:"outline-style",values:["auto","none","dotted","dashed","solid","double","groove","ridge","inset","outset"],type:"string",docs:["The outline-style CSS property sets the style of an element's outline. An outline is a line that is drawn around an element, outside the border."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/outline-style"]}),outlineWidth:s({css:"outline-width",values:["thin","medium","thick"],type:"string",docs:["The CSS outline-width property sets the thickness of an element's outline. An outline is a line that is drawn around an element, outside the border."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/outline-width"]}),overflow:s({css:"overflow",values:["visible","hidden","clip","scroll","auto"],type:"string",docs:["The overflow CSS shorthand property sets the desired behavior for an element's overflow — i.e. when an element's content is too big to fit in its block formatting context — in both directions."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/overflow"]}),overflowAnchor:s({css:"overflow-anchor",values:["auto","none"],type:"string",docs:["The overflow-anchor CSS property provides a way to opt out of the browser's scroll anchoring behavior, which adjusts scroll position to minimize content shifts."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/overflow-anchor"]}),overflowBlock:s({css:"overflow-block",values:["visible","hidden","scroll","auto"],type:"string",docs:["The overflow-block CSS property sets what shows when content overflows the block start and block end edges of a box. This may be nothing, a scroll bar, or the overflow content."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/overflow-block"]}),overflowClipMargin:s({css:"overflow-clip-margin",values:[],type:"string",docs:["The overflow-clip-margin CSS property determines how far outside its bounds an element with overflow: clip may be painted before being clipped."],decorators:["experimental"],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/overflow-clip-margin"]}),overflowInline:s({css:"overflow-inline",values:["visible","hidden","scroll","auto"],type:"string",docs:["The overflow-inline CSS property sets what shows when content overflows the inline start and end edges of a box. This may be nothing, a scroll bar, or the overflow content."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/overflow-inline"]}),overflowWrap:s({css:"overflow-wrap",values:["normal","break-word","anywhere"],type:"string",docs:["The overflow-wrap CSS property applies to inline elements, setting whether the browser should insert line breaks within an otherwise unbreakable string to prevent text from overflowing its line box."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/overflow-wrap"]}),overflowX:s({css:"overflow-x",values:["visible","hidden","clip","scroll","auto"],type:"string",docs:["The overflow-x CSS property sets what shows when content overflows a block-level element's left and right edges. This may be nothing, a scroll bar, or the overflow content."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/overflow-x"]}),overflowY:s({css:"overflow-y",values:["visible","hidden","clip","scroll","auto"],type:"string",docs:["The overflow-y CSS property sets what shows when content overflows a block-level element's top and bottom edges. This may be nothing, a scroll bar, or the overflow content."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/overflow-y"]}),overscrollBehavior:s({css:"overscroll-behavior",values:["auto","contain","none"],type:"string",docs:["The overscroll-behavior CSS property sets what a browser does when reaching the boundary of a scrolling area. It's a shorthand for overscroll-behavior-x and overscroll-behavior-y."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/overscroll-behavior"]}),overscrollBehaviorBlock:s({css:"overscroll-behavior-block",values:["auto","contain","none"],type:"string",docs:["The overscroll-behavior-block CSS property sets the browser's behavior when the block direction boundary of a scrolling area is reached."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/overscroll-behavior-block"]}),overscrollBehaviorInline:s({css:"overscroll-behavior-inline",values:["auto","contain","none"],type:"string",docs:["The overscroll-behavior-inline CSS property sets the browser's behavior when the inline direction boundary of a scrolling area is reached."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/overscroll-behavior-inline"]}),overscrollBehaviorX:s({css:"overscroll-behavior-x",values:["auto","contain","none"],type:"string",docs:["The overscroll-behavior-x CSS property sets the browser's behavior when the horizontal boundary of a scrolling area is reached."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/overscroll-behavior-x"]}),overscrollBehaviorY:s({css:"overscroll-behavior-y",values:["auto","contain","none"],type:"string",docs:["The overscroll-behavior-y CSS property sets the browser's behavior when the vertical boundary of a scrolling area is reached."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/overscroll-behavior-y"]}),right:s({css:"right",values:["auto"],type:"string",docs:["The right CSS property participates in specifying the horizontal position of a positioned element. It has no effect on non-positioned elements."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/right"]}),padding:s({css:"padding",values:[],type:"string",docs:["The padding CSS shorthand property sets the padding area on all four sides of an element at once."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/padding"]}),paddingBlock:s({css:"padding-block",values:[],type:"string",docs:["The padding-block CSS shorthand property defines the logical block start and end padding of an element, which maps to physical padding properties depending on the element's writing mode, directionality, and text orientation."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/padding-block"]}),paddingBlockEnd:s({css:"padding-block-end",values:[],type:"string",docs:["The padding-block-end CSS property defines the logical block end padding of an element, which maps to a physical padding depending on the element's writing mode, directionality, and text orientation."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/padding-block-end"]}),paddingBlockStart:s({css:"padding-block-start",values:[],type:"string",docs:["The padding-block-start CSS property defines the logical block start padding of an element, which maps to a physical padding depending on the element's writing mode, directionality, and text orientation."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/padding-block-start"]}),paddingBottom:s({css:"padding-bottom",values:[],type:"string",docs:["The padding-bottom CSS property sets the height of the padding area on the bottom of an element."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/padding-bottom"]}),paddingInline:s({css:"padding-inline",values:[],type:"string",docs:["The padding-inline CSS shorthand property defines the logical inline start and end padding of an element, which maps to physical padding properties depending on the element's writing mode, directionality, and text orientation."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/padding-inline"]}),paddingInlineEnd:s({css:"padding-inline-end",values:[],type:"string",docs:["The padding-inline-end CSS property defines the logical inline end padding of an element, which maps to a physical padding depending on the element's writing mode, directionality, and text orientation."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/padding-inline-end"]}),paddingInlineStart:s({css:"padding-inline-start",values:[],type:"string",docs:["The padding-inline-start CSS property defines the logical inline start padding of an element, which maps to a physical padding depending on the element's writing mode, directionality, and text orientation."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/padding-inline-start"]}),paddingLeft:s({css:"padding-left",values:[],type:"string",docs:["The padding-left CSS property sets the width of the padding area to the left of an element."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/padding-left"]}),paddingRight:s({css:"padding-right",values:[],type:"string",docs:["The padding-right CSS property sets the width of the padding area on the right of an element."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/padding-right"]}),paddingTop:s({css:"padding-top",values:[],type:"string",docs:["The padding-top CSS property sets the height of the padding area on the top of an element."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/padding-top"]}),pageBreakAfter:s({css:"page-break-after",values:[],type:"string",docs:["The page-break-after CSS property adjusts page breaks after the current element.","","`Warning: This property has been replaced by the break-after property.`"],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/page-break-after"]}),pageBreakBefore:s({css:"page-break-before",values:[],type:"string",docs:["The page-break-before CSS property adjusts page breaks before the current element.","","`Warning: This property has been replaced by the break-before property.`"],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/page-break-before"]}),pageBreakInside:s({css:"page-break-inside",values:[],type:"string",docs:["The page-break-inside CSS property adjusts page breaks inside the current element.","","`Warning: This property has been replaced by the break-inside property.`"],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/page-break-inside"]}),perspective:s({css:"perspective",values:["none"],type:"string",docs:["The perspective CSS property determines the distance between the z=0 plane and the user in order to give a 3D-positioned element some perspective."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/perspective"]}),perspectiveOrigin:s({css:"perspective-origin",values:["top","center","right"],type:"string",docs:["The perspective-origin CSS property determines the position at which the viewer is looking. It is used as the vanishing point by the perspective property."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/perspective-origin"]}),placeContent:s({css:"place-content",values:["start","end","flex-start","flex-end","center","center","left","right","space-between","baseline","first baseline","last baseline","space-evenly","stretch","safe","unsafe"],type:"string",docs:["The place-content CSS shorthand property allows you to align content along both the block and inline directions at once (i.e. the align-content and justify-content properties) in a relevant layout system such as Grid or Flexbox."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/place-content"]}),placeItems:s({css:"place-items",values:["start","end","flex-start","flex-end","center","center","left","right","space-between","baseline","first baseline","last baseline","space-evenly","stretch","safe","unsafe","normal","legacy","self-start","self-end"],type:"string",docs:["The CSS place-items shorthand property allows you to align items along both the block and inline directions at once (i.e. the align-items and justify-items properties) in a relevant layout system such as Grid or Flexbox. If the second value is not set, the first value is also used for it."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/place-items"]}),pointerEvents:s({css:"pointer-events",values:["auto","none","visiblePainted","visibleFill","visibleStroke","visible","painted","fill","stroke","all"],type:"string",docs:["The pointer-events CSS property sets under what circumstances (if any) a particular graphic element can become the target of pointer events."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events"]}),position:s({css:"position",values:["static","relative","absolute","fixed","sticky"],type:"string",docs:["The position CSS property sets how an element is positioned in a document. The top, right, bottom, and left properties determine the final location of positioned elements."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/position"]}),quotes:s({css:"quotes",values:["none","auto"],type:"string",docs:["The quotes CSS property sets how the browser should render quotation marks that are added using the open-quotes or close-quotes values of the CSS content property."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/quotes"]}),resize:s({css:"resize",values:[],methods:["none","both","horizontal","vertical","block","inline"],type:"string",docs:["The resize CSS property sets whether an element is resizable, and if so, in which directions."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/resize"]}),rotate:s({css:"rotate",values:["none"],type:"string",docs:["The rotate CSS property allows you to specify rotation transforms individually and independently of the transform property. This maps better to typical user interface usage, and saves having to remember the exact order of transform functions to specify in the transform property."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/rotate"]}),rowGap:s({css:"row-gap",values:[],type:"string",docs:["The row-gap CSS property sets the size of the gap (gutter) between an element's rows."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/row-gap"]}),rubyAlign:s({css:"ruby-align",values:["start","center","space-between","space-around"],type:"string",docs:["The ruby-align CSS property defines the distribution of the different ruby elements over the base."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/ruby-align"],docs:[],links:[]}),rubyPosition:s({css:"ruby-position",values:["over","under","inter-character","alternate"],type:"string",docs:["The ruby-position CSS property defines the position of a ruby element relatives to its base element. It can be positioned over the element (over), under it (under), or between the characters on their right side (inter-character)."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/ruby-position"]}),scale:s({css:"scale",values:[],methods:["none"],type:"string",docs:["The scale CSS property allows you to specify scale transforms individually and independently of the transform property. This maps better to typical user interface usage, and saves having to remember the exact order of transform functions to specify in the transform value."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/scale"]}),scrollBehavior:s({css:"scroll-behavior",values:["auto","smooth"],type:"string",docs:["The scroll-behavior CSS property sets the behavior for a scrolling box when scrolling is triggered by the navigation or CSSOM scrolling APIs."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-behavior"]}),scrollMargin:s({css:"scroll-margin",values:[],type:"string",docs:["The scroll-margin shorthand property sets all of the scroll margins of an element at once, assigning values much like the margin property does for margins of an element."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-margin"]}),scrollMarginBlock:s({css:"scroll-margin-block",values:[],type:"string",docs:["The scroll-margin-block shorthand property sets the scroll margins of an element in the block dimension."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-margin-block"]}),scrollMarginBlockEnd:s({css:"scroll-margin-block-end",values:[],type:"string",docs:["The scroll-margin-block-end property defines the margin of the scroll snap area at the end of the block dimension that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container's coordinate space), then adding the specified outsets."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-margin-block-end"]}),scrollMarginBlockStart:s({css:"scroll-margin-block-start",values:[],type:"string",docs:["The scroll-margin-block-start property defines the margin of the scroll snap area at the start of the block dimension that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container's coordinate space), then adding the specified outsets."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-margin-block-start"]}),scrollMarginBottom:s({css:"scroll-margin-bottom",values:[],type:"string",docs:["The scroll-margin-bottom property defines the bottom margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container's coordinate space), then adding the specified outsets."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-margin-bottom"]}),scrollMarginInline:s({css:"scroll-margin-inline",values:[],type:"string",docs:["The scroll-margin-inline shorthand property sets the scroll margins of an element in the inline dimension."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-margin-inline"]}),scrollMarginInlineEnd:s({css:"scroll-margin-inline-end",values:[],type:"string",docs:["The scroll-margin-inline-end property defines the margin of the scroll snap area at the end of the inline dimension that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container's coordinate space), then adding the specified outsets."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-margin-inline-end"]}),scrollMarginInlineStart:s({css:"scroll-margin-inline-start",values:[],type:"string",docs:["The scroll-margin-inline-start property defines the margin of the scroll snap area at the start of the inline dimension that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container's coordinate space), then adding the specified outsets."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-margin-inline-start"]}),scrollMarginLeft:s({css:"scroll-margin-left",values:[],type:"string",docs:["The scroll-margin-left property defines the left margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container's coordinate space), then adding the specified outsets."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-margin-left"]}),scrollMarginRight:s({css:"scroll-margin-right",values:[],type:"string",docs:["The scroll-margin-right property defines the right margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container's coordinate space), then adding the specified outsets."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-margin-right"]}),scrollMarginTop:s({css:"scroll-margin-top",values:[],type:"string",docs:["The scroll-margin-top property defines the top margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container's coordinate space), then adding the specified outsets."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-margin-top"]}),scrollPadding:s({css:"scroll-padding",values:[],type:"string",docs:["The scroll-padding shorthand property sets scroll padding on all sides of an element at once, much like the padding property does for padding on an element."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-padding"]}),scrollPaddingBlock:s({css:"scroll-padding-block",values:[],type:"string",docs:["The scroll-padding-block shorthand property sets the scroll padding of an element in the block dimension."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-padding-block"]}),scrollPaddingBlockEnd:s({css:"scroll-padding-block-end",values:[],type:"string",docs:["The scroll-padding-block-end property defines offsets for the end edge in the block dimension of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or to put more breathing room between a targeted element and the edges of the scrollport."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-padding-block-end"]}),scrollPaddingBlockStart:s({css:"scroll-padding-block-start",values:[],type:"string",docs:["The scroll-padding-block-start property defines offsets for the start edge in the block dimension of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or to put more breathing room between a targeted element and the edges of the scrollport."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-padding-block-start"]}),scrollPaddingBottom:s({css:"scroll-padding-bottom",values:[],type:"string",docs:["The scroll-padding-bottom property defines offsets for the bottom of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or to put more breathing room between a targeted element and the edges of the scrollport."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-padding-bottom"]}),scrollPaddingInline:s({css:"scroll-padding-inline-end",values:[],type:"string",docs:["The scroll-padding-inline-end property defines offsets for the end edge in the inline dimension of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or to put more breathing room between a targeted element and the edges of the scrollport."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-padding-inline-end"]}),scrollPaddingInlineStart:s({css:"scroll-padding-inline-start",values:[],type:"string",docs:["The scroll-padding-inline-start property defines offsets for the start edge in the inline dimension of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or to put more breathing room between a targeted element and the edges of the scrollport."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-padding-inline-start"]}),scrollPaddingLeft:s({css:"scroll-padding-left",values:[],type:"string",docs:["The scroll-padding-left property defines offsets for the left of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or to put more breathing room between a targeted element and the edges of the scrollport."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-padding-left"]}),scrollPaddingRight:s({css:"scroll-padding-right",values:[],type:"string",docs:["The scroll-padding-right property defines offsets for the right of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or to put more breathing room between a targeted element and the edges of the scrollport."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-padding-right"]}),scrollPaddingTop:s({css:"scroll-padding-top",values:[],type:"string",docs:["The scroll-padding-top property defines offsets for the top of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or to put more breathing room between a targeted element and the edges of the scrollport."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-padding-top"]}),scrollSnapAlign:s({css:"scroll-snap-align",values:["none","start","end","center"],type:"string",docs:["The scroll-snap-align property specifies the box's snap position as an alignment of its snap area (as the alignment subject) within its snap container's snapport (as the alignment container). The two values specify the snapping alignment in the block axis and inline axis, respectively. If only one value is specified, the second value defaults to the same value."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-snap-align"]}),scrollSnapStop:s({css:"scroll-snap-stop",values:["normal","always"],type:"string",docs:['The scroll-snap-stop CSS property defines whether or not the scroll container is allowed to "pass over" possible snap positions.'],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-snap-stop"]}),scrollSnapType:s({css:"scroll-snap-type",values:["none","x","y","block","inline","both","mandatory","proximity"],type:"string",docs:["The scroll-snap-type CSS property sets how strictly snap points are enforced on the scroll container in case there is one."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-snap-type"]}),scrollbarColor:s({css:"scrollbar-color",values:[],type:n,docs:["The scrollbar-color CSS property sets the color of the scrollbar track and thumb."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/scrollbar-color"]}),scrollbarGutter:s({css:"scrollbar-gutter",values:["auto","stable","both-edges"],type:"string",docs:["The scrollbar-gutter CSS property allows authors to reserve space for the scrollbar, preventing unwanted layout changes as the content grows while also avoiding unnecessary visuals when scrolling isn't needed."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/scrollbar-gutter"]}),scrollbarWidth:s({css:"scrollbar-width",values:["auto","thin","none"],type:"string",docs:["The scrollbar-width property allows the author to set the maximum thickness of an element's scrollbars when they are shown."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/scrollbar-width"]}),shapeImageThreshold:s({css:"shape-image-threshold",values:[],type:"string",docs:["The shape-image-threshold CSS property sets the alpha channel threshold used to extract the shape using an image as the value for shape-outside."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/shape-image-threshold"]}),shapeMargin:s({css:"shape-margin",values:[],type:"string",docs:["The shape-margin CSS property sets a margin for a CSS shape created using shape-outside."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/shape-margin"]}),shapeOutside:s({css:"shape-outside",values:["none","margin-box","content-box","border-box","padding-box"],type:"string",docs:["The shape-outside CSS property defines a shape—which may be non-rectangular—around which adjacent inline content should wrap. By default, inline content wraps around its margin box; shape-outside provides a way to customize this wrapping, making it possible to wrap text around complex objects rather than simple boxes."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/shape-outside"]}),tabSize:s({css:"tab-size",values:[],type:"string",support:["-moz-tab-size","-o-tab-size"],docs:["The tab-size CSS property is used to customize the width of tab characters (U+0009)."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/tab-size"]}),tableLayout:s({css:"table-layout",values:["auto","fixed"],type:"string",docs:["The table-layout CSS property sets the algorithm used to lay out <table> cells, rows, and columns."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/table-layout"]}),textAlign:s({css:"text-align",values:["start","end","left","right","center","justify","justify-all","match-parent"],type:"string",docs:["The text-align CSS property sets the horizontal alignment of the inline-level content inside a block element or table-cell box. This means it works like vertical-align but in the horizontal direction."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/text-align"]}),textAlignLast:s({css:"text-align-last",values:["start","end","left","right","center","justify"],type:"string",docs:["The text-align-last CSS property sets how the last line of a block or a line, right before a forced line break, is aligned."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/text-align-last"]}),textCombineUpright:s({css:"text-combine-upright",values:["none","all"],type:"string",docs:["The text-combine-upright CSS property sets the combination of characters into the space of a single character. If the combined text is wider than 1em, the user agent must fit the contents within 1em. The resulting composition is treated as a single upright glyph for layout and decoration. This property only has an effect in vertical writing modes."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/text-combine-upright"]}),textDecoration:s({css:"text-decoration",values:["none"],type:"string",docs:["The text-decoration shorthand CSS property sets the appearance of decorative lines on text. It is a shorthand for text-decoration-line, text-decoration-color, text-decoration-style, and the newer text-decoration-thickness property."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration"]}),textDecorationColor:s({css:"text-decoration-color",values:[],type:n,docs:["The text-decoration-color CSS property sets the color of decorations added to text by text-decoration-line."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-color"]}),textDecorationLine:s({css:"text-decoration-line",values:["none","underline","overline","line-through","blink"],type:"string",docs:["The text-decoration-line CSS property sets the kind of decoration that is used on text in an element, such as an underline or overline."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-line"]}),textDecorationSkip:s({css:"text-decoration-skip",values:["none","objects","spaces","edges","box-decoration","leading-spaces","trailing-spaces"],type:"string",docs:["The text-decoration-skip CSS property sets what parts of an element's content any text decoration affecting the element must skip over. It controls all text decoration lines drawn by the element and also any text decoration lines drawn by its ancestors."],decorators:["experimental"],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-skip"]}),textDecorationSkipInk:s({css:"text-decoration-skip-ink",values:["none","auto","all"],type:"string",docs:["The text-decoration-skip-ink CSS property specifies how overlines and underlines are drawn when they pass over glyph ascenders and descenders."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-skip-ink"]}),textDecorationStyle:s({css:"text-decoration-style",values:["solid","double","dotted","dashed","wavy"],type:"string",docs:["The text-decoration-style CSS property sets the style of the lines specified by text-decoration-line. The style applies to all lines that are set with text-decoration-line."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-style"]}),textDecorationThickness:s({css:"text-decoration-thickness",values:["auto","from-font"],type:"string",docs:["The text-decoration-thickness CSS property sets the stroke thickness of the decoration line that is used on text in an element, such as a line-through, underline, or overline."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration-thickness"]}),textEmphasis:s({css:"text-emphasis",values:["none"],type:"string",support:["-webkit-text-emphasis"],docs:["The text-emphasis CSS property applies emphasis marks to text (except spaces and control characters). It is a shorthand for text-emphasis-style and text-emphasis-color."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/text-emphasis"]}),textEmphasisColor:s({css:"text-emphasis-color",values:[],type:n,docs:["The text-emphasis-color CSS property sets the color of emphasis marks. This value can also be set using the text-emphasis shorthand."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/text-emphasis-color"]}),textEmphasisPosition:s({css:"text-emphasis-position",values:["over","under","right","left"],type:"string",docs:[],links:[]}),textEmphasisStyle:s({css:"text-emphasis-style",values:["none","filled","open","dot","circle","double-circle","triangle","sesame"],type:"string",docs:["The text-emphasis-position CSS property sets where emphasis marks are drawn. Like ruby text, if there isn't enough room for emphasis marks, the line height is increased."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/text-emphasis-position"]}),textIndent:s({css:"text-indent",values:[],type:"string",docs:["The text-indent CSS property sets the length of empty space (indentation) that is put before lines of text in a block."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/text-indent"]}),textJustify:s({css:"text-justify",values:["none","auto","inter-word","inter-character","distribute"],type:"string",docs:["The text-justify CSS property sets what type of justification should be applied to text when text-align: justify; is set on an element."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/text-justify"]}),textOrientation:s({css:"text-orientation",values:["mixed","upright","sideways-right","sideways","use-glyph-orientation"],type:"string",docs:["The text-orientation CSS property sets the orientation of the text characters in a line. It only affects text in vertical mode (when writing-mode is not horizontal-tb). It is useful for controlling the display of languages that use vertical script, and also for making vertical table headers."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/text-orientation"]}),textOverflow:s({css:"text-overflow",values:["clip","ellipsis"],type:"string",docs:["The text-overflow CSS property sets how hidden overflow content is signaled to users. It can be clipped, display an ellipsis ('…'), or display a custom string."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/text-overflow"]}),textRendering:s({css:"text-rendering",values:["auto","optimizeSpeed","optimizeLegibility","geometricPrecision"],type:"string",docs:["The text-rendering CSS property provides information to the rendering engine about what to optimize for when rendering text."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/text-rendering"]}),textShadow:s({css:"text-shadow",values:[],type:"string",docs:["The text-shadow CSS property adds shadows to text. It accepts a comma-separated list of shadows to be applied to the text and any of its decorations. Each shadow is described by some combination of X and Y offsets from the element, blur radius, and color."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/text-shadow"]}),textSizeAdjust:s({css:"text-size-adjust",values:[],type:"string",docs:["The text-size-adjust CSS property controls the text inflation algorithm used on some smartphones and tablets. Other browsers will ignore this property."],decorators:["experimental"],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/text-size-adjust"]}),textTransform:s({css:"text-transform",values:["none","capitalize","uppercase","lowercase","full-width","full-size-kana"],type:"string",docs:["The text-transform CSS property specifies how to capitalize an element's text. It can be used to make text appear in all-uppercase or all-lowercase, or with each word capitalized. It also can help improve legibility for ruby."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/text-transform"]}),textUnderlineOffset:s({css:"text-underline-offset",values:["auto"],type:"string",docs:["The text-underline-offset CSS property sets the offset distance of an underline text decoration line (applied using text-decoration) from its original position."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/text-underline-offset"]}),textUnderlinePosition:s({css:"text-underline-position",values:["auto","under","left","right"],type:"string",docs:["The text-underline-position CSS property specifies the position of the underline which is set using the text-decoration property's underline value."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/text-underline-position"]}),top:s({css:"top",values:["auto"],type:"string",docs:["The top CSS property participates in specifying the vertical position of a positioned element. It has no effect on non-positioned elements."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/top"]}),touchAction:s({css:"touch-action",values:["auto","none","pan-x","pan-y","manipulation","pinch-zoom"],type:"string",docs:["The touch-action CSS property sets how an element's region can be manipulated by a touchscreen user (for example, by zooming features built into the browser)."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/touch-action"]}),transform:s({css:"transform",values:[],type:"string",docs:["The transform CSS property lets you rotate, scale, skew, or translate an element. It modifies the coordinate space of the CSS visual formatting model."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/transform"],support:["-webkit-transform"]}),transformBox:s({css:"transform-box",values:["content-box","border-box","fill-box","stroke-box","view-box"],type:"string",docs:["The transform-box CSS property defines the layout box to which the transform and transform-origin properties relate."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/transform-box"]}),transformOrigin:s({css:"transform-origin",values:["left","center","right","top","bottom"],type:"string",docs:["The transform-origin CSS property sets the origin for an element's transformations."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin"]}),transformStyle:s({css:"transform-style",values:["flat","preserve-3d"],type:"string",docs:["The transform-style CSS property sets whether children of an element are positioned in the 3D space or are flattened in the plane of the element."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/transform-style"]}),transition:s({css:"transition",values:[],type:"string",docs:["The transition CSS property is a shorthand property for transition-property, transition-duration, transition-timing-function, and transition-delay."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/transition"]}),transitionDelay:s({css:"transition-delay",values:[],type:"string",docs:["The transition-delay CSS property specifies the duration to wait before starting a property's transition effect when its value changes."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/transition-delay"]}),transitionDuration:s({css:"transition-duration",values:[],type:"string",docs:["The transition-duration CSS property sets the length of time a transition animation should take to complete. By default, the value is 0s, meaning that no animation will occur."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/transition-duration"]}),transitionProperty:s({css:"transition-property",values:[],type:"string",docs:["The transition-property CSS property sets the CSS properties to which a transition effect should be applied."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/transition-property"]}),transitionTimingFunction:s({css:"transition-timing-function",values:["ease","ease-in","ease-out","ease-in-out","linear","step-start","step-end"],type:"string",docs:["The transition-timing-function CSS property sets how intermediate values are calculated for CSS properties being affected by a transition effect."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/transition-timing-function"]}),translate:s({css:"translate",values:["none"],type:"string",docs:["The translate CSS property allows you to specify translation transforms individually and independently of the transform property. This maps better to typical user interface usage, and saves having to remember the exact order of transform functions to specify in the transform value."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/translate"]}),unicodeBidi:s({css:"unicode-bidi",values:[],type:"string",docs:["The unicode-bidi CSS property, together with the direction property, determines how bidirectional text in a document is handled. For example, if a block of content contains both left-to-right and right-to-left text, the user-agent uses a complex Unicode algorithm to decide how to display the text. The unicode-bidi property overrides this algorithm and allows the developer to control the text embedding."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/unicode-bidi"]}),userSelect:s({css:"user-select",values:["none","auto","text","contain","all"],type:"string",docs:["The user-select CSS property controls whether the user can select text. This doesn't have any effect on content loaded as part of a browser's user interface (its chrome), except in textboxes."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/user-select"]}),verticalAlign:s({css:"vertical-align",values:["baseline","sub","super","text-top","text-bottom","middle","top","bottom"],type:"string",docs:["The vertical-align CSS property sets vertical alignment of an inline, inline-block or table-cell box."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/vertical-align"]}),visibility:s({css:"visibility",values:["visible","hidden","collapse"],type:"string",docs:["The visibility CSS property shows or hides an element without changing the layout of a document. The property can also hide rows or columns in a ``<table>``."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/visibility"]}),whiteSpace:s({css:"white-space",values:["normal","nowrap","pre","pre-wrap","pre-line","break-spaces"],type:"string",docs:["The white-space CSS property sets how white space inside an element is handled."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/white-space"]}),width:s({css:"width",values:["max-content","min-content","auto"],type:"string",docs:["The width CSS property sets an element's width. By default, it sets the width of the content area, but if box-sizing is set to border-box, it sets the width of the border area."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/width"]}),widows:s({css:"widows",values:[],type:"string",docs:["The widows CSS property sets the minimum number of lines in a block container that must be shown at the top of a page, region, or column."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/widows"]}),wordBreak:s({css:"word-break",values:["normal","break-all","keep-all","break-word"],type:"string",docs:["The word-break CSS property sets whether line breaks appear wherever the text would otherwise overflow its content box."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/word-break"]}),wordSpacing:s({css:"word-spacing",values:["normal"],type:"string",docs:["The word-spacing CSS property sets the length of space between words and between tags."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/word-spacing"]}),wordWrap:s({css:"word-wrap",values:["normal","break-word","anywhere"],type:"string",docs:["The overflow-wrap CSS property applies to inline elements, setting whether the browser should insert line breaks within an otherwise unbreakable string to prevent text from overflowing its line box."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/overflow-wrap"]}),writingMode:s({css:"writing-mode",values:["horizontal-tb","vertical-rl","vertical-lr"],type:"string",docs:["The writing-mode CSS property sets whether lines of text are laid out horizontally or vertically, as well as the direction in which blocks progress. When set for an entire document, it should be set on the root element (html element for HTML documents)."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/writing-mode"]}),zIndex:s({css:"z-index",values:["auto"],type:"string",docs:["The z-index CSS property sets the z-order of a positioned element and its descendants or flex items. Overlapping elements with a larger z-index cover those with a smaller one."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/z-index"]}),zoom:s({css:"zoom",values:[],type:"string",docs:["The non-standard zoom CSS property can be used to control the magnification level of an element. transform: scale() should be used instead of this property, if possible. However, unlike CSS Transforms, zoom affects the layout size of the element."],decorators:["non-standard"],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/zoom"]}),webkitLineClamp:s({css:"-webkit-line-clamp",values:[],type:"string",docs:["The -webkit-line-clamp CSS property allows limiting of the contents of a block container to the specified number of lines."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/-webkit-line-clamp"]}),alignmentBaseline:s({css:"alignment-baseline",values:[],type:"string",docs:["The alignment-baseline attribute specifies how an object is aligned with respect to its parent. This property specifies which baseline of this element is to be aligned with the corresponding baseline of the parent. For example, this allows alphabetic baselines in Roman text to stay aligned across font size changes. It defaults to the baseline with the same name as the computed value of the alignment-baseline property.","","You can use this attribute with the following SVG elements:","* `<tspan>`","* `<tref>`","* `<altGlyph>`","* `<textPath>`"]}),baselineShift:s({css:"baseline-shift",values:[],type:"string",docs:["The baseline-shift attribute allows repositioning of the dominant-baseline relative to the dominant-baseline of the parent text content element. The shifted object might be a sub- or superscript."],links:["https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/baseline-shift"]}),clipRule:s({css:"clip-rule",values:[],type:"string",docs:["The clip-rule attribute only applies to graphics elements that are contained within a <clipPath> element. The clip-rule attribute basically works as the fill-rule attribute, except that it applies to <clipPath> definitions."],links:["https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/clip-rule"]}),colorInterpolation:s({css:"color-interpolation",values:[],type:"string",docs:["The color-interpolation attribute specifies the color space for gradient interpolations, color animations, and alpha compositing."],links:["https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/color-interpolation"]}),colorInterpolationFilter:s({css:"color-interpolation-filters",values:[],type:"string",docs:["The color-interpolation-filters attribute specifies the color space for imaging operations performed via filter effects."],links:["https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/color-interpolation-filters"]}),colorProfile:s({css:"color-profile",values:[],type:"string",docs:["The color-profile attribute is used to define which color profile a raster image included through the ``<image>`` element should use.",""],decorators:["deprecated"],links:["https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/color-profile"]}),colorRendering:s({css:"color-rendering",values:[],type:"string",docs:[],links:[]}),dominantBaseline:s({css:"dominant-baseline",values:[],type:"string",docs:["The dominant-baseline attribute specifies the dominant baseline, which is the baseline used to align the box's text and inline-level contents. It also indicates the default alignment baseline of any boxes participating in baseline alignment in the box's alignment context."],links:["https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/dominant-baseline"]}),enableBackground:s({css:"enable-background",values:[],type:"string",docs:[],links:[]}),fill:s({css:"fill",values:[],type:"string",docs:["The fill attribute has two different meanings. For shapes and text it's a presentation attribute that defines the color (or any SVG paint servers like gradients or patterns) used to paint the element; for animation it defines the final state of the animation."],links:["https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill"]}),fillOpacity:s({css:"fill-opacity",values:[],type:"string",docs:["The enable-background attribute specifies how the accumulation of the background image is managed."],decorators:["deprecated"],links:["https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/enable-background"]}),fillRule:s({css:"fill-rule",values:[],type:"string",docs:["The fill-rule attribute is a presentation attribute defining the algorithm to use to determine the inside part of a shape."],links:["https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill-rule"]}),filter:s({css:"filter",values:[],type:"string",docs:["The filter attribute specifies the filter effects defined by the <filter> element that shall be applied to its element."],links:["https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/filter"]}),floodColor:s({css:"flood-color",values:[],type:"string",docs:["The flood-color attribute indicates what color to use to flood the current filter primitive subregion."],links:["https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/flood-color"]}),floodOpacity:s({css:"flood-opacity",values:[],type:"string",docs:["The flood-opacity attribute indicates the opacity value to use across the current filter primitive subregion."],links:["https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/flood-opacity"]}),glyphOrientationHorizontal:s({css:"glyph-orientation-horizontal",values:[],type:"string",docs:["The glyph-orientation-horizontal attribute affects the amount that the current text position advances as each glyph is rendered."],decorators:["deprecated"],links:["https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/glyph-orientation-horizontal"]}),glyphOrientationVertical:s({css:"glyph-orientation-vertical",values:[],type:"string",docs:["The glyph-orientation-vertical attribute affects the amount that hte current text position advances as each glyph is rendered."],decorators:["deprecated"],links:["https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/glyph-orientation-vertical"]}),lightingColor:s({css:"lighting-color",values:[],type:"string",docs:["The lighting-color attribute defines the color of the light source for lighting filter primitives."],links:["https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/lighting-color"]}),markerEnd:s({css:"marker-end",values:[],type:"string",docs:["The marker-end attribute defines the arrowhead or polymarker that will be drawn at the final vertex of the given shape."],links:["https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/marker-end"]}),markerMid:s({css:"marker-mid",values:[],type:"string",docs:["The marker-mid attribute defines the arrowhead or polymarker that will be drawn at all interior vertices of the given shape."],links:["https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/marker-mid"]}),markerStart:s({css:"marker-start",values:[],type:"string",docs:["The marker-start attribute defines the arrowhead or polymarker that will be drawn at the first vertex of the given shape."],links:["https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/marker-start"]}),shapeRendering:s({css:"shape-rendering",values:[],type:"string",docs:["The shape-rendering attribute provides hints to the renderer about what tradeoffs to make when rendering shapes like paths, circles, or rectangles."],links:["https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering"]}),stopColor:s({css:"stop-color",values:[],type:"string",docs:["The stop-color attribute indicates what color to use at a gradient stop."],links:["https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stop-color"]}),stopOpacity:s({css:"stop-opacity",values:[],type:"string",docs:["The stop-opacity attribute defines the opacity of a given color gradient stop."],links:["https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stop-opacity"]}),stroke:s({css:"stroke",values:[],type:"string",docs:["The stroke attribute is a presentation attribute defining the color (or any SVG paint servers like gradients or patterns) used to paint the outline of the shape;"],links:["https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke"]}),strokeDasharray:s({css:"stroke-dasharray",values:[],type:"string",docs:["The stroke-dasharray attribute is a presentation attribute defining the pattern of dashes and gaps used to paint the outline of the shape;"],links:["https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray"]}),strokeDashoffset:s({css:"stroke-dashoffset",values:[],type:"string",docs:["The stroke-dashoffset attribute is a presentation attribute defining an offset on the rendering of the associated dash array."],links:["https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset"]}),strokeLinecap:s({css:"stroke-linecap",values:[],type:"string",docs:["The stroke-linecap attribute is a presentation attribute defining the shape to be used at the end of open subpaths when they are stroked."],links:["https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap"]}),strokeLinejoin:s({css:"stroke-linejoin",values:[],type:"string",docs:["The stroke-linejoin attribute is a presentation attribute defining the shape to be used at the corners of paths when they are stroked."],links:["https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin"]}),strokeMiterlimit:s({css:"stroke-miterlimit",values:[],type:"string",docs:["The stroke-miterlimit attribute is a presentation attribute defining a limit on the ratio of the miter length to the stroke-width used to draw a miter join. When the limit is exceeded, the join is converted from a miter to a bevel."],links:["https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit"]}),strokeOpacity:s({css:"stroke-opacity",values:[],type:"string",docs:["The stroke-opacity attribute is a presentation attribute defining the opacity of the paint server (color, gradient, pattern, etc.) applied to the stroke of a shape."],links:["https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-opacity"]}),strokeWidth:s({css:"stroke-width",values:[],type:"string",docs:["The stroke-width attribute is a presentation attribute defining the width of the stroke to be applied to the shape."],links:["https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width"]}),textAnchor:s({css:"text-anchor",values:[],type:"string",docs:["The text-anchor attribute is used to align (start-, middle- or end-alignment) a string of pre-formatted text or auto-wrapped text where the wrapping area is determined from the inline-size property relative to a given point."],links:["https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/text-anchor"]}),vectorEffect:s({css:"vector-effect",values:[],type:"string",docs:["The vector-effect property specifies the vector effect to use when drawing an object. Vector effects are applied before any of the other compositing operations, i.e. filters, masks and clips."],links:["https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/vector-effect"]})};e.exports={ListOfCssProperties:r,globalValues:["inherit","initial","revert","unset","revert","revert-layer"]}},2381:(e,t,o)=>{const{renderSelector:s}=o(8481),{renderAnimation:n}=o(203),{renderMediaQuery:r}=o(2199),{renderFontFace:i}=o(3836),{renderImport:a}=o(8533),{renderVars:l}=o(8310);e.exports=function(e){const t={lowPriority:"",highPriority:""};if(!e)return t;if(t.highPriority+=a(e.imports),t.highPriority+=i(e.fontFace),e.charset)for(let o in e.charset)t.highPriority+=`@charset "${e.font[o]}";`;if(t.lowPriority+=l(e.var),e.selectors)for(let o of e.selectors)t.lowPriority+=s(o.selector,o.content);if(e.mediaQueries)for(let o in e.mediaQueries)t.lowPriority+=r(e.mediaQueries[o].condition,e.mediaQueries[o].selectors);if(e.animations)for(let o in e.animations)t.lowPriority+=n(o,e.animations[o]);return t}},8481:(e,t,o)=>{const{renderProperty:s}=o(7432),{ListOfCssSelectors:n}=o(8066);function r(e){return void 0!==n[e]&&void 0!==n[e].css}e.exports={ListOfCssSelectors:n,is:r,get:function(e){return r(e)?n[e].css:e},renderSelector:function(e,t){if("string"!=typeof e||!e||!t)return"";let o=`${e}{`;for(let e in t)o+=s(e,t[e]);return o+="}",o},customSelectorAlreadyExists:function(e){for(let t in n)if(n[t].css==e.trim())return t;return!1},getSelectorSupport:function(e){return r(e)?n[e].support:[]}}},8066:(e,t,o)=>{const{selector:s}=o(7063),n={inline:s({css:"",docs:["Define inline element style having the top priority."]}),normal:s({css:"",docs:["Define style for the normal state of the element."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/Class_selectors"]}),active:s({css:":active",docs:["Define style for the element when clicked."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/:active"]}),anyLink:s({css:":any-link",docs:["Define the style that represents an element","that acts as the source anchor of a hyperlink,","independent of whether it has been visited."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/:any-link"]}),autofill:s({css:":autofill",docs:["The :autofill CSS pseudo-class matches when an ``<input>``","element has its value autofilled by the browser.","The class stops matching if the user edits the field."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/:autofill"]}),checked:s({css:":checked",docs:["The ``:checked`` CSS pseudo-class selector represents any radio",'(`<input type="radio">`), checkbox (``<input type="checkbox">``),',"or option (``<option>`` in a ``<select>``)","element that is checked or toggled to an on state."],link:["https://developer.mozilla.org/en-US/docs/Web/CSS/:checked"]}),default:s({css:":default",docs:["The :default CSS pseudo-class selects","form elements that are the default in a group of related elements."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/:default"]}),defined:s({css:":defined",docs:["The :defined CSS pseudo-class","represents any element that has been defined.","This includes any standard element built in to the browser,","and custom elements that have been successfully defined","(i.e. with the CustomElementRegistry.define() method)."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/:defined"]}),disabled:s({css:":disabled",docs:["The :disabled CSS pseudo-class represents any disabled element.","An element is disabled if it can't be activated","(selected, clicked on, typed into, etc.) or accept focus.","The element also has an enabled state,","in which it can be activated or accept focus."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/:disabled"]}),empty:s({css:":empty",docs:["The :empty CSS pseudo-class represents any element that has no children.","Children can be either element nodes or text (including whitespace).","Comments, processing instructions,","and CSS content do not affect whether an element is considered empty."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/:empty"]}),enabled:s({css:":enabled",docs:["The :enabled CSS pseudo-class represents any enabled element.","An element is enabled if it can be activated","(selected, clicked on, typed into, etc.) or accept focus.","The element also has a disabled state,","in which it can't be activated or accept focus."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/:enabled"]}),first:s({css:":first",docs:["The :first CSS pseudo-class, used with the ``@page`` at-rule,","represents the first page of a printed document.","","@link {https://developer.mozilla.org/en-US/docs/Web/CSS/:first}"]}),firstChild:s({css:":first-child",docs:["The :first-child CSS pseudo-class","represents the first element among a group of sibling elements."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/:first-child"]}),firstOfType:s({css:":first-of-type",docs:["The :first-of-type CSS pseudo-class represents","the first element of its type among a group of sibling elements."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/:first-of-type"]}),fullscreen:s({css:"fullscreen",docs:["The :fullscreen CSS pseudo-class","matches every element which is currently in fullscreen mode.","If multiple elements have been put into fullscreen mode,","this selects them all."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/:fullscreen"]}),focus:s({css:":focus",docs:["The :focus CSS pseudo-class represents an element","(such as a form input) that has received focus.","It is generally triggered when the user clicks","or taps on an element or selects it with the keyboard's Tab key."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/:focus"]}),focusVisible:s({css:":focus-visible",docs:["The :focus-visible pseudo-class applies","while an element matches the :focus pseudo-class and the UA (User Agent)","determines via heuristics that the focus should be made evident on the element.",'(Many browsers show a "focus ring" by default in this case.)'],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/:focus-visible"]}),focusWithin:s({css:":focus-within",docs:["The :focus-within CSS pseudo-class","matches an element if the element or any of its descendants are focused.","In other words, it represents an element that is itself matched","by the :focus pseudo-class or has a descendant that is matched","by :focus. (This includes descendants in shadow trees.)","","@link {https://developer.mozilla.org/en-US/docs/Web/CSS/:focus-within}"]}),host:s({css:":host",docs:["The :host CSS pseudo-class","selects the shadow host of the shadow DOM","containing the CSS it is used inside — in other words,","this allows you to select a custom element from inside its shadow DOM."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/:host"]}),hover:s({css:":hover",docs:["## `:hover`","The :hover CSS pseudo-class","matches when the user interacts with an element with a pointing device,","but does not necessarily activate it.","It is generally triggered","when the user hovers over an element with the cursor (mouse pointer)."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/:hover"]}),indeterminate:s({css:":indeterminate",docs:["The :indeterminate CSS pseudo-class","represents any form element whose state is indeterminate,","such as checkboxes which have their HTML indeterminate attribute set to true,","radio buttons which are members of a group in which all radio buttons are unchecked,","and indeterminate ``<progress>`` elements."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/:indeterminate"]}),inRange:s({css:":in-range",docs:["The :in-range CSS pseudo-class represents an ``<input>`` element","whose current value is within the range limits specified by the min and max attributes."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/:in-range"]}),invalid:s({css:":invalid",docs:["The :invalid CSS pseudo-class represents","any ``<form>``, ``<fieldset>``, ``<input>``","or other ``<form>`` element whose contents fail to validate."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/:invalid"]}),lastChild:s({css:":last-child",docs:["The :last-child CSS pseudo-class","represents the last element among a group of sibling elements."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/:last-child"]}),lastOfType:s({css:":last-of-type",docs:["The :last-of-type CSS pseudo-class","represents the last element of its type among a group of sibling elements."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/:last-of-type"]}),left:s({css:":left",docs:["The :left CSS pseudo-class,","used with the ``@page`` at-rule,","represents all left-hand pages of a printed document."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/:left"]}),link:s({css:":link",docs:["The :link CSS pseudo-class","represents an element that has not yet been visited.","It matches every unvisited ``<a>`` or ``<area>`` element","that has an href attribute."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/:link"]}),modal:s({css:":modal",docs:["The :modal CSS pseudo-class","matches an element that is in a state","in which it excludes all interaction","with elements outside it until","the interaction has been dismissed.","Multiple elements can be selected","by the :modal pseudo-class at the same time,","but only one of them will be active and able to receive input."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/:modal"]}),onlyChild:s({css:":only-child",docs:["The :only-child CSS pseudo-class","represents an element without any siblings.","This is the same as :first-child:last-child","or :nth-child(1):nth-last-child(1),","but with a lower specificity."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/:only-child"]}),onlyOfType:s({css:":only-of-type",docs:["The :only-of-type CSS pseudo-class","represents an element that has no siblings of the same type."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/:only-of-type"]}),optional:s({css:":optional",docs:["The :optional CSS pseudo-class represents any ``<input>``","``<select>``, or ``<textarea>`` element","that does not have the required attribute set on it."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/:optional"]}),outOfRange:s({css:":out-of-range",docs:["The :out-of-range CSS pseudo-class","represents an ``<input>`` element whose current value","is outside the range limits specified","by the min and max attributes."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/:out-of-range"]}),pictureInPicutre:s({css:":picture-in-picture",docs:["The :picture-in-picture CSS pseudo-class","matches the element which is currently","in picture-in-picture mode."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/:picture-in-picture"]}),placeholderShown:s({css:":placeholder-shown",docs:["The :placeholder-shown CSS pseudo-class","represents any ``<input>`` or ``<textarea>`` element","that is currently displaying placeholder text."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/:placeholder-shown"]}),readOnly:s({css:":read-only",docs:["The :read-only CSS pseudo-class","represents an element (such as input or textarea)","that is not editable by the user."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/:read-only"]}),readWrite:s({css:":read-write",docs:["The :read-write CSS pseudo-class","represents an element (such as input or textarea)","that is editable by the user."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/:read-write"]}),required:s({css:":required",docs:["The :required CSS pseudo-class","represents any ``<input>``, ``<select>``, or ``<textarea>`` element","that has the required attribute set on it."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/:required"]}),scope:s({css:":scope",docs:["The :scope CSS pseudo-class","represents elements that are a reference point","for selectors to match against."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/:scope"]}),target:s({css:":target",docs:["The :target CSS pseudo-class","represents a unique element (the target element)","with an id matching the URL's fragment."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/:target"]}),valid:s({css:":valid",docs:["The :valid CSS pseudo-class","represents any ``<input>`` or other ``<form>`` element","whose contents validate successfully.","This allows to easily make valid fields","adopt an appearance that helps the user confirm","that their data is formatted properly."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/:valid"]}),visited:s({css:":visited",docs:["The :visited CSS pseudo-class","represents links that the user has already visited.","For privacy reasons,","the styles that can be modified","using this selector are very limited."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/:visited"]}),after:s({css:"::after",docs:["In CSS, ::after creates a pseudo-element","that is the last child of the selected element.","It is often used to add cosmetic content","to an element with the content property.","It is inline by default."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/::after"]}),before:s({css:"::before",docs:["In CSS, ::before creates a pseudo-element","that is the first child of the selected element.","It is often used to add cosmetic content","to an element with the content property.","It is inline by default."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/::before"]}),cue:s({css:"::cue",docs:["The ::cue CSS pseudo-element matches WebVTT cues","within a selected element.","This can be used to style captions","and other cues in media with VTT tracks."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/::cue"]}),firstLetter:s({css:"::first-letter",docs:["The ::first-letter CSS pseudo-element","applies styles to the first letter","of the first line of a block-level element,","but only when not preceded by other content","(such as images or inline tables)."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/::first-letter"]}),firstLine:s({css:"::first-line",docs:["The ::first-line CSS pseudo-element","applies styles to the first line of a block-level element."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/::first-line"]}),fileSelectorButton:s({css:"::file-selector-button",docs:["The ::file-selector-button CSS pseudo-element",'represents the button of an ``<input>`` of type="file".'],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/::file-selector-button"]}),placeholder:s({css:"::placeholder",docs:["The ::placeholder CSS pseudo-element","represents the placeholder text in","an ``<input>`` or ``<textarea>`` element."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/::placeholder"]}),selection:s({css:"::selection",docs:["The ::selection CSS pseudo-element","applies styles to the part of a document","that has been highlighted by the user","(such as clicking and dragging the mouse across text)."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/::selection"]}),marker:s({css:"::marker",docs:["The ::marker CSS pseudo-element selects the marker box","of a list item, which typically contains a bullet or number.","It works on any element or pseudo-element set","to display: list-item,","such as the ``<li> ``and ``<summary>`` elements."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/:marker"]}),userInvalid:s({css:":user-invalid",docs:["The :user-invalid CSS pseudo-class represents any validated form ","element whose value isn't valid based on their validation constraints, ","after the user has interacted with it."],links:["https://developer.mozilla.org/en-US/docs/Web/CSS/:user-invalid"],support:[":-moz-ui-invalid"]}),webkitScrollbar:s({css:"::-webkit-scrollbar"}),webkitScrollbarTrack:s({css:"::-webkit-scrollbar-track"}),webkitScrollbarThumb:s({css:"::-webkit-scrollbar-thumb"}),webkitScrollbarThumbHover:s({css:"::-webkit-scrollbar-thumb:hover"}),webkitScrollbarThumbActive:s({css:"::-webkit-scrollbar-thumb:active"})};e.exports={ListOfCssSelectors:n}},8310:e=>{function t(e,t){return"string"==typeof e&&e.trim()?"--"===e.substring(0,2)||e.includes(";")||e.includes("{")||e.includes("}")?"":["string","number"].includes(typeof t)?t.toString().includes(";")||t.toString().includes("{")||t.toString().includes("}")?"":t.toString().trim()?`--${e}:${t};`:"":"":""}e.exports={renderVars:function(e){if(!e)return"";let o=":root{";for(let s in e)o+=t(s,e[s]);return o+="}",o},renderVar:t}},6029:(e,t,o)=>{const{attribute:s}=o(7063);e.exports={ariaAutocomplete:s({name:"aria-autocomplete",values:["none","inline","list","both"],els:!0,docs:["The aria-autocomplete attribute indicates whether inputting text could trigger display of one or more predictions of the user's intended value for a combobox, searchbox, or textbox and specifies how predictions will be presented if they are made."],links:["https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-autocomplete"]}),ariaChecked:s({name:"aria-checked",values:["false","true","mixed","undefined"],els:!0,docs:['The aria-checked attribute indicates the current "checked" state of checkboxes, radio buttons, and other widgets.'],links:["https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-checked"]}),ariaDisabled:s({name:"aria-disabled",values:[!0,!1],els:!0,docs:["The aria-disabled state indicates that the element is perceivable but disabled, so it is not editable or otherwise operable."],links:["https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-disabled"]}),ariaErrormessage:s({name:"aria-errormessage",values:"string",els:!0,docs:["The aria-errormessage attribute on an object identifies the element that provides an error message for that object."],links:["https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-errormessage"]}),ariaExpanded:s({name:"aria-expanded",values:"string",els:!0,docs:["The aria-expanded attribute is set on an element to indicate if a control is expanded or collapsed, and whether or not its child elements are displayed or hidden."],links:["https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-expanded"]}),ariaHaspopup:s({name:"aria-haspopup",values:"string",els:!0,docs:["The aria-haspopup attribute indicates the availability and type of interactive popup element that can be triggered by the element on which the attribute is set."],links:["https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-haspopup"]}),ariaHidden:s({name:"aria-hidden",values:"string",els:!0,docs:["The aria-hidden state indicates whether the element is exposed to an accessibility API."],links:["https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden"]}),ariaInvalid:s({name:"aria-invalid",values:"string",els:!0,docs:["The aria-invalid state indicates the entered value does not conform to the format expected by the application."],links:["https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-invalid"]}),ariaLabel:s({name:"aria-label",values:"string",els:!0,docs:["The aria-label attribute defines a string value that labels an interactive element."],links:["https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label"]}),ariaLevel:s({name:"aria-level",values:"string",els:!0,docs:["The aria-level attribute defines the hierarchical level of an element within a structure."],links:["https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-level"]}),ariaModal:s({name:"aria-modal",values:"string",els:!0,docs:["The aria-modal attribute indicates whether an element is modal when displayed."],links:["https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-modal"]}),ariaMultiline:s({name:"aria-multiline",values:"string",els:!0,docs:["The aria-multiline attribute indicates whether a textbox accepts multiple lines of input or only a single line."],links:["https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-multiline"]}),ariaMultiselectable:s({name:"aria-multiselectable",values:"string",els:!0,docs:["The aria-multiselectable attribute indicates that the user may select more than one item from the current selectable descendants."],links:["https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-multiselectable"]}),ariaOrientation:s({name:"aria-orientation",values:"string",els:!0,docs:["The aria-orientation attribute indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."],links:["https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-orientation"]}),ariaPlaceholder:s({name:"aria-placeholder",values:"string",els:!0,docs:["The aria-placeholder attribute defines a short hint (a word or short phrase) intended to help the user with data entry when a form control has no value. The hint can be a sample value or a brief description of the expected format."],links:["https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-placeholder"]}),ariaPressed:s({name:"aria-pressed",values:"string",els:!0,docs:['The aria-pressed attribute indicates the current "pressed" state of a toggle button.'],links:["https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-pressed"]}),ariaReadonly:s({name:"aria-readonly",values:"string",els:!0,docs:["The aria-readonly attribute indicates that the element is not editable, but is otherwise operable."],links:["https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-readonly"]}),ariaRequired:s({name:"aria-required",values:"string",els:!0,docs:["The aria-required attribute indicates that user input is required on the element before a form may be submitted."],links:["https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-required"]}),ariaSelected:s({name:"aria-selected",values:"string",els:!0,docs:['The aria-selected attribute indicates the current "selected" state of various widgets.'],links:["https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-selected"]}),ariaSort:s({name:"aria-sort",values:"string",els:!0,docs:["The aria-sort attribute indicates if items in a table or grid are sorted in ascending or descending order."],links:["https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-sort"]}),ariaValuemax:s({name:"aria-valuemax",values:"string",els:!0,docs:["The aria-valuemax attribute defines the maximum allowed value for a range widget."],links:["https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-valuemax"]}),ariaValuemin:s({name:"aria-valuemin",values:"string",els:!0,docs:["The aria-valuemin attribute defines the minimum allowed value for a range widget."],links:["https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-valuemin"]}),ariaValuenow:s({name:"aria-valuenow",values:"string",els:!0,docs:["The aria-valuenow attribute defines the current value for a range widget."],links:["https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-valuenow"]}),ariaValuetext:s({name:"aria-valuetext",values:"string",els:!0,docs:["The aria-valuetext attribute defines the human readable text alternative of aria-valuenow for a range widget."],links:["https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-valuetext"]}),ariaBusy:s({name:"aria-busy",values:"string",els:!0,docs:["Used in ARIA live regions, the global aria-busy state indicates an element is being modified and that assistive technologies may want to wait until the changes are complete before informing the user about the update."],links:["https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-busy"]}),ariaLive:s({name:"aria-live",values:"string",els:!0,docs:["The global aria-live attribute indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."],links:["https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-live"]}),ariaRelevant:s({name:"aria-relevant",values:"string",els:!0,docs:["Used in ARIA live regions, the global aria-relevant attribute indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified."],links:["https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-relevant"]}),ariaAtomic:s({name:"aria-atomic",values:"string",els:!0,docs:["In ARIA live regions, the global aria-atomic attribute indicates whether assistive technologies such as a screen reader will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."],links:["https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-atomic"]}),ariaDropeffect:s({name:"aria-dropeffect",values:"string",els:!0,docs:["The global aria-dropeffect attribute indicates what functions may be performed when a dragged object is released on the drop target. Deprecated"],links:["https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-dropeffect"]}),ariaGrabbed:s({name:"aria-grabbed",values:"string",els:!0,docs:['The aria-grabbed state indicates an element\'s "grabbed" state in a drag-and-drop operation. Deprecated'],links:["https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-grabbed"]}),ariaActivedescendant:s({name:"aria-activedescendant",values:"string",els:!0,docs:["The aria-activedescendant attribute identifies the currently active element when focus is on a composite widget, combobox, textbox, group, or application."],links:["https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-activedescendant"]}),ariaColcount:s({name:"aria-colcount",values:"string",els:!0,docs:["The aria-colcount attribute defines the total number of columns in a table, grid, or treegrid when not all columns are present in the DOM."],links:["https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-colcount"]}),ariaColindex:s({name:"aria-colindex",values:"string",els:!0,docs:["The aria-colindex attribute defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid."],links:["https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-colindex"]}),ariaColspan:s({name:"aria-colspan",values:"string",els:!0,docs:["The aria-colspan attribute defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid."],links:["https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-colspan"]}),ariaControls:s({name:"aria-controls",values:"string",els:!0,docs:["The global aria-controls property identifies the element (or elements) whose contents or presence are controlled by the element on which this attribute is set."],links:["https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-controls"]}),ariaDescribedby:s({name:"aria-describedby",values:"string",els:!0,docs:["The global aria-describedby attribute identifies the element (or elements) that describes the element on which the attribute is set."],links:["https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-describedby"]}),ariaDescription:s({name:"aria-description",values:"string",els:!0,docs:["The global aria-description attribute defines a string value that describes or annotates the current element."],links:["https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description"]}),ariaDetails:s({name:"aria-details",values:"string",els:!0,docs:["The global aria-details attribute identifies the element (or elements) that provide additional information related to the object."],links:["https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-details"]}),ariaFlowto:s({name:"aria-flowto",values:"string",els:!0,docs:["The global aria-flowto attribute identifies the next element (or elements) in an alternate reading order of content. This allows assistive technology to override the general default of reading in document source order at the user's discretion."],links:["https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-flowto"]}),ariaLabelledby:s({name:"aria-labelledby",values:"string",els:!0,docs:["The aria-labelledby attribute identifies the element (or elements) that labels the element it is applied to."],links:["https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-labelledby"]}),ariaOwns:s({name:"aria-owns",values:"string",els:!0,docs:["The aria-owns attribute identifies an element (or elements) in order to define a visual, functional, or contextual relationship between a parent and its child elements when the DOM hierarchy cannot be used to represent the relationship."],links:["https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-owns"]}),ariaPosinset:s({name:"aria-posinset",values:"string",els:!0,docs:["The aria-posinset attribute defines an element's number or position in the current set of listitems or treeitems when not all items are present in the DOM."],links:["https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-posinset"]}),ariaRowcount:s({name:"aria-rowcount",values:"string",els:!0,docs:["The aria-rowcount attribute defines the total number of rows in a table, grid, or treegrid."],links:["https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-rowcount"]}),ariaRowindex:s({name:"aria-rowindex",values:"string",els:!0,docs:["The aria-rowindex attribute defines an element's position with respect to the total number of rows within a table, grid, or treegrid."],links:["https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-rowindex"]}),ariaRowspan:s({name:"aria-rowspan",values:"string",els:!0,docs:["The aria-rowspan attribute defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid."],links:["https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-rowspan"]}),ariaSetsize:s({name:"aria-setsize",values:"string",els:!0,docs:["The aria-setsize attribute defines the number of items in the current set of listitems or treeitems when not all items in the set are present in the DOM."],links:["https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-setsize"]}),ariaCurrent:s({name:"aria-current",values:"string",els:!0,docs:["A non-null aria-current state on an element indicates that this element represents the current item within a container or set of related elements."],links:["https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-current"]}),ariaKeyshortcuts:s({name:"aria-keyshortcuts",values:"string",els:!0,docs:["The global aria-keyshortcuts attribute indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."],links:["https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-keyshortcuts"]}),ariaRoledescription:s({name:"aria-roledescription",values:"string",els:!0,docs:["The aria-roledescription attribute defines a human-readable, author-localized description for the role of an element."],links:["https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-roledescription"]})}},5699:(e,t,o)=>{const{WINDOW_ON_CLICK:s,WINDOW_ON_RESIZE:n,WINDOW_ON_KEY_UP:r,WINDOW_ON_KEY_DOWN:i,WINDOW_ON_CONTEXT_MENU:a,WINDOW_ON_SCROLL:l,WINDOW_ON_BEFORE_UNLOAD:d}=o(3307),{event:c,EventTypes:h}=o(7063),{handler:p}=o(402);e.exports={onAbort:c({listener:"abort",on:"onabort",type:h.Event,docs:["The abort event is fired when the resource was not fully loaded, but not as the result of an error."],links:["https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/abort_event"]}),onAnimationEnd:c({listener:"animationend",on:"onanimationend",type:h.AnimationEvent,docs:["The animationend event is fired when a CSS Animation has completed. If the animation aborts before reaching completion, such as if the element is removed from the DOM or the animation is removed from the element, the animationend event is not fired."],links:["https://developer.mozilla.org/en-US/docs/Web/API/Element/animationend_event"]}),onAnimationIteration:c({listener:"animationiteration",on:"onanimationiteration",type:h.AnimationEvent,docs:["The animationiteration event is fired when an iteration of a CSS Animation ends, and another one begins. This event does not occur at the same time as the animationend event, and therefore does not occur for animations with an animation-iteration-count of one."],links:["https://developer.mozilla.org/en-US/docs/Web/API/Element/animationiteration_event"]}),onAnimationStart:c({listener:"animationstart",on:"onanimationstart",type:h.AnimationEvent,docs:["The animationstart event is fired when a CSS Animation has started. If there is an animation-delay, this event will fire once the delay period has expired. A negative delay will cause the event to fire with an elapsedTime equal to the absolute value of the delay (and, correspondingly, the animation will begin playing at that time index into the sequence)."],links:["https://developer.mozilla.org/en-US/docs/Web/API/Element/animationstart_event"]}),onAnimationEnd:c({listener:"animationend",on:"onanimationend",type:h.AnimationEvent,docs:["The animationend event is fired when a CSS Animation has completed. If the animation aborts before reaching completion, such as if the element is removed from the DOM or the animation is removed from the element, the animationend event is not fired."],links:["https://developer.mozilla.org/en-US/docs/Web/API/Element/animationend_event"]}),onBeforePrint:c({listener:"beforeprint",on:"onbeforeprint",type:h.Event,docs:["The beforeprint event is fired when the associated document is about to be printed or previewed for printing."],links:["https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeprint_event"]}),onBeforeUnload:c({listener:"beforeunload",on:"onberforeunload",type:h.BeforeUnloadEvent,docs:["The beforeunload event is fired when the window, the document and its resources are about to be unloaded. The document is still visible and the event is still cancelable at this point."],links:["https://developer.mozilla.org/en-US/docs/Web/API/Window/beforeunload_event"]}),onBlur:c({listener:"blur",on:"onblur",type:h.FocusEvent,docs:["The blur event fires when an element has lost focus."],links:["https://developer.mozilla.org/en-US/docs/Web/API/Window/blur_event"]}),onCanPlay:c({listener:"canplay",on:"oncanplay",type:h.Event,docs:["The canplay event is fired when the user agent can play the media, but estimates that not enough data has been loaded to play the media up to its end without having to stop for further buffering of content."],links:["https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canplay_event"]}),onCanPlayThrough:c({listener:"canplaythrough",on:"oncanplaythroug",type:h.Event,docs:["The canplaythrough event is fired when the user agent can play the media, and estimates that enough data has been loaded to play the media up to its end without having to stop for further buffering of content."],links:["https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canplaythrough_event"]}),onChange:c({listener:"change",on:"onchange",type:h.Event,docs:["The change event is fired for ``<input>``, ``<select>``, and ``<textarea>`` elements when the user modifies the element's value. Unlike the input event, the change event is not necessarily fired for each alteration to an element's value."],links:["https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event"]}),onContextMenu:c({listener:"contextmenu",on:"oncontextmenu",type:h.MouseEvent,docs:["The contextmenu event fires when the user attempts to open a context menu. This event is typically triggered by clicking the right mouse button, or by pressing the context menu key."],links:["https://developer.mozilla.org/en-US/docs/Web/API/Element/contextmenu_event"]}),onCopy:c({listener:"copy",on:"oncopy",type:h.ClipboardEvent,docs:["The copy event fires when the user initiates a copy action through the browser's user interface."],links:["https://developer.mozilla.org/en-US/docs/Web/API/Element/copy_event"]}),onCut:c({listener:"cut",on:"oncut",type:h.ClipboardEvent,docs:['The cut event is fired when the user has initiated a "cut" action through the browser\'s user interface.'],links:["https://developer.mozilla.org/en-US/docs/Web/API/Element/cut_event"]}),onDurationChange:c({listener:"durationchange",on:"ondurationchange",type:h.Event,docs:["The durationchange event is fired when the duration attribute has been updated."],links:["https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/durationchange_event"]}),onEnded:c({listener:"ended",on:"onended",docs:["The ended event is fired when playback or streaming has stopped because the end of the media was reached or because no further data is available."],links:["https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/ended_event"]}),onError:c({listener:"error",on:"onerror",docs:["The error event is fired on a Window object when a resource failed to load or couldn't be used — for example if a script has an execution error."],links:["https://developer.mozilla.org/en-US/docs/Web/API/Window/error_event"]}),onFocus:c({listener:"focus",on:"onfocus",type:h.FocusEvent,docs:["The focus event fires when an element has received focus. The main difference between this event and focusin is that focusin bubbles while focus does not."],links:["https://developer.mozilla.org/en-US/docs/Web/API/Element/focus_event"]}),onFocusIn:c({listener:"focusin",on:"onfocusin",type:h.FocusEvent,docs:["The focusin event fires when an element is about to receive focus. The main difference between this event and focus is that focusin bubbles while focus does not."],links:["https://developer.mozilla.org/en-US/docs/Web/API/Element/focusin_event"]}),onFocusOut:c({listener:"focusout",on:"onfocusout",type:h.FocusEvent,docs:["The focusout event fires when an element is about to lose focus. The main difference between this event and blur is that focusout bubbles while blur does not."],links:["https://developer.mozilla.org/en-US/docs/Web/API/Element/focusout_event"]}),onFullScreenChange:c({listener:"fullscreenchange",on:"onfullscreenchange",docs:["The fullscreenchange event is fired immediately after the browser switches into or out of fullscreen mode."],links:["https://developer.mozilla.org/en-US/docs/Web/API/Document/fullscreenchange_event"]}),onHashChange:c({listener:"hashchange",on:"onhashchange",type:h.HashChangeEvent,docs:["The hashchange event is fired when the fragment identifier of the URL has changed (the part of the URL beginning with and following the # symbol)."],links:["https://developer.mozilla.org/en-US/docs/Web/API/Window/hashchange_event"]}),onInvalid:c({listener:"invalid",on:"oninvalid",docs:["The invalid event fires when a submittable element has been checked for validity and doesn't satisfy its constraints."],links:["https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/invalid_event"]}),onLoad:c({listener:"load",on:"onload",docs:["The load event is fired when the whole page has loaded, including all dependent resources such as stylesheets and images. This is in contrast to DOMContentLoaded, which is fired as soon as the page DOM has been loaded, without waiting for resources to finish loading."],links:["https://developer.mozilla.org/en-US/docs/Web/API/Window/load_event"]}),onLoadedData:c({listener:"loadeddata",on:"onloadeddata",docs:["The loadeddata event is fired when the frame at the current playback position of the media has finished loading; often the first frame."],links:["https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/loadeddata_event"]}),onLoadedMetaData:c({listener:"loadedmetadata",on:"onloadedmetadata",docs:["The loadedmetadata event is fired when the metadata has been loaded."],links:["https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/loadedmetadata_event"]}),onLoadStart:c({listener:"loadstart",on:"onloadstart",docs:["The loadstart event is fired when the browser has started to load a resource."],links:["https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/loadstart_event"]}),onMessage:c({listener:"message",on:"onmessage",docs:["The message event is fired on a Window object when the window receives a message, for example from a call to Window.postMessage() from another browsing context."],links:["https://developer.mozilla.org/en-US/docs/Web/API/Window/message_event"]}),onOffline:c({listener:"offline",on:"ononffline",docs:["The offline event of the Window interface is fired when the browser has lost access to the network and the value of Navigator.onLine switches to false."],links:["https://developer.mozilla.org/en-US/docs/Web/API/Window/offline_event"]}),onOnline:c({listener:"online",on:"ononline",docs:["The online event of the Window interface is fired when the browser has gained access to the network and the value of Navigator.onLine switches to true."],links:["https://developer.mozilla.org/en-US/docs/Web/API/Window/online_event"]}),onPageHide:c({listener:"pagehide",on:"onpagehide",type:h.PageTransitionEvent,docs:["The pagehide event is sent to a Window when the browser hides the current page in the process of presenting a different page from the session's history."],links:["https://developer.mozilla.org/en-US/docs/Web/API/Window/pagehide_event"]}),onPageShow:c({listener:"pageshow",on:"onpageshow",type:h.PageTransitionEvent,docs:["The pageshow event is sent to a Window when the browser displays the window's document due to navigation."],links:["https://developer.mozilla.org/en-US/docs/Web/API/Window/pageshow_event"]}),onPaste:c({listener:"paste",on:"onpaste",type:h.ClipboardEvent,docs:['The paste event is fired when the user has initiated a "paste" action through the browser\'s user interface.'],links:["https://developer.mozilla.org/en-US/docs/Web/API/Element/paste_event"]}),onPause:c({listener:"pause",on:"onpause",docs:["The pause event is sent when a request to pause an activity is handled and the activity has entered its paused state, most commonly after the media has been paused through a call to the element's pause() method."],links:["https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/pause_event"]}),onPlay:c({listener:"play",on:"onplay",docs:["The play event is fired when the paused property is changed from true to false, as a result of the play method, or the autoplay attribute."],links:["https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/play_event"]}),onPlaying:c({listener:"playing",on:"onplaying",docs:["The playing event is fired after playback is first started, and whenever it is restarted. For example it is fired when playback resumes after having been paused or delayed due to lack of data."],links:["https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/playing_event"]}),onProgress:c({listener:"progress",on:"onprogress",docs:["The progress event is fired periodically as the browser loads a resource."],links:["https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/progress_event"]}),onRateChange:c({listener:"ratechange",on:"onratechange",docs:["The ratechange event is fired when the playback rate has changed."],links:["https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/ratechange_event"]}),onResize:c({listener:"resize",on:"onresize",type:h.UIEvent,docs:["The resize event fires when the document view (window) has been resized."],links:["https://developer.mozilla.org/en-US/docs/Web/API/Window/resize_event"]}),onReset:c({listener:"reset",on:"onreset",docs:["The reset event fires when a ``<form>`` is reset."],links:["https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement/reset_event"]}),onScroll:c({listener:"scroll",on:"onscroll",docs:["The scroll event fires when the document view has been scrolled. For element scrolling, see Element: scroll event."],links:["https://developer.mozilla.org/en-US/docs/Web/API/Document/scroll_event"]}),onSearch:c({listener:"search",on:"onsearch",docs:[],links:[]}),onSeeked:c({listener:"seeked",on:"onseeked",docs:['The search event is fired when a search is initiated using an ``<input>`` element of type="search".'],links:["https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/search_event"],decorators:["non-standard"]}),onSeeking:c({listener:"seeking",on:"onseeking",docs:["The seeking event is fired when a seek operation starts, meaning the Boolean seeking attribute has changed to true and the media is seeking a new position."],links:["https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/seeking_event"]}),onSelect:c({listener:"select",on:"onselect",docs:["The select event fires when some text has been selected."],links:["https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/select_event"]}),onSelectionChange:c({listener:"selectionchange",on:"onselectionchange",docs:["The selectionchange event of the Selection API is fired when the current Selection of a Document is changed."],links:["https://developer.mozilla.org/en-US/docs/Web/API/Document/selectionchange_event"]}),onShow:c({listener:"show",on:"onshow",decorators:["deprecated"],docs:["The show event is fired when a contextmenu event was fired on/bubbled to an element that has a contextmenu attribute."],links:["https://developer.mozilla.org/en-US/docs/Web/API/Element/show_event"]}),onStalled:c({listener:"stalled",on:"onstalled",docs:["The stalled event is fired when the user agent is trying to fetch media data, but data is unexpectedly not forthcoming."],links:["https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/stalled_event"]}),onStorage:c({listener:"storage",on:"onstorage",type:h.StorageEvent,docs:["The storage event of the Window interface fires when a storage area (localStorage) has been modified in the context of another document."],links:["https://developer.mozilla.org/en-US/docs/Web/API/Window/storage_event"]}),onSubmit:c({listener:"submit",on:"onsubmit",type:h.SubmitEvent,docs:["The submit event fires when a ``<form>`` is submitted."],links:["https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement/submit_event"]}),onSuspend:c({listener:"suspend",on:"onsuspend",docs:["The suspend event is fired when media data loading has been suspended."],links:["https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/suspend_event"]}),onTimeUpdate:c({listener:"timeupdate",on:"ontimeupdate",docs:["The timeupdate event is fired when the time indicated by the currentTime attribute has been updated."],links:["https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/timeupdate_event"]}),onToggle:c({listener:"toggle",on:"ontoggle",docs:["The toggle event fires when the open/closed state of a ``<details>`` element is toggled."],links:["https://developer.mozilla.org/en-US/docs/Web/API/HTMLDetailsElement/toggle_event"]}),onTransitionEnd:c({listener:"transitionend",on:"ontransitionend",type:h.TransitionEvent,docs:["The transitionend event is fired when a CSS transition has completed. In the case where a transition is removed before completion, such as if the transition-property is removed or display is set to none, then the event will not be generated."],links:["https://developer.mozilla.org/en-US/docs/Web/API/Element/transitionend_event"]}),onUnload:c({listener:"unload",on:"onunload",decorators:["avoid"],docs:["The unload event is fired when the document or a child resource is being unloaded."],links:["https://developer.mozilla.org/en-US/docs/Web/API/Window/unload_event"]}),onVolumeChange:c({listener:"volumnechange",on:"onvolumechange",docs:["The volumechange event is fired when the volume has changed."],links:["https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/volumechange_event"]}),onWaiting:c({listener:"waiting",on:"onwaiting",docs:["The waiting event is fired when playback has stopped because of a temporary lack of data."],links:["https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/waiting_event"]}),onWheel:c({listener:"wheel",on:"onwheel",type:h.WheelEvent,docs:["The wheel event fires when the user rotates a wheel button on a pointing device (typically a mouse)."],links:["https://developer.mozilla.org/en-US/docs/Web/API/Element/wheel_event"]}),onInput:c({listener:"input",on:"oninput",type:h.InputEvent,docs:["The input event fires when the value of an ``<input>``, ``<select>``, or ``<textarea>`` element has been changed."],links:["https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event"]}),onDrag:c({listener:"drag",on:"ondrag",type:h.DragEvent,docs:["The DragEvent interface is a DOM event that represents a drag and drop interaction. The user initiates a drag by placing a pointer device (such as a mouse) on the touch surface and then dragging the pointer to a new location (such as another DOM element). Applications are free to interpret a drag and drop interaction in an application-specific way."],links:["https://developer.mozilla.org/en-US/docs/Web/API/DragEvent"]}),onDragEnd:c({listener:"dragend",on:"ondragend",type:h.DragEvent,docs:["The dragend event is fired when a drag operation is being ended (by releasing a mouse button or hitting the escape key)."],links:["https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/dragend_event"]}),onDragEnter:c({listener:"dragenter",on:"ondragenter",type:h.DragEvent,docs:["The dragenter event is fired when a dragged element or text selection enters a valid drop target."],links:["https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/dragenter_event"]}),onDragLeave:c({listener:"dragleave",on:"ondragleave",type:h.DragEvent,docs:["https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/dragleave_event"],links:["The dragleave event is fired when a dragged element or text selection leaves a valid drop target."]}),onDragOver:c({listener:"dragover",on:"ondragover",type:h.DragEvent,docs:["The dragover event is fired when an element or text selection is being dragged over a valid drop target (every few hundred milliseconds)."],links:["https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/dragover_event"]}),onDragStart:c({listener:"dragstart",on:"ondragstart",type:h.DragEvent,docs:["The dragstart event is fired when the user starts dragging an element or text selection."],links:["https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/dragstart_event"]}),onDrop:c({listener:"drop",on:"ondrop",type:h.DragEvent,docs:["The drop event is fired when an element or text selection is dropped on a valid drop target."],links:["https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/drop_event"]}),onKeyDown:c({listener:"keydown",on:"onkeydown",type:h.KeyboardEvent,docs:["The keydown event is fired when a key is pressed."],links:["https://developer.mozilla.org/en-US/docs/Web/API/Element/keydown_event"]}),onKeyPress:c({listener:"keypress",on:"onkeypress",type:h.KeyboardEvent,docs:["The keypress event is fired when a key that produces a character value is pressed down."],links:["https://developer.mozilla.org/en-US/docs/Web/API/Element/keypress_event"],decorators:["deprecated"]}),onKeyUp:c({listener:"keyup",on:"onkeyup",type:h.KeyboardEvent,docs:["The keyup event is fired when a key is released."],links:["https://developer.mozilla.org/en-US/docs/Web/API/Element/keyup_event"]}),onClick:c({listener:"click",on:"onclick",type:h.MouseEvent,docs:["An element receives a click event when a pointing device button (such as a mouse's primary mouse button) is both pressed and released while the pointer is located inside the element."],links:["https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event"]}),onDoubleClick:c({listener:"dblclick",on:"ondblclick",type:h.MouseEvent,docs:["The dblclick event fires when a pointing device button (such as a mouse's primary button) is double-clicked; that is, when it's rapidly clicked twice on a single element within a very short span of time."],links:["https://developer.mozilla.org/en-US/docs/Web/API/Element/dblclick_event"]}),onMouseDown:c({listener:"mousedown",on:"onmousedown",type:h.MouseEvent,docs:["The mousedown event is fired at an Element when a pointing device button is pressed while the pointer is inside the element."],links:["https://developer.mozilla.org/en-US/docs/Web/API/Element/mousedown_event"]}),onMouseEnter:c({listener:"mouseenter",on:"onmouseenter",type:h.MouseEvent,docs:["The mouseenter event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired."],links:["https://developer.mozilla.org/en-US/docs/Web/API/Element/mouseenter_event"]}),onMouseLeave:c({listener:"mouseleave",on:"onmouseleave",type:h.MouseEvent,docs:["The mouseleave event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it."],links:["https://developer.mozilla.org/en-US/docs/Web/API/Element/mouseleave_event"]}),onMouseMove:c({listener:"mousemove",on:"onmousemove",type:h.MouseEvent,docs:["The mousemove event is fired at an element when a pointing device (usually a mouse) is moved while the cursor's hotspot is inside it."],links:["https://developer.mozilla.org/en-US/docs/Web/API/Element/mousemove_event"]}),onMouseOver:c({listener:"mouseover",on:"onmouseover",type:h.MouseEvent,docs:["The mouseover event is fired at an Element when a pointing device (such as a mouse or trackpad) is used to move the cursor onto the element or one of its child elements."],links:["https://developer.mozilla.org/en-US/docs/Web/API/Element/mouseover_event"]}),onMouseOut:c({listener:"mouseout",on:"onmouseout",type:h.MouseEvent,docs:["The mouseout event is fired at an Element when a pointing device (usually a mouse) is used to move the cursor so that it is no longer contained within the element or one of its children."],links:["https://developer.mozilla.org/en-US/docs/Web/API/Element/mouseout_event"]}),onMouseUp:c({listener:"mouseup",on:"onmouseup",type:h.MouseEvent,docs:["The mouseup event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it."],links:["https://developer.mozilla.org/en-US/docs/Web/API/Element/mouseup_event"]}),onPointerOver:c({listener:"pointerover",on:"onpointerover",type:h.PointerEvent,docs:["The pointerover event is fired when a pointing device is moved into an element's hit test boundaries."],links:["https://developer.mozilla.org/en-US/docs/Web/API/Element/pointerover_event"]}),onPointerEnter:c({listener:"pointerenter",on:"onpointerenter",type:h.PointerEvent,docs:["The pointerenter event fires when a pointing device is moved into the hit test boundaries of an element or one of its descendants, including as a result of a pointerdown event from a device that does not support hover (see pointerdown)."],links:["https://developer.mozilla.org/en-US/docs/Web/API/Element/pointerenter_event"]}),onPointerDown:c({listener:"pointerdown",on:"onpointerdown",type:h.PointerEvent,docs:["The pointerdown event is fired when a pointer becomes active. For mouse, it is fired when the device transitions from no buttons pressed to at least one button pressed. For touch, it is fired when physical contact is made with the digitizer. For pen, it is fired when the stylus makes physical contact with the digitizer."],links:["https://developer.mozilla.org/en-US/docs/Web/API/Element/pointerdown_event"]}),onPointerMove:c({listener:"pointermove",on:"onpointermove",type:h.PointerEvent,docs:["The pointermove event is fired when a pointer changes coordinates, and the pointer has not been canceled by a browser touch-action."],links:["https://developer.mozilla.org/en-US/docs/Web/API/Element/pointermove_event"]}),onPointerUp:c({listener:"pointerup",on:"onpointerup",type:h.PointerEvent,docs:["The pointerup event is fired when a pointer is no longer active."],links:["https://developer.mozilla.org/en-US/docs/Web/API/Element/pointerup_event"]}),onPointerCancel:c({listener:"pointercancel",on:"onpointercancel",type:h.PointerEvent,docs:["The pointercancel event is fired when the browser determines that there are unlikely to be any more pointer events, or if after the pointerdown event is fired, the pointer is then used to manipulate the viewport by panning, zooming, or scrolling."],links:["https://developer.mozilla.org/en-US/docs/Web/API/Element/pointercancel_event"]}),onPointerOut:c({listener:"pointerout",on:"onpointerout",type:h.PointerEvent,docs:["The pointerout event is fired for several reasons including: pointing device is moved out of the hit test boundaries of an element; firing the pointerup event for a device that does not support hover (see pointerup); after firing the pointercancel event (see pointercancel); when a pen stylus leaves the hover range detectable by the digitizer."],links:["https://developer.mozilla.org/en-US/docs/Web/API/Element/pointerout_event"]}),onPointerLeave:c({listener:"pointerleave",on:"onpointerleave",type:h.PointerEvent,docs:["The pointerleave event is fired when a pointing device is moved out of the hit test boundaries of an element. For pen devices, this event is fired when the stylus leaves the hover range detectable by the digitizer."],links:["https://developer.mozilla.org/en-US/docs/Web/API/Element/pointerleave_event"]}),onGotPointerCapture:c({listener:"gotpointercapture",on:"ongotpointercapture",type:h.PointerEvent,docs:["The gotpointercapture event is fired when an element captures a pointer using setPointerCapture()."],links:["https://developer.mozilla.org/en-US/docs/Web/API/Element/gotpointercapture_event"]}),onLostPointerCapture:c({listener:"lostpointercapture",on:"onlostpointercapture",type:h.PointerEvent,docs:["The lostpointercapture event is fired when a captured pointer is released."],links:["https://developer.mozilla.org/en-US/docs/Web/API/Element/lostpointercapture_event"]}),onTouchCancel:c({listener:"touchcancel",on:"ontouchcancel",type:h.TouchEvent,docs:["The touchcancel event is fired when one or more touch points have been disrupted in an implementation-specific manner (for example, too many touch points are created)."],links:["https://developer.mozilla.org/en-US/docs/Web/API/Element/touchcancel_event"]}),onTouchEnd:c({listener:"touchend",on:"ontouchend",type:h.TouchEvent,docs:["The touchend event fires when one or more touch points are removed from the touch surface."],links:["https://developer.mozilla.org/en-US/docs/Web/API/Element/touchend_event"]}),onTouchMove:c({listener:"touchmove",on:"ontouchmove",type:h.TouchEvent,docs:["The touchcancel event is fired when one or more touch points have been disrupted in an implementation-specific manner (for example, too many touch points are created)."],links:["https://developer.mozilla.org/en-US/docs/Web/API/Element/touchcancel_event"]}),onTouchStart:c({listener:"touchstart",on:"ontouchstart",type:h.TouchEvent,docs:["The touchstart event is fired when one or more touch points are placed on the touch surface."],links:["https://developer.mozilla.org/en-US/docs/Web/API/Element/touchstart_event"]}),[s]:p({store:s.toLowerCase(),type:h.PointerEvent,docs:["The `onClickGlobal` event is fired when another element is clicked in the DOM."],decorators:["recursive-event"]}),[n]:p({store:n.toLowerCase(),docs:["The `onResizeGlobal` event is fired when the window is being resized."],decorators:["recursive-event"]}),[r]:p({store:r.toLowerCase(),type:h.KeyboardEvent,docs:["The `onKeyUpGlobal` event is fired when a key is released."],decorators:["recursive-event"]}),[i]:p({store:i.toLowerCase(),type:h.KeyboardEvent,docs:["The `onKeyUpGlobal` event is fired when a key is being pressed."],decorators:["recursive-event"]}),[a]:p({store:a.toLowerCase(),type:h.PointerEvent,docs:["The `onContextMenuGlobal` event is fired when another element is being right-clicked."],decorators:["recursive-event"]}),[l]:p({store:l.toLowerCase(),docs:["The `onScrollGlobal` event is fired when the window is being scrolled into."],decorators:["recursive-event"]}),[d]:p({store:d.toLowerCase(),type:"BeforeUnloadEvent",docs:["The `onBeforeUnloadGlobal` event is fired when the user attempt to leave the page."],decorators:["recursive-event"]})}},4402:(e,t,o)=>{const{attribute:s}=o(7063);e.exports={accept:s({name:"accept",values:["audio/*","video/*","image/*"],els:["form","input"],docs:["List of types the server accepts, typically a file type."]}),acceptCharSet:s({name:"acceptcharset",values:"string",els:["form"],docs:["List of supported charsets."]}),accessKey:s({name:"accesskey",values:"string",els:!0,docs:["Keyboard shortcut to activate or add focus to the element."]}),action:s({name:"action",values:"string",els:["form"],docs:["The URI of a program that processes the information submitted via the form."]}),align:s({name:"align",values:"string",els:["applet","caption","col","colgroup","hr","iframe","img","table","tbody","td","tfoot","th","thead","tr"],docs:["Specifies the horizontal alignment of the element."]}),allow:s({name:"allow",values:"string",els:["iframe"],docs:["Specifies a feature-policy for the iframe."]}),alt:s({name:"alt",values:"string",els:["applet","area","img","input"],docs:["Alternative text in case an image can't be displayed."]}),async:s({name:"async",values:"string",els:["script"],docs:["Executes the script asynchronously."]}),autoCapitalize:s({name:"autocapitalize",els:!0,values:["off","none","on","sentences","words","characters"],docs:["Sets whether input is automatically capitalized when entered by user"]}),autoComplete:s({name:"autocomplete",values:["off","on","name","honorific-prefix","given-name","additional-name","family-name","honorific-suffix","nickname","email","username","new-password","current-password","one-time-code","organization-title","organization","street-address","country","country-name","postal-code","cc-name","cc-given-name","cc-additional-name","cc-family-name","cc-number","cc-exp","cc-exp-month","cc-exp-year","cc-csc","cc-type","transaction-currency","transaction-amount","language","bday","bday-day","bday-month","bday-year","sex","tel","tel-country-code","tel-national","tel-area-code","tel-local","tel-extension","impp","url","photo"],els:["form","input","select","textarea"],docs:["Indicates whether controls in this form can by default have their values automatically completed by the browser."]}),autoFocus:s({name:"autofocus",toggleable:!0,values:"string",els:["button","input","keygen","select","textarea"],docs:["The element should be automatically focused after the page loaded."]}),autoplay:s({name:"autoplay",toggleable:!0,values:"boolean",docs:["The audio or video should play as soon as possible."]}),allowFullScreen:s({name:"allowfullscreen",toggleable:!0,values:"boolean",docs:[]}),allowPaymentRequest:s({name:"allowpaymentrequest",toggleable:!0,values:"string",docs:[]}),action:s({name:"action",values:"string",els:["audio","video"],docs:[]}),background:s({name:"background",values:"string",els:["body","table","td","th"],docs:["Specifies the URL of an image file."]}),bgColor:s({name:"bgcolor",values:"string",els:["body","col","colgroup","marquee","table","tbody","tfoot","td","th","tr"],docs:["Background color of the element."]}),border:s({name:"border",values:"string",els:["img","object","table"],docs:["The border width."]}),buffered:s({name:"buffered",values:"string",els:["audio","video"],docs:["Contains the time range of already buffered media."]}),capture:s({name:"capture",values:["user","environment"],els:["input"],docs:["From the Media Capture specification, specifies a new file can be captured."]}),challenge:s({name:"challenge",values:"string",els:["keygen"],docs:["A challenge string that is submitted along with the public key."]}),charSet:s({name:"charset",values:"string",els:["meta","script"],docs:["Declares the character encoding of the page or script"]}),checked:s({name:"checked",toggleable:!0,values:"string",els:["command","input"],docs:["Indicates whether the element should be checked on page load."]}),cite:s({name:"cite",values:"string",els:["blockquote","del","ins","q"],docs:["Contains a URI which points to the source of the quote or change."]}),className:s({name:"class",values:"string",els:!0,docs:["Often used with CSS to style elements with common properties."]}),code:s({name:"code",values:"string",els:["applet"],docs:["Specifies the URL of the applet's class file to be loaded and executed."]}),codeBase:s({name:"codebase",values:"string",els:["applet"],docs:["This attribute gives the absolute or relative URL of the directory where applets' .class files referenced by the code attribute are stored."]}),color:s({name:"color",values:"string",els:["font","hr"],docs:["This attribute sets the text color using either a named color or a color specified in the hexadecimal #RRGGBB format."]}),cols:s({name:"cols",values:"number",els:["textarea"],docs:["Defines the number of columns in a textarea."]}),colSpan:s({name:"colSpan",values:"string",els:["td","th"],docs:["The colspan attribute defines the number of columns a cell should span."]}),content:s({name:"content",values:"string",els:["meta"],docs:["A value associated with http-equiv or name depending on the context."]}),contentEditable:s({name:"contenteditable",values:["true","false"],els:!0,docs:["Indicates whether the element's content is editable."]}),contextMenu:s({name:"contextmenu",values:"string",els:!0,docs:["Defines the ID of a ``<menu>`` element which will serve as the element's context menu."]}),controls:s({name:"controls",toggleable:!0,values:"string",els:["audio","video"],docs:["Indicates whether the browser should show playback controls to the user."]}),compact:s({name:"compact",toggleable:!0,values:"string",els:!0,docs:[]}),coords:s({name:"coords",values:"string",els:["area"],docs:["A set of values specifying the coordinates of the hot-spot region."]}),crossOrigin:s({name:"crossorigin",values:["use-credentials","anonymous"],els:["audio","img","link","script","video"],docs:["How the element handles cross-origin requests"]}),csp:s({name:"csp",values:"string",els:["iframe"],docs:["Specifies the Content Security Policy that an embedded document must agree to enforce upon itself."]}),data:s({name:"data",values:"string",els:["object"],docs:["Specifies the URL of the resource."]}),dataSet:s({name:"dataset",values:"string",els:["object"],docs:["Lets you attach custom attributes to an HTML element."]}),dateTime:s({name:"datetime",values:"string",els:["del","ins","time"],docs:["Indicates the date and time associated with the element."]}),decoding:s({name:"decoding",values:["sync","async","auto"],els:["img"],docs:["Indicates the preferred method to decode the image."]}),def:s({name:"default",values:"string",els:["track"],docs:["Indicates that the track should be enabled unless the user's preferences indicate something different."]}),defer:s({name:"defer",values:"string",els:["script"],docs:["Indicates that the script should be executed after the page has been parsed."]}),dir:s({name:"dir",values:["ltr","rtl","auto"],els:!0,docs:["Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)"]}),dirName:s({name:"dirname",values:"string",els:["input","textarea"],docs:[]}),disabled:s({name:"disabled",toggleable:!0,values:"boolean",els:["button","command","fieldset","input","keygen","optgroup","option","select","textarea"],docs:["Indicates whether the user can interact with the element."]}),download:s({name:"download",values:"string",els:["a","area"],docs:["Indicates that the hyperlink is to be used for downloading a resource."]}),draggable:s({name:"draggable",values:["true","false"],els:!0,docs:["Defines whether the element can be dragged."]}),encType:s({name:"enctype",values:["application/x-www-form-urlencoded","multipart/form-data","text/plain"],els:["form"],docs:["Defines the content type of the form data when the method is POST."]}),entryKeyHint:s({name:"entrykeyhint",values:"string",els:["textarea"],docs:["The enterkeyhint specifies what action label (or icon) to present for the enter key on virtual keyboards. The attribute can be used with form controls (such as the value of textarea elements), or in elements in an editing host (e.g., using contenteditable attribute)."]}),form:s({name:"form",values:"string",els:["button","fieldset","input","keygen","label","meter","object","output","progress","select","textarea"],docs:["Indicates the form that is the owner of the element."]}),formAction:s({name:"formaction",values:"string",els:["button","input"],docs:["Indicates the action of the element, overriding the action defined in the <form>."]}),formEncType:s({name:"formenctype",values:"string",els:["button","input"],docs:['If the button/input is a submit button (type="submit"), this attribute sets the encoding type to use during form submission. If this attribute is specified, it overrides the enctype attribute of the button\'s form owner.']}),formMethod:s({name:"formmethod",values:"string",els:["button","input"],docs:['If the button/input is a submit button (type="submit"), this attribute sets the submission method to use during form submission (GET, POST, etc.). If this attribute is specified, it overrides the method attribute of the button\'s form owner.']}),formNoValidate:s({name:"formnovalidate",values:"string",els:["button","input"],docs:['If the button/input is a submit button (type="submit"), this boolean attribute specifies that the form is not to be validated when it is submitted. If this attribute is specified, it overrides the novalidate attribute of the button\'s form owner.']}),formTarget:s({name:"formtarget",values:"string",els:["_self","_blank","_parent","_top"],docs:["The formtarget attribute specifies a name or a keyword that indicates where to display the response that is received after submitting the form."]}),isFor:s({name:"for",values:"string",els:["label","output"],docs:["Describes elements which belongs to this one."]}),headers:s({name:"headers",values:"string",els:["td","th"],docs:["IDs of the ``<th>`` elements which applies to this element."]}),height:s({name:"height",values:"string",els:["canvas","embed","iframe","img","input","object","video"],docs:["Specifies the height of elements listed here. For all other elements, use the CSS height property."]}),hidden:s({name:"hidden",toggleable:!0,values:"boolean",els:!0,docs:["Prevents rendering of given element, while keeping child elements, e.g. script elements, active."]}),high:s({name:"high",values:"string",els:["meter"],docs:["Indicates the lower bound of the upper range."]}),href:s({name:"href",values:"string",els:["a","area","base","link"],docs:["The URL of a linked resource."]}),hrefLang:s({name:"hreflang",values:"string",els:["a","area","link"],docs:["Specifies the language of the linked resource."]}),httpEquiv:s({name:"httpEquiv",values:["content-security-policy","content-type","default-style","x-ua-compatible","refresh"],els:["meta"],docs:["Defines a pragma directive."]}),icon:s({name:"icon",values:"string",els:["command"],docs:["Specifies a picture which represents the command."]}),id:s({name:"id",values:"string",els:!0,docs:["Often used with CSS to style a specific element. The value of this attribute must be unique."]}),importance:s({name:"importance",values:"string",els:["iframe","img","link","script"],docs:["Indicates the relative fetch priority for the resource."]}),integrity:s({name:"integrity",values:"string",els:["link","script"],docs:["Specifies a Subresource Integrity value that allows browsers to verify what they fetch."]}),intrinsicSize:s({name:"instrinsicsize",values:"string",els:["img"],docs:["This attribute tells the browser to ignore the actual intrinsic size of the image and pretend it's the size specified in the attribute."]}),inputMode:s({name:"inputmode",values:["none","text","decimal","numeric","tel","search","email","url"],els:["textarea","contenteditable"],docs:["Provides a hint as to the type of data that might be entered by the user while editing the element or its contents. The attribute can be used with form controls (such as the value of textarea elements), or in elements in an editing host (e.g., using contenteditable attribute)."]}),isMap:s({name:"ismap",toggleable:!0,values:"boolean",els:["img"],docs:["Indicates that the image is part of a server-side image map."]}),itemProp:s({name:"itemprop",values:"string",els:!0,docs:[]}),keyType:s({name:"keytype",values:["RSA"],els:["keygen"],docs:["Specifies the type of key generated."]}),kind:s({name:"kind",values:["subtitles","captions","descriptions","chapters","metadata"],els:["track"],docs:["Specifies the kind of text track."]}),label:s({name:"label",values:"string",els:["optgroup","option","track"],docs:["Specifies a user-readable title of the element."]}),lang:s({name:"lang",values:"string",els:!0,docs:["Defines the language used in the element."]}),language:s({name:"language",values:"string",els:["script"],docs:["Defines the script language used in the element."]}),loading:s({name:"loading",values:["lazy","eager"],els:["img","iframe"],docs:['Indicates if the element should be loaded lazily (loading="lazy") or loaded immediately (loading="eager").']}),list:s({name:"list",values:"string",els:["input"],docs:["Identifies a list of pre-defined options to suggest to the user."]}),loop:s({name:"loop",toggleable:!0,values:"boolean",els:["audio","bgsound","marquee","video"],docs:["Indicates whether the media should start playing from the start when it's finished."]}),low:s({name:"low",values:"string",els:["meter"],docs:["Indicates the upper bound of the lower range."]}),manifest:s({name:"manifest",values:"string",els:["html"],docs:["Specifies the URL of the document's cache manifest."]}),max:s({name:"max",values:"string",els:["input","meter","progress"],docs:["Indicates the maximum value allowed."]}),maxLength:s({name:"maxLength",values:"string",els:["input","textarea"],docs:["Defines the maximum number of characters allowed in the element."]}),minLength:s({name:"minLength",values:"string",els:["input","textarea"],docs:["Defines the minimum number of characters allowed in the element."]}),media:s({name:"media",values:"string",els:["a","area","link","source","style"],docs:["Specifies a hint of the media for which the linked resource was designed."]}),method:s({name:"method",values:["post","get","dialog"],els:["form"],docs:["Defines which HTTP method to use when submitting the form. Can be GET (default) or POST."]}),min:s({name:"min",values:"string",els:["input","meter"],docs:["Indicates the minimum value allowed."]}),multiple:s({name:"multiple",toggleable:!0,values:"boolean",els:["input","select"],docs:["Indicates whether multiple values can be entered in an input of the type email or file."]}),muted:s({name:"muted",toggleable:!0,values:"boolean",els:["audio","video"],docs:["Indicates whether the audio will be initially silenced on page load."]}),name:s({name:"name",values:"string",els:["button","form","fieldset","iframe","input","keygen","object","output","select","textarea","map","meta","param"],docs:["Name of the element. For example used by the server to identify the fields in form submits."]}),noShade:s({name:"noshade",type:"togge",values:"boolean",els:["hr"],docs:["The HTML ``<hr>`` noshade Attribute is the boolean value and used to specify the solid horizontal line instead of shaded lines."]}),noValidate:s({name:"novalidate",values:"string",els:["form"],docs:["This attribute indicates that the form shouldn't be validated when submitted."]}),open:s({name:"open",toggleable:!0,values:"boolean",els:["details","dialog"],docs:["Indicates whether the contents are currently visible (in the case of a ``<details>`` element) or whether the dialog is active and can be interacted with (in the case of a ``<dialog>`` element)."]}),optimum:s({name:"optimum",values:"string",els:["meter"],docs:["Indicates the optimal numeric value."]}),pattern:s({name:"pattern",values:"string",els:["input"],docs:["Defines a regular expression which the element's value will be validated against."]}),ping:s({name:"ping",values:"string",els:["a","area"],docs:["The ping attribute specifies a space-separated list of URLs to be notified if a user follows the hyperlink."]}),placeholder:s({name:"placeholder",values:"string",els:["input","textarea"],docs:["Provides a hint to the user of what can be entered in the field."]}),poster:s({name:"poster",values:"string",els:["video"],docs:["A URL indicating a poster frame to show until the user plays or seeks."]}),playsInline:s({name:"playsinline",toggleable:!0,values:"string",els:!0,docs:[]}),preload:s({name:"preload",values:"string",els:["audio","video"],docs:["Indicates whether the whole resource, parts of it or nothing should be preloaded."]}),radioGroup:s({name:"radiogroup",values:"string",els:["command"],docs:[]}),readOnly:s({name:"readonly",toggleable:!0,values:"boolean",els:["input","textarea"],docs:["Indicates whether the element can be edited."]}),referrerPolicy:s({name:"referrerpolicy",values:["no-referrer","no-referrer-when-downgrade","origin","origin-when-cross-origin","same-origin","strict-origin","strict-origin-when-cross-origin","unsafe-url"],els:["a","area","iframe","img","link","script"],docs:["Specifies which referrer is sent when fetching the resource."]}),rel:s({name:"rel",values:["alternate","author","bookmark","canonical","dns-prefetch","external","help","icon","license","manifest","me","modulepreload","next","nofollow","noopener","noreferrer","opener","pingback","preconnect","prefetch","preload","prerender","prev","search","stylesheet","tag"],els:["a","area","link"],docs:["Specifies the relationship of the target object to the link object."]}),required:s({name:"required",toggleable:!0,values:"boolean",els:["input","select","textarea"],docs:["Indicates whether this element is required to fill out or not."]}),reversed:s({name:"reversed",values:"boolean",els:["ol"],docs:["Indicates whether the list should be displayed in a descending order instead of a ascending."]}),role:s({name:"role",values:"string",els:!0,docs:["Defines an explicit role for an element for use by assistive technologies."]}),rows:s({name:"rows",values:"number",els:["textarea"],docs:["Defines the number of rows in a text area."]}),rowSpan:s({name:"rowspan",values:"string",els:["td","th"],docs:["Defines the number of rows a table cell should span over."]}),sandbox:s({name:"sandbox",values:["allow-downloads-without-user-activation","allow-downloads","allow-forms","allow-modals","allow-orientation-lock","allow-pointer-lock","allow-popups","allow-popups-to-escape-sandbox","allow-presentation","allow-same-origin","allow-scripts","allow-storage-access-by-user-activation","allow-top-navigation","allow-top-navigation-by-user-activation"],els:["iframe"],docs:["Stops a document loaded in an iframe from using certain features (such as submitting forms or opening new windows)."]}),scope:s({name:"scope",values:["row","col","rowgroup","colgroup"],els:["th"],docs:["Defines the cells that the header test (defined in the th element) relates to."]}),selected:s({name:"selected",toggleable:!0,values:"boolean",els:["option"],docs:["Defines a value which will be selected on page load."]}),shape:s({name:"shape",values:"string",els:["a","area"],docs:[]}),size:s({name:"size",values:"string",els:["input","select"],docs:["Defines the width of the element (in pixels). If the element's type attribute is text or password then it's the number of characters."]}),sizes:s({name:"sizes",values:"string",els:["link","img","source"],docs:[]}),slot:s({name:"slot",values:"string",els:!0,docs:["Assigns a slot in a shadow DOM shadow tree to an element."]}),span:s({name:"span",values:"string",els:["col","colgroup"],docs:[]}),spellCheck:s({name:"spellcheck",values:["true","false"],els:!0,docs:["Indicates whether spell checking is allowed for the element."]}),src:s({name:"src",values:"string",els:["audio","embed","iframe","img","input","script","source","track","video"],docs:["The URL of the embeddable content."]}),srcDoc:s({name:"srcdoc",values:"string",els:["iframe"],docs:[]}),srcLang:s({name:"srclang",values:"string",els:["track"],docs:[]}),srcSet:s({name:"srcset",values:"string",els:["img","source"],docs:["One or more responsive image candidates."]}),start:s({name:"start",values:"string",els:["ol"],docs:["Defines the first number if other than 1."]}),step:s({name:"step",values:"string",els:["input"],docs:[]}),summary:s({name:"summary",values:"string",els:["table"],docs:[]}),tabIndex:s({name:"tabindex",values:"string",els:!0,docs:["Overrides the browser's default tab order and follows the one specified instead."]}),target:s({name:"target",values:["_self","_blank","_parent","_top"],els:["a","area","base","form"],docs:["Specifies where to open the linked document (in the case of an ``<a>`` element) or where to display the response received (in the case of a ``<form>`` element)"]}),title:s({name:"title",values:"string",els:!0,docs:["Text to be displayed in a tooltip when hovering over the element."]}),translate:s({name:"translate",values:["yes","no"],els:!0,docs:["Specify whether an element's attribute values and the values of its Text node children are to be translated when the page is localized, or whether to leave them unchanged."]}),type:s({name:"type",values:"string",els:["button","input","command","embed","object","script","source","styles","menu","link"],docs:["Defines the type of the element."]}),useMap:s({name:"usemap",values:"string",els:["img","input","object"],docs:["Defines a default value which will be displayed in the element on page load."]}),value:s({name:"value",values:"string",els:["button","data","input","li","meter","option","progress","param"],docs:[]}),width:s({name:"width",values:"string",els:["canvas","embed","iframe","img","input","object","video"],docs:["For the elements listed here, this establishes the element's width."]}),wrap:s({name:"wrap",values:["hard","soft","off"],els:["textarea"],docs:["Indicates whether the text should be wrapped."]})}},5077:(e,t,o)=>{const s=o(4402),n=o(2809),r=o(6029),{RecursiveConsole:i}=o(8221),a=o(5699),l={...n,...s,...r};function d(e){return l.hasOwnProperty(e)}function c(e){return a.hasOwnProperty(e)}e.exports={isAttribute:d,getAttributeName:function(e){if(d(e))return l[e].name;i.error(`Recursive Web Internal : Attribute with the name ${e} does not exists at the moment within the list of attributes.`)},isToggleableAttribute:function(e){return d(e)&&!0===l[e].toggleable},isEvent:c,getEvent:function(e){if(c(e))return a[e];i.error(`Recursive Web Internal : Event with the name ${e} does not exists at the moment within the list of events.`)},eventHasHandler:function(e){return c(e)&&"function"==typeof a[e].handler},getEventListener:function(e){if(c(e))return a[e].listener;i.error(`Recursive Web Internal : Event with the name ${e} does not exists at the moment within the list of events.`)},ListOfAttributes:l,ListOfEvents:a}},2809:(e,t,o)=>{const{attribute:s}=o(7063);e.exports={accentHeight:s({name:"accent-height",values:"string",docs:["The accent-height attribute defines the distance from the origin to the top of accent characters, measured by a distance within the font coordinate system.","@deprecated"]}),accumulate:s({name:"accumulate",values:["sum","none"],els:["animate","animateColor","animateMotion","animateTransform"],docs:["The accumulate attribute controls whether or not an animation is cumulative."]}),additive:s({name:"additive",values:["sum","replace"],els:["animate","animateColor","animateMotion","animateTransform"],docs:["The additive attribute controls whether or not an animation is additive."]}),alignmentBaseline:s({name:"alignment-baseline",values:["auto","baseline","before-edge","text-before-edge","middle","central","after-edge","text-after-edge","ideographic","alphabetic","hanging","mathematical","top","center","bottom"],els:["tspan","tref","altGlyph","textPath"],docs:[,"The alignment-baseline attribute specifies how an object is aligned with respect to its parent. This property specifies which baseline of this element is to be aligned with the corresponding baseline of the parent. For example, this allows alphabetic baselines in Roman text to stay aligned across font size changes. It defaults to the baseline with the same name as the computed value of the alignment-baseline property."]}),alphabetic:s({name:"alphabetic",values:"string",els:["font-face"],docs:["The alphabetic attribute defines the lower baseline of a font. It has the same syntax and semantics as the baseline descriptor within an @font-face.","@deprecated"]}),amplitude:s({name:"amplitude",type:"number",values:[1],els:["feFuncA","feFuncB","feFuncG","feFuncR"],docs:["The amplitude attribute controls the amplitude of the gamma function of a component transfer element when its type attribute is gamma."]}),arabicForm:s({name:"arabic-form",values:"string",els:["glyph"],docs:["The arabic-form attribute indicates which of the four possible forms an Arabic glyph represents.","@deprecated"]}),ascent:s({name:"ascent",values:"string",els:["font-face"],docs:["The ascent attribute defines the maximum unaccented height of the font within the font coordinate system.","@deprecated"]}),attributeName:s({name:"attributeName",values:"string",els:["animate","animateColor","animateTransform","set"],docs:["The attributeName attribute indicates the name of the CSS property or attribute of the target element that is going to be changed during an animation."]}),attributeType:s({name:"attributeType",values:"string",els:["animate","animateColor","animateTransform","set"],docs:["The attributeType attribute specifies the namespace in which the target attribute and its associated values are defined.","@deprecated"]}),azimuth:s({name:"azimuth",values:"number",els:["feDistantLight"],docs:["The azimuth attribute specifies the direction angle for the light source on the XY plane (clockwise), in degrees from the x axis."]}),baseFrequency:s({name:"baseFrequency",values:"string",els:["feTurbulence"],docs:["The baseFrequency attribute represents the base frequency parameter for the noise function of the ``<feTurbulence>`` filter primitive."]}),baselineShift:s({name:"baseline-shift",values:["sub","super"],els:["altGlyph","textPath","tref","tspan"],docs:["The baseline-shift attribute allows repositioning of the dominant-baseline relative to the dominant-baseline of the parent text content element. The shifted object might be a sub- or superscript."]}),baseProfile:s({name:"baseProfile",values:"string",els:["svg"],docs:["The baseProfile attribute describes the minimum SVG language profile that the author believes is necessary to correctly render the content. The attribute does not specify any processing restrictions; It can be considered metadata.","@deprecated"]}),bbox:s({name:"bbox",values:"string",els:["font-face"],docs:["The bbox attribute defines the maximal bounding box of a font.","@deprecated"]}),begin:s({name:"begin",values:"string",els:["animate","animateColor","animateMotion","animateTransform","discard","set"],docs:["The begin attribute defines when an animation should begin or when an element should be discarded."]}),bias:s({name:"bias",values:"string",els:["feConvolveMatrix"],docs:["The bias attribute shifts the range of the filter. After applying the kernelMatrix of the ``<feConvolveMatrix>`` element to the input image to yield a number and applied the divisor attribute, the bias attribute is added to each component. This allows representation of values that would otherwise be clamped to 0 or 1."]}),by:s({name:"by",values:"string",els:["animate","animateColor","animateMotion","animateTransform"],docs:["The by attribute specifies a relative offset value for an attribute that will be modified during an animation."]}),calcMode:s({name:"calcMode",values:"string",docs:["The calcMode attribute specifies the interpolation mode for the animation."]}),capHeight:s({name:"cap-height",values:["discrete","linear","paced","spline"],els:["animate","animateColor","animateMotion","animateTransform"],docs:["The cap-height attribute defines the height of uppercase glyphs of the font within the font coordinate system.","@deprecated"]}),className:s({name:"class",values:"string",els:!0,docs:["Often used with CSS to style elements with common properties."]}),clip:s({name:"clip",values:"string",els:["font-face"],docs:["The clip attribute is a presentation attribute defining the visible region of an element.","@deprecated"]}),clipPathUnits:s({name:"clipPathUnits",values:["userSpaceOnUse","objectBoundingBox"],els:["clipPath"],docs:["The clipPathUnits attribute indicates which coordinate system to use for the contents of the ``<clipPath>`` element."]}),clipPath:s({name:"clip-path",values:"string",els:["a","circle","clipPath","ellipse","g","glyph","image","line","marker","mask","path","pattern","polygon","polyline","rect","svg","symbol","text","use"],docs:["The clip-path presentation attribute defines or associates a clipping path with the element it is related to."]}),clipRule:s({name:"clip-rule",values:["nonzero","evenodd"],els:[],docs:["The clip-rule attribute only applies to graphics elements that are contained within a ``<clipPath>`` element. The clip-rule attribute basically works as the fill-rule attribute, except that it applies to ``<clipPath>`` definitions."]}),color:s({name:"color",values:"Color",els:[],docs:["The color attribute is used to provide a potential indirect value, currentcolor, for the fill, stroke, stop-color, flood-color, and lighting-color attributes."]}),colorInterpolation:s({name:"color-interpolation",values:"string",docs:["The color-interpolation attribute specifies the color space for gradient interpolations, color animations, and alpha compositing."]}),colorInterpolationFilters:s({name:"color-interpolation-filters",values:"string",docs:["The color-interpolation-filters attribute specifies the color space for imaging operations performed via filter effects."]}),colorProfile:s({name:"color-profile",values:"string",docs:["The color-profile attribute is used to define which color profile a raster image included through the ``<image>`` element should use."]}),colorRendering:s({name:"color-rendering",values:"string",els:[],docs:[]}),contentScriptType:s({name:"contentScriptType",values:"string",docs:["The contentScriptType attribute specifies the default scripting language for the given document fragment on the ``<svg>`` element."]}),contentStyleType:s({name:"contentStyleType",values:"string",docs:["The contentStyleType attribute specifies the style sheet language for the given document fragment on the ``<svg>`` element.","@deprecated"]}),crossorigin:s({name:"crossorigin",values:"string",docs:["The crossorigin attribute, valid on the ``<image>`` element, provides support for CORS, defining how the element handles crossorigin requests, thereby enabling the configuration of the CORS requests for the element's fetched data. It is a CORS settings attribute."]}),cursor:s({name:"cursor",values:"string",docs:["The cursor attribute specifies the mouse cursor displayed when the mouse pointer is over an element."]}),cx:s({name:"cx",values:"string",docs:["The cx attribute define the x-axis coordinate of a center point."]}),cy:s({name:"cy",values:"string",docs:["The cy attribute define the y-axis coordinate of a center point."]}),d:s({name:"d",values:"string",els:[],docs:["The d attribute defines a path to be drawn."]}),decelerate:s({name:"decelerate",values:"string",els:[],docs:[]}),descent:s({name:"descent",values:"string",els:[],docs:["The descent attribute defines the maximum unaccented depth of the font.","@deprecated"]}),diffuseConstant:s({name:"diffuseConstant",values:"string",els:[],docs:["The diffuseConstant attribute represents the kd value in the Phong lighting model. In SVG, this can be any non-negative number."]}),direction:s({name:"direction",values:"string",els:[],docs:["The direction attribute specifies the inline-base direction of a ``<text>`` or ``<tspan>`` element. It defines the start and end points of a line of text as used by the text-anchor and inline-size properties. It also may affect the direction in which characters are positioned if the unicode-bidi property's value is either embed or bidi-override."]}),display:s({name:"display",values:"string",els:[],docs:["The display attribute lets you control the rendering of graphical or container elements."]}),divisor:s({name:"divisor",values:"string",els:[],docs:["The divisor attribute specifies the value by which the resulting number of applying the kernelMatrix of a ``<feConvolveMatrix>`` element to the input image color value is divided to yield the destination color value."]}),dominantBaseline:s({name:"dominant-baseline",values:"string",els:[],docs:["The dominant-baseline attribute specifies the dominant baseline, which is the baseline used to align the box's text and inline-level contents. It also indicates the default alignment baseline of any boxes participating in baseline alignment in the box's alignment context."]}),dur:s({name:"dur",values:"string",els:[],docs:["The dur attribute indicates the simple duration of an animation."]}),dx:s({name:"dx",values:"string",els:[],docs:["The dx attribute indicates a shift along the x-axis on the position of an element or its content."]}),dy:s({name:"dy",values:"string",els:[],docs:["The dy attribute indicates a shift along the y-axis on the position of an element or its content."]}),edgeMode:s({name:"edgeMode",values:"string",els:[],docs:["The edgeMode attribute determines how to extend the input image as necessary with color values so that the matrix operations can be applied when the kernel is positioned at or near the edge of the input image."]}),elevation:s({name:"elevation",values:"string",els:[],docs:["The elevation attribute specifies the direction angle for the light source from the XY plane towards the Z-axis, in degrees. Note that the positive Z-axis points towards the viewer of the content."]}),enableBackground:s({name:"enable-background",values:"string",els:[],docs:["The enable-background attribute specifies how the accumulation of the background image is managed.","@deprecated"]}),end:s({name:"end",values:"string",els:[],docs:["The end attribute defines an end value for the animation that can constrain the active duration."]}),exponent:s({name:"exponent",values:"string",els:[],docs:["The exponent attribute defines the exponent of the gamma function."]}),fill:s({name:"fill",values:"string",els:[],docs:["The fill attribute has two different meanings. For shapes and text it's a presentation attribute that defines the color (or any SVG paint servers like gradients or patterns) used to paint the element; for animation it defines the final state of the animation."]}),fillOpacity:s({name:"fill-opacity",values:"string",els:[],docs:["The fill-opacity attribute is a presentation attribute defining the opacity of the paint server (color, gradient, pattern, etc.) applied to a shape."]}),fillRule:s({name:"fill-rule",values:"string",els:[],docs:["The fill-rule attribute is a presentation attribute defining the algorithm to use to determine the inside part of a shape."]}),filter:s({name:"filter",values:"string",els:[],docs:["The filter attribute specifies the filter effects defined by the ``<filter>`` element that shall be applied to its element."]}),filterRes:s({name:"filterRes",values:"string",els:[],docs:["The filterRes attribute indicates the width and height of the intermediate images in pixels of a filter primitive.","@deprecated"]}),filterUnits:s({name:"filterUnits",values:"string",els:[],docs:["The filterUnits attribute defines the coordinate system for the attributes x, y, width and height."]}),floodColor:s({name:"flood-color",values:"string",els:[],docs:["The flood-color attribute indicates what color to use to flood the current filter primitive subregion."]}),floodOpacity:s({name:"flood-opacity",values:"string",els:[],docs:["The flood-opacity attribute indicates the opacity value to use across the current filter primitive subregion."]}),fontFamily:s({name:"font-family",values:"string",els:[],docs:["The font-family attribute indicates which font family will be used to render the text, specified as a prioritized list of font family names and/or generic family names."]}),fontSize:s({name:"font-size",values:"string",els:[],docs:["The font-size attribute refers to the size of the font from baseline to baseline when multiple lines of text are set solid in a multiline layout environment."]}),fontSizeAdjust:s({name:"font-size-adjust",values:"string",els:[],docs:["The font-size-adjust attribute allows authors to specify an aspect value for an element that will preserve the x-height of the first choice font in a substitute font."]}),fontStretch:s({name:"font-stretch",values:"string",els:[],docs:["The font-stretch attribute indicates the desired amount of condensing or expansion in the glyphs used to render the text."]}),fontStyle:s({name:"font-style",values:"string",els:[],docs:["The font-style attribute specifies whether the text is to be rendered using a normal, italic, or oblique face."]}),fontVariant:s({name:"font-variant",values:"string",els:[],docs:["The font-variant attribute indicates whether the text is to be rendered using variations of the font's glyphs."]}),fontWeight:s({name:"font-weight",values:"string",els:[],docs:["The font-weight attribute refers to the boldness or lightness of the glyphs used to render the text, relative to other fonts in the same font family."]}),format:s({name:"format",values:"string",els:[],docs:["The format attribute indicates the format of the given font.","@deprecated"]}),from:s({name:"from",values:"string",els:[],docs:["The from attribute indicates the initial value of the attribute that will be modified during the animation."]}),fr:s({name:"fr",values:"string",els:[],docs:["The fr attribute defines the radius of the focal point for the radial gradient."]}),fx:s({name:"fx",values:"string",els:[],docs:["The fx attribute defines the x-axis coordinate of the focal point for a radial gradient."]}),fy:s({name:"fy",values:"string",els:[],docs:["The fy attribute defines the y-axis coordinate of the focal point for a radial gradient."]}),g1:s({name:"g1",values:"string",els:[],docs:[]}),g2:s({name:"g2",values:"string",els:[],docs:[]}),glyphName:s({name:"glyph-name",values:"string",els:[],docs:[]}),glyphOrientationHorizontal:s({name:"glyph-orientation-horizontal",values:"string",els:[],docs:[]}),glyphOrientationVertical:s({name:"glyph-orientation-vertical",values:"string",els:[],docs:[]}),glyphRef:s({name:"glyphRef",values:"string",els:[],docs:[]}),gradientTransform:s({name:"gradientTransform",values:"string",els:[],docs:[]}),gradientUnits:s({name:"gradientUnits",values:"string",els:[],docs:[]}),hanging:s({name:"hanging",values:"string",els:[],docs:[]}),height:s({name:"height",values:"string",els:[],docs:[]}),href:s({name:"href",values:"string",els:[],docs:[]}),hreflang:s({name:"hreflang",values:"string",els:[],docs:[]}),horizAdvX:s({name:"horiz-adv-x",values:"string",els:[],docs:[]}),horizOriginX:s({name:"horiz-origin-x",values:"string",els:[],docs:[]}),id:s({name:"id",values:"string",els:[],docs:[]}),ideographic:s({name:"ideographic",values:"string",els:[],docs:[]}),imageRendering:s({name:"image-rendering",values:"string",els:[],docs:[]}),in:s({name:"in",values:"string",els:[],docs:[]}),in2:s({name:"in2",values:"string",els:[],docs:[]}),intercept:s({name:"intercept",values:"string",els:[],docs:[]}),k:s({name:"k",values:"string",els:[],docs:[]}),k1:s({name:"k1",values:"string",els:[],docs:[]}),k2:s({name:"k2",values:"string",els:[],docs:[]}),k3:s({name:"k3",values:"string",els:[],docs:[]}),k4:s({name:"k4",values:"string",els:[],docs:[]}),kernelMatrix:s({name:"kernelMatrix",values:"string",els:[],docs:[]}),kernelUnitLength:s({name:"kernelUnitLength",values:"string",els:[],docs:[]}),kerning:s({name:"kerning",values:"string",els:[],docs:[]}),keyPoints:s({name:"keyPoints",values:"string",els:[],docs:[]}),keySplines:s({name:"keySplines",values:"string",els:[],docs:[]}),keyTimes:s({name:"keyTimes",values:"string",els:[],docs:[]}),lang:s({name:"lang",values:"string",els:[],docs:[]}),lengthAdjust:s({name:"lengthAdjust",values:"string",els:[],docs:[]}),letterSpacing:s({name:"letter-spacing",values:"string",els:[],docs:[]}),lightingColor:s({name:"lighting-color",values:"string",els:[],docs:[]}),limitingConeAngle:s({name:"limitingConeAngle",values:"string",els:[],docs:[]}),local:s({name:"local",values:"string",els:[],docs:[]}),markerEnd:s({name:"marker-end",values:"string",els:[],docs:[]}),markerMid:s({name:"marker-mid",values:"string",els:[],docs:[]}),markerStart:s({name:"marker-start",values:"string",els:[],docs:[]}),markerHeight:s({name:"markerHeight",values:"string",els:[],docs:[]}),markerUnits:s({name:"markerUnits",values:"string",els:[],docs:[]}),markerWidth:s({name:"markerWidth",values:"string",els:[],docs:[]}),mask:s({name:"mask",values:"string",els:[],docs:[]}),maskContentUnits:s({name:"maskContentUnits",values:"string",els:[],docs:[]}),maskUnits:s({name:"maskUnits",values:"string",els:[],docs:[]}),mathematical:s({name:"mathematical",values:"string",els:[],docs:[]}),max:s({name:"max",values:"string",els:[],docs:[]}),media:s({name:"media",values:"string",els:[],docs:[]}),method:s({name:"method",values:"string",els:[],docs:[]}),min:s({name:"min",values:"string",els:[],docs:[]}),mode:s({name:"mode",values:"string",els:[],docs:[]}),name:s({name:"name",values:"string",els:[],docs:[]}),numOctaves:s({name:"numOctaves",values:"string",els:[],docs:[]}),offset:s({name:"offset",values:"string",els:[],docs:[]}),opacity:s({name:"opacity",values:"string",els:[],docs:[]}),operator:s({name:"operator",values:"string",els:[],docs:[]}),order:s({name:"order",values:"string",els:[],docs:[]}),orient:s({name:"orient",values:"string",els:[],docs:[]}),orientation:s({name:"orientation",values:"string",els:[],docs:[]}),origin:s({name:"origin",values:"string",els:[],docs:[]}),overflow:s({name:"overflow",values:"string",els:[],docs:[]}),overlinePosition:s({name:"overline-position",values:"string",els:[],docs:[]}),overlineThickness:s({name:"overline-thickness",values:"string",els:[],docs:[]}),panose1:s({name:"panose-1",values:"string",els:[],docs:[]}),paintOrder:s({name:"paint-order",values:"string",els:[],docs:[]}),path:s({name:"path",values:"string",els:[],docs:[]}),pathLength:s({name:"pathLength",values:"string",els:[],docs:[]}),patternContentUnits:s({name:"patternContentUnits",values:"string",els:[],docs:[]}),patternTransform:s({name:"patternTransform",values:"string",els:[],docs:[]}),patternUnits:s({name:"patternUnits",values:"string",els:[],docs:[]}),ping:s({name:"ping",values:"string",els:[],docs:[]}),pointerEvents:s({name:"pointer-events",values:"string",els:[],docs:[]}),points:s({name:"points",values:"string",els:[],docs:[]}),pointsAtX:s({name:"pointsAtX",values:"string",els:[],docs:[]}),pointsAtY:s({name:"pointsAtY",values:"string",els:[],docs:[]}),pointsAtZ:s({name:"pointsAtZ",values:"string",els:[],docs:[]}),preserveAlpha:s({name:"preserveAlpha",values:"string",els:[],docs:[]}),preserveAspectRatio:s({name:"preserveAspectRatio",values:"string",els:[],docs:[]}),primitiveUnits:s({name:"primitiveUnits",values:"string",els:[],docs:[]}),r:s({name:"r",values:"string",els:[],docs:[]}),radius:s({name:"radius",values:"string",els:[],docs:[]}),referrerPolicy:s({name:"referrerPolicy",values:"string",els:[],docs:[]}),refX:s({name:"refX",values:"string",els:[],docs:[]}),refY:s({name:"refY",values:"string",els:[],docs:[]}),rel:s({name:"rel",values:"string",els:[],docs:[]}),renderingIntent:s({name:"rendering-intent",values:"string",els:[],docs:[]}),repeatCount:s({name:"repeatCount",values:"string",els:[],docs:[]}),repeatDur:s({name:"repeatDur",values:"string",els:[],docs:[]}),requiredExtensions:s({name:"requiredExtensions",values:"string",els:[],docs:[]}),requiredFeatures:s({name:"requiredFeatures",values:"string",els:[],docs:[]}),restart:s({name:"restart",values:"string",els:[],docs:[]}),result:s({name:"result",values:"string",els:[],docs:[]}),rotate:s({name:"rotate",values:"string",els:[],docs:[]}),rx:s({name:"rx",values:"string",els:[],docs:[]}),ry:s({name:"ry",values:"string",els:[],docs:[]}),scale:s({name:"scale",values:"string",els:[],docs:[]}),seed:s({name:"seed",values:"string",els:[],docs:[]}),shapeRendering:s({name:"shape-rendering",values:"string",els:[],docs:[]}),slope:s({name:"slope",values:"string",els:[],docs:[]}),spacing:s({name:"spacing",values:"string",els:[],docs:[]}),specularConstant:s({name:"specularConstant",values:"string",els:[],docs:[]}),specularExponent:s({name:"specularExponent",values:"string",els:[],docs:[]}),speed:s({name:"speed",values:"string",els:[],docs:[]}),spreadMethod:s({name:"spreadMethod",values:"string",els:[],docs:[]}),startOffset:s({name:"startOffset",values:"string",els:[],docs:[]}),stdDeviation:s({name:"stdDeviation",values:"string",els:[],docs:[]}),stemh:s({name:"stemh",values:"string",els:[],docs:[]}),stemv:s({name:"stemv",values:"string",els:[],docs:[]}),stitchTiles:s({name:"stitchTiles",values:"string",els:[],docs:[]}),stopColor:s({name:"stop-color",values:"string",els:[],docs:[]}),stopOpacity:s({name:"stop-opacity",values:"string",els:[],docs:[]}),strikethroughPosition:s({name:"strikethrough-position",values:"string",els:[],docs:[]}),strikethroughThickness:s({name:"strikethrough-thickness",values:"string",els:[],docs:[]}),string:s({name:"string",values:"string",els:[],docs:[]}),stroke:s({name:"stroke",values:"string",els:[],docs:[]}),strokeDasharray:s({name:"stroke-dasharray",values:"string",els:[],docs:[]}),strokeDashoffset:s({name:"stroke-dashoffset",values:"string",els:[],docs:[]}),strokeLinecap:s({name:"stroke-linecap",values:"string",els:[],docs:[]}),strokeLinejoin:s({name:"stroke-linejoin",values:"string",els:[],docs:[]}),strokeMiterlimit:s({name:"stroke-miterlimit",values:"string",els:[],docs:[]}),strokeOpacity:s({name:"stroke-opacity",values:"string",els:[],docs:[]}),strokeWidth:s({name:"stroke-width",values:"string",els:[],docs:[]}),surfaceScale:s({name:"surfaceScale",values:"string",els:[],docs:[]}),systemLanguage:s({name:"systemLanguage",values:"string",els:[],docs:[]}),tabindex:s({name:"tabindex",values:"string",els:[],docs:[]}),tableValues:s({name:"tableValues",values:"string",els:[],docs:[]}),target:s({name:"target",values:"string",els:[],docs:[]}),targetX:s({name:"targetX",values:"string",els:[],docs:[]}),targetY:s({name:"targetY",values:"string",els:[],docs:[]}),textAnchor:s({name:"text-anchor",values:"string",els:[],docs:[]}),textDecoration:s({name:"text-decoration",values:"string",els:[],docs:[]}),textRendering:s({name:"text-rendering",values:"string",els:[],docs:[]}),textLength:s({name:"textLength",values:"string",els:[],docs:[]}),to:s({name:"to",values:"string",els:[],docs:[]}),transform:s({name:"transform",values:"string",els:[],docs:[]}),transformOrigin:s({name:"transform-origin",values:"string",els:[],docs:[]}),type:s({name:"type",values:"string",els:[],docs:[]}),u1:s({name:"u1",values:"string",els:[],docs:[]}),u2:s({name:"u2",values:"string",els:[],docs:[]}),underlinePosition:s({name:"underline-position",values:"string",els:[],docs:[]}),underlineThickness:s({name:"underline-thickness",values:"string",els:[],docs:[]}),unicode:s({name:"unicode",values:"string",els:[],docs:[]}),unicodeBidi:s({name:"unicode-bidi",values:"string",els:[],docs:[]}),unicodeRange:s({name:"unicode-range",values:"string",els:[],docs:[]}),unitsPerEm:s({name:"units-per-em",values:"string",els:[],docs:[]}),vAlphabetic:s({name:"v-alphabetic",values:"string",els:[],docs:[]}),vHanging:s({name:"v-hanging",values:"string",els:[],docs:[]}),vIdeographic:s({name:"v-ideographic",values:"string",els:[],docs:[]}),vMathematical:s({name:"v-mathematical",values:"string",els:[],docs:[]}),values:s({name:"values",values:"string",els:[],docs:[]}),vectorEffect:s({name:"vector-effect",values:"string",els:[],docs:[]}),version:s({name:"version",values:"string",els:[],docs:[]}),vertAdvY:s({name:"vert-adv-y",values:"string",els:[],docs:[]}),vertOriginX:s({name:"vert-origin-x",values:"string",els:[],docs:[]}),vertOriginY:s({name:"vert-origin-y",values:"string",els:[],docs:[]}),viewBox:s({name:"viewBox",values:"string",els:[],docs:[]}),viewTarget:s({name:"viewTarget",values:"string",els:[],docs:[]}),visibility:s({name:"visibility",values:"string",els:[],docs:[]}),width:s({name:"width",values:"string",els:[],docs:[]}),widths:s({name:"widths",values:"string",els:[],docs:[]}),wordSpacing:s({name:"word-spacing",values:"string",els:[],docs:[]}),writingMode:s({name:"writing-mode",values:"string",els:[],docs:[]}),x:s({name:"x",values:"string",els:[],docs:[]}),xHeight:s({name:"x-height",values:"string",els:[],docs:[]}),x1:s({name:"x1",values:"string",els:[],docs:[]}),x2:s({name:"x2",values:"string",els:[],docs:[]}),xChannelSelector:s({name:"xChannelSelector",values:"string",els:[],docs:[]}),xlinkActuate:s({name:"xlink:actuate",values:"string",els:[],docs:[]}),xlinkArcrole:s({name:"xlink:arcrole",values:"string",els:[],docs:[]}),xLinkHref:s({name:"xlink:href",values:"string",els:[],docs:[]}),xlinkRole:s({name:"xlink:role",values:"string",els:[],docs:[]}),xlinkShow:s({name:"xlink:show",values:"string",els:[],docs:[]}),xlinkTitle:s({name:"xlink:title",values:"string",els:[],docs:[]}),xlinkType:s({name:"xlink:type",values:"string",els:[],docs:[]}),xmlBase:s({name:"xml:base",values:"string",els:[],docs:[]}),xmlLang:s({name:"xml:lang",values:"string",els:[],docs:[]}),xmlSpace:s({name:"xml:space",values:"string",els:[],docs:[]}),y:s({name:"y",values:"string",els:[],docs:[]}),y1:s({name:"y1",values:"string",els:[],docs:[]}),y2:s({name:"y2",values:"string",els:[],docs:[]}),yChannelSelector:s({name:"yChannelSelector",values:"string",els:[],docs:[]}),z:s({name:"z",values:"string",els:[],docs:[]}),zoomAndPan:s({name:"zoomAndPan",values:"string",els:[],docs:[]}),autoReverse:s({name:"autoReverse",values:"string",els:[],docs:[]}),accelerate:s({name:"accelerate",values:"string",els:[],docs:[]})}},1317:(e,t,o)=>{const{RecursiveConsole:s,RecursiveRenderer:n}=o(8221),r=o(2304),{HTML_CONTAINER:i,HTML_NS:a}=o(3307),{renderValue:l}=o(7432),{ELEMENT_TYPE_TEXT_NODE:d}=o(9085),{isEvent:c,isAttribute:h,isToggleableAttribute:p,getAttributeName:u,getEvent:m,eventHasHandler:g}=o(5077),{copy:f}=o(459);e.exports=class extends n{constructor(e,t,o,s={}){super(e,t,o),this.styler=new r,this.scopedStyle=s.hasOwnProperty("scopedStyle")&&!0===s.scopedStyle}setElementEvent(e,t,o){o[e]=o=>this.orchestrator.batchCallback((()=>t(o)),e)}transformUid(e){const t=function(e){const t=[..."abcdefghijklmnopqrstuvwxyz-_0123456789"],o=t.length,s=[...e].reduce(((e,t)=>e+t.charCodeAt()),0);return[...e].map(((e,n)=>(e=>{const s=t[e%o];return n%3==0&&0!=n?s.toUpperCase():s})(e.charCodeAt()+s+n))).join("")}(e);return t}resolveClassName(e){if("object"!=typeof e.style)return;if(e.style=f(e.style),!this.isExternalStyleSheet(e.style))return;if(!this.scopedStyle&&!e.style.scoped&&!e.style.className)return;let t=e.style.className||"";this.scopedStyle&&!1!==e.style.scoped&&(t&&(t+="-"),t+=`_${this.transformUid(e.uid)}`),e.attributes.className?e.attributes.className+=" ":e.attributes.className="",e.attributes.className=e.attributes.className+t,e.style.className=t}isExternalStyleSheet(e){return"object"==typeof e&&Object.keys(e).filter((e=>"inline"!=e)).length>0}flattenStyle(e){const t=[];return Array.isArray(e.children)&&e.children.forEach((e=>{t.push(...this.flattenStyle(e))})),this.resolveClassName(e),e.style&&this.isExternalStyleSheet(e.style)&&(e.style.className?t.push(e.style):s.warn("CSS: no className detected and therefore style will be ignored")),t}reduceChildrenToInnerHTML(e){return e.children.reduce(((e,t)=>e+t.children.toString()),"")}useRendererCreateInstance(e){if(e.elementType===d)return document.createTextNode(e.children);let t=a;return e.rendererOptions&&e.rendererOptions.ns&&(t=e.rendererOptions.ns),document.createElementNS(t,e.elementType)}useRendererUpdateText(e,t){e.instance.data=t.children}useRendererIsAttribute(e){return h(e)}useRendererIsEvent(e){return c(e)}useRendererItemInTree(e){return document.contains(e.instance)}useRendererInjectAttribute(e,t,o){if("dataSet"==e)for(let e in t)o.dataset[e]=t[e];else p(e)?o.toggleAttribute(u(e),1==t):o.setAttribute(u(e),t)}useRendererInjectStyle(e,t){if(e&&e.inline)for(let o in e.inline)t.style[o]=l(e.inline[o],o)}useRendererSetAttribute(e,t,o){const n=o.instance;if("dataSet"===e){for(let e in n.dataset)t[e]!==n.dataset[e]&&(n.dataset[e]=t[e]);for(let e in t)void 0===n.dataset[e]&&(n.dataset[e]=t[e])}else{const o=u(e),r=p(e),i=r?1==t:t;r?n.toggleAttribute(o,i):n.setAttribute(o,i);try{n[o]=i}catch(e){s.warn("Recursive Web Renderer : Something went wrong when trying to update an attribute.")}}}useRendererUpdateStyle(e,t){let o={},s={};e.style&&e.style.inline&&(o=e.style.inline),t.style&&t.style.inline&&(s=t.style.inline);const n={...o,...s};for(let t in n)e.instance.style[t]=null!=s[t]?l(n[t],t).trim():""}useRendererInjectEvent(e,t,o){const s=m(e);s&&(this.setElementEvent(s.on,t,o),g(e)&&s.handler(o))}useRendererAddEvent(e,t,o){this.useRendererInjectEvent(e,t,o.instance)}useRendererUpdateEvent(e,t,o){const s=m(e);s&&this.setElementEvent(s.on,t,o.instance)}useRendererRemoveEvent(e,t){const o=m(e);o&&(t[o.on]=null)}useRendererInjectChild(e,t){t.append(this.renderInstance(e))}useRendererClean(){}useRendererRenderTree(){const e=this.renderInstance(this.current);this.root.append(e)}useRendererRemoveAttribute(e,t){t.removeAttribute(e),t[e]=""}useRendererOnTreePrepared(e){const t=this.flattenStyle(e);this.styler.update(t)}useRendererAddElement(e,t,o){const s=t.instance;if("number"==typeof o&&s.childNodes.length>o){const t=e.parent.instance,s=t.childNodes.item(o);t.insertBefore(this.renderInstance(e),s)}else s.append(this.renderInstance(e))}useRendererChangeElementPosition(e,t){e.parent.instance.insertBefore(e.instance,e.parent.instance.children[t])}useRendererGetElementPosition(e){return Array.from(e.instance.parentElement.children).indexOf(e.instance)}useRendererReplaceElement(e,t){e.instance.replaceWith(this.renderInstance(t))}useRendererRemoveElement(e){e.instance.remove()}useRendererCreateRawContainer(e){const t=document.createElement(i);return t.innerHTML=this.reduceChildrenToInnerHTML(e),t}useRendererUpdateRawContainersAgainstEachOthers(e,t){const o=this.reduceChildrenToInnerHTML(e),s=this.reduceChildrenToInnerHTML(t);o!==s&&(e.instance.innerHTML=s)}}},6447:(e,t,o)=>{const{RecursiveRouter:s,RecursiveApp:n}=o(8221);e.exports=class extends s{constructor(e,t,o,s){super(e,t,o,s)}useRouterNavigationListener(){window.addEventListener("popstate",(e=>{let t;t=e.state?e.state.route:this.useRouterGetRoute();const[o,s,n]=this.resolvePath(t);this.mountNewRoute(o,s,n),e.preventDefault()}))}useRouterMakeURL(e){let t=`${location.origin}/`;return this.base.trim()&&(t+=`${this.base}/`),"/"==e.charAt(0)?t+=e.slice(1):t+=e,t}useRouterGetRoute(){return this.base?window.location.pathname.replace("/"+this.base,""):window.location.pathname}useRouterGetLocationPath(){return location.pathname}useRouterReplaceState(e,t,o){history.replaceState({route:e},"",this.useRouterMakeURL(e))}useRouterPushState(e,t,o){history.pushState({route:e},"",this.useRouterMakeURL(e))}useRouterGoToAnchor(e){setTimeout((()=>{const t=e.replace("#",""),o=document.getElementById(t);o&&o.scrollIntoView({behavior:"smooth"})}),200)}useRouterScrollToTop(){this.scroll&&window.scrollTo({top:0,behavior:"smooth"})}useRouterOnLoad(){const e=this.useRouterGetRoute(),t=location.hash,[o]=this.getRouteState();o.title&&this.useRouterSetTitle(o.title),"function"==typeof o.onLoad&&o.onLoad(),"/"!==e&&this.replace(e,t)}useRouterSetTitle(e){document.title=e}}},7063:e=>{const t={Event:"Event",AnimationEvent:"AnimationEvent",BeforeUnloadEvent:"BeforeUnloadEvent",FocusEvent:"FocusEvent",MouseEvent:"MouseEvent",ClipboardEvent:"ClipboardEvent",HashChangeEvent:"HashChangeEvent",PageTransitionEvent:"PageTransitionEvent",UIEvent:"UIEvent",StorageEvent:"StorageEvent",SubmitEvent:"SubmitEvent",TransitionEvent:"TransitionEvent",WheelEvent:"WheelEvent",InputEvent:"InputEvent",DragEvent:"DragEvent",KeyboardEvent:"KeyboardEvent",MouseEvent:"MouseEvent",PointerEvent:"PointerEvent",TouchEvent:"TouchEvent"};e.exports={attribute:function({name:e,toggleable:t=!1,values:o=[],els:s=[],docs:n=[],links:r=[],decorators:i=[]}){return{name:e,toggleable:t,values:o,els:s,docs:n,links:r,decorators:i}},event:function({listener:e,on:o,type:s=t.Event,docs:n=[],handler:r,links:i=[],decorators:a=[]}){return{listener:e,on:o,type:s,docs:n,handler:r,links:i,decorators:a}},component:function({tag:e,props:t={},docs:o=[],handler:s,childless:n=!1,links:r=[],decorators:i=[]}){return{tag:e,props:t,docs:o,handler:s,childless:n,links:r,decorators:i}},property:function({css:e,values:t=[],type:o="string",support:s=[],docs:n=[],links:r=[],decorators:i=[]}){return{css:e,values:t,type:o,support:s,docs:n,links:r,decorators:i}},selector:function({css:e,docs:t=[],support:o=[],links:s=[],decorators:n=[]}){return{css:e,docs:t,support:o,links:s,decorators:n}},EventTypes:t}},361:(e,t,o)=>{const{event:s}=o(7063);e.exports=function({store:e,type:t="Event",docs:o=[],...n}){return s({listener:e,on:e,handler:t=>{window[e]&&window[e].items&&window[e].items.push(t)},type:t,docs:o,...n})}},3922:e=>{e.exports=function(e,t){window.addEventListener(e,t)}},9801:(e,t,o)=>{const{RecursiveOrchestrator:s}=o(9933),n=o(3922);e.exports=function(e,t,o,s,r=!0){function i(){window[o].items=window[o].items.filter((e=>document.contains(e)))}function a(t){t&&document.contains(t)&&(e.batchCallback((()=>{window[o].items.forEach((e=>{e.contains(t)||e[s]()}))})),i())}window[o]||(window[o]={items:[],notify:()=>a(document.body)},n(t,(t=>{if(!Array.isArray(window[o].items))return;const s=t.target;e.batchCallback((()=>{window[o].items.forEach((e=>{r&&e.contains(s)||e[o](t,(()=>a(s)))}))})),i()})))}},402:(e,t,o)=>{const s=o(9801),n=o(361),{RecursiveApp:r}=o(8221),{WINDOW_ON_CLICK:i,WINDOW_ON_CONTEXT_MENU:a,WINDOW_ON_RESIZE:l,WINDOW_ON_KEY_UP:d,WINDOW_ON_KEY_DOWN:c,WINDOW_ON_SCROLL:h,WINDOW_ON_BEFORE_UNLOAD:p}=o(3307);e.exports={handler:n,useRecursiveWindow:function(e){const t=e.orchestrator;s(t,"click",i.toLowerCase(),i),s(t,"contextmenu",a.toLowerCase(),a),s(t,"resize",l.toLowerCase(),l,!1),s(t,"keyup",d.toLowerCase(),d,!1),s(t,"keydown",c.toLowerCase(),c,!1),s(t,"scroll",h.toLowerCase(),h,!1),s(t,"beforeunload",p.toLowerCase(),p,!1)}}},8221:(e,t,o)=>{const{RecursiveOrchestrator:s,RecursiveRenderer:n,RecursiveRouter:r,RecursiveState:i,RecursiveConsole:a,RecursiveApp:l,createElement:d,createRoute:c}=o(9933);e.exports={RecursiveOrchestrator:s,RecursiveRenderer:n,RecursiveRouter:r,RecursiveState:i,RecursiveApp:l,RecursiveConsole:a,createElement:d,createRoute:c}},9933:(e,t,o)=>{const{RecursiveOrchestrator:s}=o(8253),{RecursiveRenderer:n,createElement:r}=o(2624),{RecursiveRouter:i,createRoute:a}=o(5e3),{RecursiveState:l}=o(3559),{RecursiveConsole:d}=o(6766),{RecursiveApp:c}=o(1943);e.exports={createElement:r,createRoute:a,RecursiveOrchestrator:s,RecursiveRenderer:n,RecursiveRouter:i,RecursiveState:l,RecursiveConsole:d,RecursiveApp:c}},1943:(e,t,o)=>{const{RecursiveConsole:s}=o(6766),{RecursiveOrchestrator:n}=o(8253),{RecursiveRenderer:r}=o(2624),{RecursiveRouter:i}=o(5e3),{RecursiveState:a}=o(3559);e.exports={RecursiveApp:class{constructor({buildRenderer:e,buildRouter:t,cacheSize:o=1e3,onAppInit:l}){if(this.router=null,this.renderer=null,this.orchestrator=new n(this),this.stateManager=new a(this),"function"!=typeof e)s.error("Recursive App : buildRenderer is not a function.");else{let t=e(this);t instanceof r?this.renderer=t:s.error("Renderer is not of type RecursiveRenderer.")}if("function"==typeof t){let e=t(this);e instanceof i&&(this.router=e)}"number"==typeof o&&o!=this.stateManager.cacheSize&&(this.stateManager.cacheSize=o),"function"==typeof l&&l(this)}createElement(e,t){return this.renderer.createElement(e,t)}render(){this.renderer.render(),this.router&&this.router.useRouterOnLoad()}getRoute(){if(this.router)return this.router.useRouterGetRoute();s.error("Recursive Router : You can not use the method 'getRoute()' because no Router has been initialized.")}getParams(){if(this.router)return this.router.getParams();s.error("Recursive Router : You can not use the method 'getParams()' because no Router has been initialized.")}getBase(){if(this.router)return this.router.base;s.error("Recursive Router : You can not use the method 'getBase()' because no Router has been initialized.")}goTo(e){this.router?this.router.goTo(e):s.error("Recursive Router : You can not use the method 'goTo()' because no Router has been initialized.")}renderRoute(){if(this.router)return this.router.renderRoute();s.error("Recursive Router : You can not use the method 'renderRoute()' because no Router has been initialized.")}getState(e){return this.stateManager.getState(e)}setState(e,t,o,s){return this.stateManager.setState(e,t,o,s)}getCache(e){return this.stateManager.getCache(e)}setCache(e,t,o,s){return this.stateManager.setCache(e,t,o,s)}getRef(e){return this.stateManager.getRef(e)}updateOn(e){this.orchestrator.batchCallback(e,"update-on-"+Date.now())}setEffect(e,t,o){this.stateManager.setEffect(e,o,t)}}}},459:(e,t,o)=>{const s=o(6090),n=o(5488),r=o(5389);e.exports={copy:s,isDevMode:n,areEqual:r}},5389:e=>{e.exports=function e(t,o,s=10){const n=(e,t)=>!!Object.is(e,t)||"object"==typeof e&&"object"==typeof t&&null!==e&&null!==t&&void 0,r=n(t,o);if("boolean"==typeof r)return r;const i=Object.keys(t),a=Object.keys(o);if(i.length!==a.length)return!1;if([...i].sort().join("")!==[...a].sort().join(""))return!1;for(let r=0;r<i.length;r++){if(!1===typeof n(t[i[r]],o[i[r]]))return!1;if(s>0&&!e(t[i[r]],o[i[r]],s-1))return!1}return!0}},6090:e=>{e.exports=function(e){let t;return["bigint","boolean","function","number","string","symbol","undefined"].includes(typeof e)||null===e?t=e:Array.isArray(e)?(t=[],Object.assign(t,e)):"object"==typeof e?(t={},Object.assign(t,e)):t=e,t}},5488:(e,t,o)=>{const{DEVELOPMENT_MODE:s}=o(9085);e.exports=function(){return"production"===s}},6766:(e,t,o)=>{const{isDevMode:s}=o(459);e.exports={RecursiveConsole:class{constructor(){}static showDeveloperHelp(e){}static error(e,t){if(!s()||!e)return;let o="";throw Array.isArray(t)&&t.length>0&&(o+="- Help - "+t.join(", ")),this.showDeveloperHelp({msg:e,help:t}),new Error(`${e} ${o}`)}static log(e){s()&&e&&console.log(e)}static warn(e){s()&&e&&(this.showDeveloperHelp({msg:e}),console.warn(e))}}}},9085:e=>{const t=Symbol.for("recursive.element");e.exports={STATE_CACHE_STORE:"cache",STATE_REF_STORE:"ref",STATE_RESERVED_STORE:"reserved",STATE_STATE_STORE:"state",STATE_EFFECT_STORE:"effect",ROUTER_ANCHOR_REG_EXP:/#[\w.~:?#[\]@!$&'()*+,;=-]+$/,ROUTER_DYNAMIC_REG_EXP:/:[^:;]*;/g,ROUTER_PATH_STATE:"path",ROUTER_ROUTE_STATE:"route",ROUTER_NOT_FOUND_ROUTE:"/404",DEVELOPMENT_MODE:"development",ORCHESTRATOR_FREE:"free",ORCHESTRATOR_HANDLING_REQUESTS:"handling-requests",ORCHESTRATOR_COMPUTE_TREE:"calculating-tree",ORCHESTRATOR_COMPUTE_STYLE:"calculating-style",ORCHESTRATOR_RENDERING:"rendering",ORCHESTRATOR_UPDATING:"updating",ORCHESTRATOR_COMPUTE_DIFF:"calculating-diff",ORCHESTRATOR_EXEC_BEFORE_DESTROYED:"execute-before-destroyed",ORCHESTRATOR_COMMIT_INTO_TREE:"commit-into-tree",ORCHESTRATOR_EXEC_ON_DESTROYED:"execute-on-destroyed",ORCHESTRATOR_EXEC_ON_CREATED:"execute-on-created",ORCHESTRATOR_EXEC_ON_UPDATED:"execute-on-updated",ORCHESTRATOR_CLEAN_STATES:"clean-states",FLAGS_FORCE_RERENDER:"forceRerender",FLAGS_RENDER_IF:"renderIf",HOOKS_BEFORE_DESTROYED:"beforeDestroyed",HOOKS_ON_CREATED:"onCreated",HOOKS_ON_DESTROYED:"onDestroyed",HOOKS_ON_REF:"onRef",HOOKS_ON_UPDATED:"onUpdated",ELEMENT_TYPE_FRAGMENT:"fragment",ELEMENT_TYPE_TEXT_NODE:"#text",ELEMENT_TYPE_RAW:"#raw",RENDERER_PHASE_BEFORE_DESTROYED:"beforeDestroyed",RENDERER_PHASE_CHANGES:"changes",RENDERER_PHASE_ON_CREATED:"onCreated",RENDERER_PHASE_ON_DESTROYED:"onDestroyed",RENDERER_PHASE_ON_UPDATED:"onUpdated",RECURSIVE_ELEMENT_SYMBOL:t}},3019:e=>{e.exports={RecursiveContext:class{constructor(){this.context=void 0,this.stack=[]}get(){return this.context}startContext(e){null!=this.context&&this.stack.push(this.context),this.context=e}endCurrentContext(){this.context&&(this.stack.length>0?this.context=this.stack.pop():this.context=void 0)}useContext(e,t){if("function"!=typeof e)return;this.startContext(t);const o=e();return this.endCurrentContext(),o}}}},8253:(e,t,o)=>{const{RecursiveConsole:s}=o(6766),{createTaskId:n,createUpdateObject:r}=o(8258),{ORCHESTRATOR_FREE:i,ORCHESTRATOR_HANDLING_REQUESTS:a,ORCHESTRATOR_COMPUTE_TREE:l,ORCHESTRATOR_COMPUTE_STYLE:d,ORCHESTRATOR_RENDERING:c,ORCHESTRATOR_UPDATING:h,ORCHESTRATOR_COMPUTE_DIFF:p,ORCHESTRATOR_EXEC_BEFORE_DESTROYED:u,ORCHESTRATOR_COMMIT_INTO_TREE:m,ORCHESTRATOR_EXEC_ON_DESTROYED:g,ORCHESTRATOR_EXEC_ON_CREATED:f,ORCHESTRATOR_EXEC_ON_UPDATED:b,ORCHESTRATOR_CLEAN_STATES:v}=o(9085);e.exports={RecursiveOrchestrator:class{constructor(e){this.boostrapper=e,this.currentTask={done:!0},this.step=i,this.updatesCount=0,this.batching=!1,this.stateChanged=!1,this.batchingStartTime=Date.now(),this.batchingLastDuration=0,this.batchingRequests=[],this.unhandledRequests=[],this.setStep={free:()=>this.step=i,handlingRequests:()=>this.step=a,computeTree:()=>this.step=l,computeStyle:()=>this.step=d,rendering:()=>this.step=c,updating:()=>this.step=h,computeDiff:()=>this.step=p,commit:()=>this.step=m,execBeforeDestroyed:()=>this.step=u,execOnDestroyed:()=>this.step=g,execOnCreated:()=>this.step=f,execOnUpdated:()=>this.step=b,cleanStates:()=>this.step=v}}get renderer(){return this.boostrapper.renderer}update(){this.renderer||s.error("Recursive Orchestrator : No renderer was specified"),this.renderer.update()}requestUpdate(e){if([i,a].includes(this.step))return this.step===i?(this.update(),this.updatesCount++,this.countUpdateSinceFree(),void(this.unhandledRequests.length>0?(this.setStep.handlingRequests(),this.requestUpdate("unhandled-requests")):this.free())):void(this.step===a&&(this.unhandledRequests=[],this.update(),this.updatesCount++,this.unhandledRequests.length>0?(this.setStep.handlingRequests(),this.unhandledRequests=[],this.requestUpdate("unhandled-requests")):this.free()));this.unhandledRequests.push(r(e,e))}free(){this.updatesCount=0,this.stateChanged=!1,this.setStep.free()}countUpdateSinceFree(){setTimeout((()=>{this.updatesCount>200&&s.error("Infinite re-render detected",["This error occured because the RecursiveDOM detected the need of a large amount of updates in a short period of time.","Avoid updating the state without any condition specially in hooks"])}),2e3)}notifyStateChanged(){this.stateChanged=!0}startBatching(){this.batchingStartTime=Date.now(),this.batching=!0}endBatching(e){this.batchingLastDuration=Date.now()-this.batchingStartTime,this.batchingRequests=[],this.batching=!1,this.stateChanged&&this.requestUpdate(e)}requestEndBatching(e){this.batchingRequests.length>0&&(this.batchingRequests=this.batchingRequests.filter((t=>t.uuid!==e))),0===this.batchingRequests.length&&this.endBatching(e)}requestStartBatching(e){if(this.batching){const t=n(20);this.batchingRequests.push(r(e,t)),setTimeout((()=>{this.batchingRequests.find((e=>e.uuid===t))&&(s.warn("Recursive Orchestrator : Batch request took too long (more than 100ms). This could be caused by a catched error. Avoid batching your updates in an asynchronous call and using await inside the updateAfter method."),this.endBatching(e))}),100)}else this.startBatching()}batchCallback(e,t="batch-callback-"+Date.now){void 0!==e&&"function"==typeof e&&(!0===this.batching?e():(this.requestStartBatching(t),e(),this.requestEndBatching(t)))}}}},8258:e=>{e.exports={createTaskId:function(e){let t="";for(let e=0;e<5;e++)t+=Math.random()*e*10*Math.random();return`task-${t}-${e}`},createUpdateObject:function(e,t){return{sender:e,time:Date.now(),uuid:t}}}},6701:(e,t,o)=>{const{RECURSIVE_ELEMENT_SYMBOL:s}=o(9085);e.exports={createElement:function(e,t){return{...t,elementType:e,$$_RecursiveSymbol:s}}}},8216:(e,t,o)=>{const{FLAGS_RENDER_IF:s,FLAGS_FORCE_RERENDER:n}=o(9085),r={forceRerender:n,renderIf:s};e.exports={isFlag:function(e){return!!r[e]},list:r}},2379:(e,t,o)=>{const{HOOKS_ON_CREATED:s,HOOKS_ON_DESTROYED:n,HOOKS_ON_UPDATED:r,HOOKS_BEFORE_DESTROYED:i,HOOKS_ON_REF:a}=o(9085),l={onCreated:{key:s,type:"function"},onDestroyed:{key:n,type:"function"},onUpdated:{key:r,type:"function"},beforeDestroyed:{key:i,type:"function"},onRef:{key:a,type:"function"}};e.exports={isHook:function(e,t){return!!l[e]&&typeof t===l[e].type},list:l}},2624:(e,t,o)=>{const{RecursiveConsole:s}=o(6766),{RecursiveContext:n}=o(3019),{createElement:r}=o(6701),{isFlag:i}=o(8216),{isHook:a}=o(2379),{isValidChild:l,makeDiffList:d,isRecursiveElement:c}=o(9310),{RENDERER_PHASE_ON_CREATED:h,RENDERER_PHASE_ON_UPDATED:p,RENDERER_PHASE_BEFORE_DESTROYED:u,RENDERER_PHASE_ON_DESTROYED:m,RENDERER_PHASE_CHANGES:g,RECURSIVE_ELEMENT_SYMBOL:f,ELEMENT_TYPE_FRAGMENT:b,ELEMENT_TYPE_RAW:v,ELEMENT_TYPE_TEXT_NODE:y}=o(9085);e.exports={RecursiveRenderer:class{constructor(e,t,o){this.bootstrapper=o,this.contextManager=new n,this.app=e,this.root=t,this.current=void 0,this.phases={[h]:[],[p]:[],[u]:[],[m]:[],[g]:[]}}get orchestrator(){return this.bootstrapper.orchestrator}get stateManager(){return this.bootstrapper.stateManager}createElement(e,t){return{...t,elementType:e,$$_RecursiveSymbol:f}}delegateToRenderer(e,t){this.phases[e]&&"function"==typeof t&&this.phases[e].push(t)}runPhase(e){this.phases&&Array.isArray(this.phases[e])&&this.phases[e].forEach((e=>{"function"==typeof e&&e()}))}onElementUpdated(e){e.hooks&&e.hooks.onUpdated&&this.delegateToRenderer(p,(()=>e.hooks.onUpdated(e.instance)))}onElementCreated(e){e.hooks&&e.hooks.onCreated&&this.delegateToRenderer(h,(()=>e.hooks.onCreated(e.instance)))}onBeforeElementDestroyed(e){e.hooks&&this.delegateToRenderer(u,e.hooks.beforeDestroyed)}onElementDestroyed(e){e.hooks&&this.delegateToRenderer(m,e.hooks.onDestroyed)}renderInstance(e){const t=e.elementType===v?this.useRendererCreateRawContainer(e):this.useRendererCreateInstance(e);if(e.attributes)for(let o in e.attributes)this.useRendererInjectAttribute(o,e.attributes[o],t);if(e.style&&this.useRendererInjectStyle(e.style,t),e.events)for(let o in e.events)this.useRendererInjectEvent(o,e.events[o],t);if(Array.isArray(e.children)&&e.elementType!==v)for(let o of e.children)this.useRendererInjectChild(o,t);return e.instance=t,this.onElementCreated(e),t}replaceElement(e,t){this.onBeforeElementDestroyed(e),this.delegateToRenderer(g,(()=>this.useRendererReplaceElement(e,t))),this.onElementDestroyed(e),t.instance=e.instance}addElement(e,t,o){c(e)&&(this.delegateToRenderer(g,(()=>this.useRendererAddElement(e,t,o))),this.onElementCreated(e))}changeElementPosition(e,t){this.delegateToRenderer(g,(()=>this.useRendererChangeElementPosition(e,t)))}removeElement(e){this.onBeforeElementDestroyed(e),this.delegateToRenderer(g,(()=>{this.useRendererRemoveElement(e)})),this.onElementDestroyed(e)}updateEvents(e,t){const o=d(e.events,t.events);for(let s in o.toUpdate)this.delegateToRenderer(g,(()=>{this.useRendererUpdateEvent(s,t.events[s],e)}));for(let s in o.toAdd)this.delegateToRenderer(g,(()=>{this.useRendererAddEvent(s,t.events[s],e)}));for(let t in o.toRemove)this.delegateToRenderer(g,(()=>{this.useRendererRemoveEvent(t,e.instance)}));return Object.keys(o.toRemove).length>0||Object.keys(o.toAdd).length>0}updateAttributes(e,t){const o=d(e.attributes,t.attributes);for(let t in o.toUpdate)this.delegateToRenderer(g,(()=>{this.useRendererSetAttribute(t,o.toUpdate[t],e)}));for(let t in o.toAdd)this.delegateToRenderer(g,(()=>{this.useRendererSetAttribute(t,o.toAdd[t],e)}));for(let t in o.toRemove)this.delegateToRenderer(g,(()=>{this.useRendererRemoveAttribute(t,e.instance)}));return Object.keys(o.toRemove).length>0||Object.keys(o.toAdd).length>0||Object.keys(o.toUpdate).length>0}updateChildren(e,t){const o=(e,t)=>{for(let o=0;o<e.length;o++)this.updateElement(e[o],t[o])};for(let o in e.children)if(!this.useRendererItemInTree(e.children[o]))return void this.replaceElement(e,t);if(e.map&&t.map){for(let o in e.map)null==t.map[o]&&this.removeElement(e.children[e.map[o]]);for(let o in t.map){const s=t.map[o],n=t.children[s];if(null==e.map[o])this.addElement(n,e,s);else{const t=e.map[o],r=e.children[t];this.useRendererGetElementPosition(r)!=s&&this.changeElementPosition(r,s),this.updateElement(r,n)}}}else if(e.children.length==t.children.length)o(e.children,t.children);else if(e.children.length>t.children.length){for(;e.children.length>t.children.length;)this.removeElement(e.children.pop());o(e.children.slice(0,t.children.length),t.children)}else{for(let o=e.children.length;o<t.children.length;o++)this.addElement(t.children[o],e);o(e.children,t.children.slice(0,e.children.length))}}updateStyle(e,t){this.delegateToRenderer(g,(()=>this.useRendererUpdateStyle(e,t)))}updateElement(e,t){const o=e.instance;if(o||s.error("Recursive Renderer : Instance of the element not found",["This error can happen when you manipulate the dom directly."]),e.flags&&!0===e.flags.forceRerender)this.replaceElement(e,t);else if(e.elementType!==t.elementType)this.replaceElement(e,t);else if(e.elementType===y&&t.elementType===y)e.children!==t.children&&this.useRendererUpdateText(e,t);else{const o=this.updateEvents(e,t),s=this.updateAttributes(e,t)&&this.updateAttributes(e,t);this.updateStyle(e,t),e.elementType===v?this.useRendererUpdateRawContainersAgainstEachOthers(e,t):this.updateChildren(e,t),(o||s)&&this.onElementUpdated(e)}t.instance=o}setInstanceReference(e){if(e.hooks&&"function"==typeof e.hooks.onRef){const t=e.hooks.onRef(e.instance);"string"==typeof t&&this.stateManager.setRef(t,e.instance)}Array.isArray(e.children)&&e.children.forEach((e=>{this.setInstanceReference(e)}))}render(){"function"!=typeof this.app&&s.error("App is not of type function."),this.root||s.error("No root was specified."),this.orchestrator.setStep.computeTree(),this.current=this.prepareElementsTree(),this.useRendererOnTreePrepared(this.current),this.orchestrator.setStep.commit(),this.useRendererRenderTree(),this.orchestrator.setStep.execOnCreated(),this.runPhase(h),this.setInstanceReference(this.current),this.clean(),this.orchestrator.setStep.free()}update(){this.orchestrator.setStep.computeTree();const e=this.prepareElementsTree();this.useRendererOnTreePrepared(e),this.orchestrator.setStep.computeDiff(),this.updateElement(this.current,e),this.current=e,this.orchestrator.setStep.execBeforeDestroyed(),this.runPhase(u),this.orchestrator.setStep.commit(),this.runPhase(g),this.orchestrator.setStep.execOnDestroyed(),this.runPhase(m),this.orchestrator.setStep.execOnUpdated(),this.runPhase(p),this.orchestrator.setStep.execOnCreated(),this.runPhase(h),this.orchestrator.setStep.cleanStates(),this.setInstanceReference(this.current),this.clean()}clean(){this.stateManager.clear(),this.phases={[h]:[],[p]:[],[u]:[],[m]:[],[g]:[]},this.useRendererClean()}prepareElement(e,t,o){const n={};if(!e.$$_RecursiveSymbol||e.$$_RecursiveSymbol!=f)return s.error("Recursive Renderer : Element does not have the RecursiveElement signature symbol.",['You should create an element only using "createRecursiveElement" method.']),!1;if("string"!=typeof e.elementType||!e.elementType||!e.elementType.toString().trim())return s.error('Recursive Renderer : "elementType" should not be empty or null.',["Element type should be of type string.","Make sure to provide a type for your element (ex: div in web)."]),!1;n.$$_RecursiveSymbol=e.$$_RecursiveSymbol,n.elementType=e.elementType,n.events={},n.attributes={},n.children=[],n.hooks={},n.flags={},n.instance={},n.style={},n.map=!1,n.key=e.key,n.ref=void 0,n.style=e.style,n.rendererOptions=e.rendererOptions,n.uid=t,n.parent=o,n.indexInParent=parseInt(t.split("-").pop());for(let t in e){if("flags"===t)for(let t in e.flags)i(t)&&(n.flags[t]=e.flags[t]);if("hooks"===t)for(let t in e.hooks)a(t,e.hooks[t])&&(n.hooks[t]=e.hooks[t]);this.useRendererIsEvent(t)?("function"!=typeof e[t]&&s.error(`Recursive Renderer : Event "${t}" is not a function.`),n.events[t]=e[t]):this.useRendererIsAttribute(t)&&(n.attributes[t]=e[t])}if(![null,void 0].includes(e.children)){let t=[];Array.isArray(e.children)||(e.children=[e.children]),e.children.forEach(((e,o)=>{const s=n.uid+"-"+o,r=this.prepareChild(e,s,n);r&&(r.elementType===b?t.push(...r.children):l(r)&&t.push(r))})),n.children=t,n.elementType===v&&n.children.some((e=>e.elementType!=y))&&s.warn("Recursive Renderer : You are using the raw element while one or more children are not of type string. They will be converted to string."),n.map=this.prepareMap(n.children)}return n}prepareChild(e,t,o){if([null,void 0].includes(e))return!1;if(e.elementType){if(e.flags&&!1===e.flags.renderIf)return!1;{let s=!1;return s=this.prepareElement(e,t,o),s}}return r(y,{children:e})}prepareMap(e){const t={};let o=0;for(let n of e){if(!["string","number"].includes(typeof n.key))return!1;if(null!=t[n.key])return s.warn("Recursive Renderer : Duplicate keys detected. Each child should have a unique key."),!1;t[n.key]=o,o++}return t}prepareElementsTree(){const e=this.prepareElement(this.app(),"0",null);return c(e)||s.error("Root element is not of type RecursiveElement.",["Use createRecursiveElement to create a valid element."]),e}useRendererUpdateStyle(e,t){s.error("Renderer has no method updateStyle.")}useRendererUpdateText(e,t){s.error("Renderer has no method updateText.")}useRendererClean(){s.error("Renderer has no method clean.")}useRendererOnTreePrepared(e){s.error("Renderer has no method onTreePrepared.")}useRendererRemoveAttribute(e,t){s.error("Renderer has no method RemoveAttribute.")}useRendererSetAttribute(e,t,o){s.error("Renderer has no method SetAttribute.")}useRendererItemInTree(e){s.error("Renderer has no method itemInTree.")}useRendererRemoveEvent(e,t){s.error("Renderer has no method RemoveEvent.")}useRendererAddEvent(e,t,o){s.error("Renderer has no method AddEvent.")}useRendererRenderTree(){s.error("Renderer has no method renderTree.")}useRendererChangeElementPosition(e,t,o){s.error("Renderer has no method useRendererChangeElementPosition.")}useRendererGetElementPosition(e){s.error("Renderer has no method useRendererGetElementPosition.")}useRendererRemoveElement(e){s.error("Renderer has no method useRendererRemoveElement")}useRendererAddElement(e,t,o){s.error("Renderer has no method useRendererAddElement.")}useRendererReplaceElement(e,t){s.error("Renderer has no method useRendererReplaceElement.")}useRendererIsAttribute(e){s.error("Renderer has no method useRendererIsAttribute.")}useRendererIsEvent(e){s.error("Renderer has no method useRendererIsEvent.")}useRendererCreateInstance(e){s.error("Renderer has no method useRendererCreateInstance.")}useRendererInjectAttribute(e,t,o){s.error("Renderer has no method useRendererInjectAttribute.")}useRendererInjectStyle(e,t){s.error("Renderer has no method useRendererInjectStyle.")}useRendererInjectEvent(e,t,o){s.error("Renderer has no method useRendererInjectEvent.")}useRendererUpdateEvent(e,t,o){s.error("Renderer has no method useRendererUpdateEvent.")}useRendererInjectChild(e,t){s.error("Renderer has no method useRendererInjectChild.")}useRendererCreateRawContainer(e){s.error("Renderer has no method useRendererCreateRawContainer.")}useRendererUpdateRawContainersAgainstEachOthers(e,t){s.error("Renderer has no method useRendererUpdateRawContainersAgainstEachOthers.")}},createElement:r}},9310:(e,t,o)=>{const{RECURSIVE_ELEMENT_SYMBOL:s}=o(9085);e.exports={isValidChild:function(e){return![void 0,null,""].includes(e)&&!Array.isArray(e)},makeDiffList:function(e,t){const o={},s={},n={};let r={};"object"!=typeof e||Array.isArray(e)||(r={...r,...e}),"object"!=typeof t||Array.isArray(t)||(r={...r,...t});for(let i in r)t.hasOwnProperty(i)?e.hasOwnProperty(i)?(typeof e[i]==typeof t[i]&&"function"==typeof t[i]||JSON.stringify(e[i])!=JSON.stringify(t[i]))&&(s[i]=r[i]):e.hasOwnProperty(i)||(n[i]=r[i]):o[i]=r[i];return{toRemove:o,toUpdate:s,toAdd:n}},isRecursiveElement:function(e){return"object"==typeof e&&null!==e&&e.hasOwnProperty("elementType")&&e.hasOwnProperty("$$_RecursiveSymbol")&&"string"==typeof e.elementType&&""!==e.elementType.toString().trim()&&e.$$_RecursiveSymbol===s}}},5e3:(e,t,o)=>{const{RecursiveConsole:s}=o(6766),{ROUTER_PATH_STATE:n,ROUTER_ROUTE_STATE:r,ROUTER_NOT_FOUND_ROUTE:i,ROUTER_DYNAMIC_REG_EXP:a}=o(9085),{flattenRoute:l,resolvePath:d,stripPathAndAnchor:c,isDynamicRoute:h}=o(5471),{createRoute:p}=o(5656);e.exports={RecursiveRouter:class{constructor(e,t,o,a){this.boostrapper=a,this.base=t||"",this.scroll=o||!1,this.routes=l(e),this.routerContext={context:void 0,stack:[],depth:0,fragments:[],anchor:""},this.routes[i]||(this.routes[i]={path:i,title:"Not Found",component:()=>"404 Not Found"}),this.routes[i].redirectTo&&s.error("Recursive Router : The reserved '/404' route cannot have a redirection path.");const d=this.routes["/"];d||s.error("Recursive Router : The '/' root route was not found."),this.stateManager.setReserved(n,"/"),this.stateManager.setReserved(r,d),this.useRouterNavigationListener()}get stateManager(){return this.boostrapper.stateManager}get orchestrator(){return this.boostrapper.orchestrator}getPathState(){return this.stateManager.getReserved(n)}getRouteState(){return this.stateManager.getReserved(r)}goTo(e){if(!e)return;const[t,o,s]=d(e,this.routes),[n]=this.getPathState();n!==t&&(this.useRouterPushState(t,o,s),this.mountNewRoute(t,o,s))}replace(e,t){if(!e)return;const[o,s,n]=d(e,this.routes);o&&(this.useRouterReplaceState(o,s,n),this.mountNewRoute(o,s,t))}getParams(){const e=a,[t]=this.getPathState(),o=h(t,this.routes);if(!o.isDynamic)return{};const s=o.template.path.match(e)||[],n=this.useRouterGetLocationPath().match(e)||[];if(s.length===n.length&&s.length>0){const e={};for(let t=0;t<s.length;t++){const o=s[t].replace(":","").replace(";",""),r=n[t].replace(":","").replace(";","");e[o]=r}return e}return{}}renderFragment(){const e=this.routerContext;if(e.depth>e.fragments.length)return"";const t=e.fragments.slice(0,e.depth).reduce(((e,t)=>`${e}${t}`));let[o]=c(t);const s=h(t,this.routes);s.isDynamic&&(o=s.template.path);let n,r=this.routes[o]||this.routes["/404"]||!1;return n=r?r.isDynamic?r.template.component():r.component():"",n}renderRoute(){const[e]=this.getRouteState();return(()=>{const[e]=this.getPathState();this.routerContext.fragments=e.split("/").slice(1).map((e=>`/${e}`))})(),((e,t)=>{"function"!=typeof t&&s.error("Route component is not a function.");(e=>{const t=this.routerContext;t.depth++,t.context&&t.stack.push(t.context),t.context=e})(e);const o=t();return(()=>{const e=this.routerContext;e.context&&(e.stack.length>0?e.context=e.stack.pop():e.context=void 0),e.depth--})(),o})({route:e},(()=>this.renderFragment()))}resolvePath(e){return d(e,this.routes)}mountNewRoute(e,t,o){const[s,n]=this.getPathState(),[r,i]=this.getRouteState(),a=this.routes[t];this.orchestrator.batchCallback((()=>{"function"==typeof r.onExit&&r.onExit(),i(a),n(e),"function"==typeof a.onLoad&&a.onLoad()})),o?this.useRouterGoToAnchor(o):this.scroll&&this.useRouterScrollToTop(),a.title&&this.useRouterSetTitle(a.title)}useRouterMakeURL(e){s.error("useRouterMakeURL is not implemented")}useRouterGetLocationPath(){s.error("useRouterGetLocationPath is not implemented")}useRouterReplaceState(e,t,o){s.error("useRouterReplaceState is not implemented")}useRouterPushState(e,t,o){s.error("useRouterPushState is not implemented")}useRouterScrollToTop(){s.error("useRouterScrollToTop is not implemented")}useRouterGoToAnchor(e){s.error("useRouterGoToAnchor is not implemented")}useRouterNavigationListener(){s.error("useRouterNavigationListener is not implemented")}useRouterGetRoute(){s.error("useRouterGetRoute is not implemented")}useRouterOnLoad(){s.error("useRouterOnLoad is not implemented")}useRouterSetTitle(e){s.error("useRouterSetTitle is not implemented")}},createRoute:p}},5656:(e,t,o)=>{const{copy:s}=o(459);e.exports={route:function(e){return{...s(e)}}}},5471:(e,t,o)=>{const{copy:s}=o(459),{RecursiveConsole:n}=o(6766),{ROUTER_DYNAMIC_REG_EXP:r,ROUTER_ANCHOR_REG_EXP:i}=o(9085);function a(e){if("string"!=typeof e)return["",""];const t=i.exec(e);let o="",s="";return t?(o=e.substring(0,t.index),s=e.substring(t.index)):o=e,[o,s]}function l(e,t){if("string"!=typeof e)return!1;const o=r,s=":recursive;";for(let n in t)if(n.replace(o,s)===e.replace(o,s))return n;return!1}function d(e){"string"!=typeof e&&n.error("Recursive Router : path can be only of type string.",[]);let t=e.trim();if("/"!==t)for(;"/"===t[t.length-1];)t=t.slice(0,t.length-1);return""===t&&n.error("Recursive Router : path is empty.",[]),"/"!==t[0]&&n.error("Recursive Router : path should start with '/'.",[]),decodeURI(t)}e.exports={flattenRoute:function e(t){let o={};if("object"!=typeof t||"string"!=typeof t.path||"function"!=typeof t.component)return{};const r="function"==typeof(t=s(t)).onLoad?t.onLoad:()=>{},i="function"==typeof t.onExit?t.onExit:()=>{},a="string"==typeof t.title?t.title:null,l="string"==typeof t.redirectTo?t.redirectTo:null;if("function"!=typeof t.component&&n.error("Recursive Router : router's component should be of type function."),"string"!=typeof t.path&&n.error("Recursive Router : router's path should be of type string."),o[t.path]={path:t.path,component:t.component,redirectTo:l,title:a,onLoad:r,onExit:i},Array.isArray(t.routes)){const s=t.path,n="/"==t.path?"":"/";t.routes.forEach((t=>{if(t&&t.path){const r=t.path;t.path=s+n+r;const i=e(t);o={...o,...i}}}))}return o},resolvePath:function(e,t){const o=d(e),[s,n]=a(o),r=l(s,t);if(!r)return[o,"/404",""];if(t[r].redirectTo){const e=d(t[r].redirectTo),[o,s]=a(e),n=l(o,t);return n?[e,n,s]:[e,"/404",""]}return[o,r,n]},stripPathAndAnchor:a,findRouteOfForm:l,isDynamicRoute:function(e,t){const o=r;for(let s in t){const n=s,r="recursive",i=e.match(o),a=s.match(o);if(a&&i)try{if(i.length===a.length&&a.length>0&&e.replace(o,r)===n.replace(o,r))return{isDynamic:!0,template:t[s]}}catch(e){}}return{isDynamic:!1}},preparePath:d}},5561:(e,t,o)=>{const{RecursiveConsole:s}=o(6766),{retrieveStatefulObject:n}=o(8210),{RecursiveState:r}=o(3559),{STATE_CACHE_STORE:i}=o(9085);e.exports=e=>{const t=i;function o(o){return n(e,t,o)}return{set:function(s,n,r,i){return!e.itemExists(s,t)&&e.addItem(s,n,t,r,i),e.setItemUsed(t,s),o(s)},get:function(n){return e.itemExists(n,t)||s.error("State with the uid "+n+" does not exists."),o(n)},clear:function(){const o=e.stores[t].items,s=Object.keys(o).length;if(s>e.cacheSize){for(let n in o)o[n].addOrder<s-e.cacheSize&&e.removeItem(n,t);e.stores[t].used=Object.keys(o)}},flush:function(){},name:t}}},3587:(e,t,o)=>{const{RecursiveState:s}=o(3559),{RecursiveConsole:n}=o(6766),{STATE_EFFECT_STORE:r}=o(9085);e.exports=e=>{const t=r;function o(e){if("function"==typeof e){const t=e();if("function"==typeof t)return t}return()=>{}}return{set:function(s,r,i){const a=!e.itemExists(s,t);"function"!=typeof r&&n.error("Recursive State : Effect callback is not a function.");const l=Array.isArray(i)?i:[];let d=()=>{};if(a)d=o(r);else{const i=e.getItem(s,t);e.itemIsUsed(t,s)&&n.error("Recursive State : Duplicate effect detected.",["You are using an effect twice in your tree, which is forbidden.","Try changing the keys of the effects to be unique or merge them into a single effect."]),JSON.stringify(l)!==JSON.stringify(i.value)&&(e.runUnsubscriptionCallback(s,t),d=o(r))}e.addItem(s,l,t,(()=>d)),e.setItemUsed(t,s)},get:function(){},clear:function(){for(let o in e.stores[t].items)e.itemIsUsed(t,o)||(e.runUnsubscriptionCallback(o,t),e.removeItem(o,t));e.stores[t].used=[]},flush:function(){},name:t}}},3559:(e,t,o)=>{const{copy:s,areEqual:n}=o(459),r=o(5561),i=o(1346),a=o(7320),l=o(8726),d=o(3587),{STATE_STATE_STORE:c,STATE_CACHE_STORE:h,STATE_RESERVED_STORE:p,STATE_REF_STORE:u,STATE_EFFECT_STORE:m}=o(9085),{RecursiveConsole:g}=o(6766);e.exports={RecursiveState:class{constructor(e){this.stores={},this.history=[s(this.stores)],this.bootstrapper=e,this.cacheSize=1e3,this.createStore(l(this)),this.createStore(i(this)),this.createStore(r(this)),this.createStore(a(this)),this.createStore(d(this))}get orchestrator(){return this.bootstrapper.orchestrator}addItem(e,t,o,s,n){if("string"!=typeof e)return void g.error("Recursive State : State UID is not of type string.");if([void 0,null,""].includes(e.trim()))return void g.error("Recursive State : State UID cannot be one of these : '' or 'undefined' or 'null'.");if(void 0===this.stores[o])return void g.error("Recursive State : Invalid store name.");const r={value:t,preValue:void 0,history:[t],onRemoved:n,unsubscribe:()=>{},addOrder:Object.keys(this.stores[o].items).length};this.stores[o].items[e]=r,s&&"function"==typeof s&&(async()=>{const t=await s();"function"==typeof t&&this.itemExists(e,o)&&(this.stores[o].items[e].unsubscribe=t)})()}itemExists(e,t){return!!(this.stores.hasOwnProperty(t)&&this.stores[t].hasOwnProperty("items")&&this.stores[t].items.hasOwnProperty(e))}getItem(e,t,o){if(void 0!==this.stores[t])return void 0===this.stores[t].items[e]?o:this.stores[t].items[e];g.error("Invalid store name.")}removeItem(e,t){void 0===this.stores[t]&&g.error("Invalid store name."),this.itemExists(e,t)||g.error("State does not exist in the current store.");const o=this.stores[t].items[e].onRemoved,s=this.stores[t].items[e].unsubscribe;"function"==typeof o&&o(),s(),delete this.stores[t].items[e]}updateItem(e,t,o,r,i){void 0!==this.stores[o]?this.itemExists(e,o)?n(this.stores[o].items[e].value,t)&&!i||(this.stores[o].items[e].history.push(s(this.stores[o].items[e].value)),this.stores[o].items[e].preValue=this.stores[o].items[e].value,this.stores[o].items[e].value=t,r&&"function"==typeof r&&r()):g.error("State does not exist in the current store."):g.error("Invalid store name.")}clear(){this.history.push(s(this.stores));for(let e in this.stores)"function"==typeof this.stores[e].clear&&this.stores[e].clear()}flush(){}createStore(e){const t=e.name,o=e.set,s=e.get,n=e.flush,r=e.obj,i=e.clear;if("string"!=typeof t)return void g.error("name is not a string");if(!t.trim())return void g.error("name is not valid");if("function"!=typeof o)return void g.error("set is not a function");if("function"!=typeof s)return void g.error("get is not a function");if("function"!=typeof i)return void g.error("clear is not a function");if("function"!=typeof n)return void g.error("flush is not a function");const a=t.trim();this.stores[a]?g.error("store already exists"):this.stores[a]={items:{},used:[],obj:r,set:o,get:s,clear:i,flush:n}}useBatchCallback(e,t){this.orchestrator&&this.orchestrator.batchCallback(e,t)}setItemUsed(e,t){this.stores[e]&&this.stores[e].used.push(t)}itemIsUsed(e,t){return this.stores[e].used.includes(t)}runUnsubscriptionCallback(e,t){if(this.itemExists(e,t)){const o=this.getItem(e,t).unsubscribe;"function"==typeof o&&o()}}getState(e){return this.stores[c].get(e)}setState(e,t,o,s){return this.stores[c].set(e,t,o,s)}getCache(e){return this.stores[h].get(e)}setCache(e,t,o,s){return this.stores[h].set(e,t,o,s)}setReserved(e,t){return this.stores[p].set(e,t)}getReserved(e){return this.stores[p].get(e)}setRef(e,t){return this.stores[u].set(e,t)}getRef(e,t){return this.stores[u].get(e,t)}setEffect(e,t,o){this.stores[m].set(e,t,o)}}}},7320:(e,t,o)=>{const{RecursiveState:s}=o(3559),{STATE_REF_STORE:n}=o(9085);e.exports=e=>{const t=n;return{set:function(o,s,n,r){e.addItem(o,s,t,n,r),e.setItemUsed(t,o)},get:function(o,s){return function(o,s){if(e.itemExists(o,t))return e.getItem(o,t).value;e.getItem(o,t,s)}(o,s)},clear:function(){for(let o in e.stores[t].items)e.itemIsUsed(t,o)||e.removeItem(o,t);e.stores[t].used=[]},flush:function(){},name:t}}},1346:(e,t,o)=>{const{RecursiveConsole:s}=o(6766),{retrieveStatefulObject:n}=o(8210),{RecursiveState:r}=o(3559),{STATE_RESERVED_STORE:i}=o(9085);e.exports=e=>{const t=i;function o(o){return n(e,t,o)}return{set:function(s,n,r,i){return!e.itemExists(s,t)&&e.addItem(s,n,t,r,i),e.setItemUsed(t,s),o(s)},get:function(n){return e.itemExists(n,t)||s.error("State with the uid "+n+" does not exists."),o(n)},clear:function(){},flush:function(){},name:t}}},8726:(e,t,o)=>{const{RecursiveState:s}=o(3559),{RecursiveConsole:n}=o(6766),{STATE_STATE_STORE:r}=o(9085),{retrieveStatefulObject:i}=o(8210);e.exports=e=>{const t=r;function o(o){return i(e,t,o)}return{set:function(s,n,r,i){return!e.itemExists(s,t)&&e.addItem(s,n,t,r,i),e.setItemUsed(t,s),o(s)},get:function(s){return e.itemExists(s,t)||n.error("State with the uid "+s+" does not exists."),o(s)},clear:function(){for(let o in e.stores[t].items)e.itemIsUsed(t,o)||e.removeItem(o,t);e.stores[t].used=[]},flush:function(){},name:t}}},8210:(e,t,o)=>{const{RecursiveState:s}=o(3559),{copy:n}=o(459);e.exports={retrieveStatefulObject:function(e,t,o){const s=e.getItem(o,t);return[n(s.value),function(s){e.itemExists(o,t)&&e.updateItem(o,s,t,(()=>{e.useBatchCallback((()=>{e.orchestrator.notifyStateChanged()}),t+Date.now())}))},function(){return e.itemExists(o,t)?n(e.getItem(o,t,void 0).value):void 0},function(){if(!e.itemExists(o,t))return;const r=n(s.history[0]);e.updateItem(o,r,t,(()=>{e.useBatchCallback((()=>{e.orchestrator.notifyStateChanged()}),t+Date.now())}))},n(s.preValue)]}}},8903:(e,t,o)=>{e.exports=o.p+"imgs/cv.2b00959d3d054a8c03cdcd02eb184678.pdf"},7269:(e,t,o)=>{e.exports=o.p+"imgs/adonisjs.a48bfdc2a6714241c42aa4e30c75d8d0.png"},6019:(e,t,o)=>{e.exports=o.p+"imgs/android.ebd75f893b86f1087ea047e9fcb1de47.png"},4629:(e,t,o)=>{e.exports=o.p+"imgs/angular.b6d2a9dec3e43e0ffb95b7d6e29af358.png"},2378:(e,t,o)=>{e.exports=o.p+"imgs/card-baker.53b0ade634a45bfab539bb305c160f5f.png"},7132:(e,t,o)=>{e.exports=o.p+"imgs/dart.f00251a3d3eee7148f7aed2b511af02e.png"},166:(e,t,o)=>{e.exports=o.p+"imgs/deno.90adf8a9662073482e415b155fad930d.png"},1237:(e,t,o)=>{e.exports=o.p+"imgs/electron.7a073e965f8a5cd33ba93bad5da894c2.png"},6883:(e,t,o)=>{e.exports=o.p+"imgs/express.39a0f4c3d981885c64f851b1ac242bba.png"},1861:(e,t,o)=>{e.exports=o.p+"imgs/fastify.7a0405f9b9fb3e0071eec212afed1ff2.svg"},2728:(e,t,o)=>{e.exports=o.p+"imgs/firebase.18e8cd693c55dbadc622bd6a75cb9fa8.png"},1027:(e,t,o)=>{e.exports=o.p+"imgs/flutter.83219c099347619051f3aa0fa0e2108e.svg"},9486:(e,t,o)=>{e.exports=o.p+"imgs/gradio.255c304835be43cbb8f58a948e69a4f8.png"},2066:(e,t,o)=>{e.exports=o.p+"imgs/java.2a1399f78477e0e27b8e4c39803bf36a.png"},2302:(e,t,o)=>{e.exports=o.p+"imgs/js.266bd9fb2663dcc057b43c239a73e01b.png"},5327:(e,t,o)=>{e.exports=o.p+"imgs/kotlin.0e22a842339118ef9a10b0703e40e95d.png"},7443:(e,t,o)=>{e.exports=o.p+"imgs/nest.6b64ab7782fa4ca87cf8d193ee2be1f1.svg"},9571:(e,t,o)=>{e.exports=o.p+"imgs/node.e328955d6bbbf3ebc72b7d1feadbf9cc.png"},2907:(e,t,o)=>{e.exports=o.p+"imgs/postgres.6c5d698f195dac2fe5afd11611dc0281.png"},3911:(e,t,o)=>{e.exports=o.p+"imgs/quasar.b7756765f1de83706373257126291210.svg"},7711:(e,t,o)=>{e.exports=o.p+"imgs/random-name-picker.85c37c4cf0dc24d50caafe60803e4b43.png"},6011:(e,t,o)=>{e.exports=o.p+"imgs/react.928f956d9c8ebcffb98a8e917154a81a.svg"},5994:(e,t,o)=>{e.exports=o.p+"imgs/recursive.7b768fd75655d260100f5681c79c9bce.png"},5122:(e,t,o)=>{e.exports=o.p+"imgs/sass.6747d5c68a381e29fc69a0624ac5fd12.png"},7815:(e,t,o)=>{e.exports=o.p+"imgs/solidjs.cdc32e56960fe33eef694c84e4477ed5.svg"},8326:(e,t,o)=>{e.exports=o.p+"imgs/svelte.48f83168a12e6f179eb7e9bcaf0ef1cf.png"},4066:(e,t,o)=>{e.exports=o.p+"imgs/trello.dea8009f2bd50ea3a5a57ef3bfe807ea.png"},1973:(e,t,o)=>{e.exports=o.p+"imgs/ts.afcdb36e8c18284b47d885a9259e1733.png"},3210:(e,t,o)=>{e.exports=o.p+"imgs/vue.ca6e2b503a398e6f49171701284b06c4.png"}},t={};function o(s){var n=t[s];if(void 0!==n)return n.exports;var r=t[s]={exports:{}};return e[s](r,r.exports,o),r.exports}o.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return o.d(t,{a:t}),t},o.d=(e,t)=>{for(var s in t)o.o(t,s)&&!o.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:t[s]})},o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),o.p="https://riadhadrani.github.io/RiadhAdrani/";var s={};(()=>{"use strict";o.d(s,{Uq:()=>Xt,Bv:()=>eo,y0:()=>Kt,no:()=>Qt,BC:()=>to,sr:()=>oo,IW:()=>Jt,A_:()=>Zt});var e=o(7433),t=o(8169),n=o(4694),r=o.n(n);function i(e){return(0,t.createElement)("h1",{...e,rendererOptions:{ns:"http://www.w3.org/1999/xhtml"}})}function a(e){return(0,t.createElement)("h2",{...e,rendererOptions:{ns:"http://www.w3.org/1999/xhtml"}})}function l(e){return(0,t.createElement)("h3",{...e,rendererOptions:{ns:"http://www.w3.org/1999/xhtml"}})}function d(e){return(0,t.createElement)("h4",{...e,rendererOptions:{ns:"http://www.w3.org/1999/xhtml"}})}function c(e){return(0,t.createElement)("p",{...e,rendererOptions:{ns:"http://www.w3.org/1999/xhtml"}})}function h(e){return(0,t.createElement)("a",{...e,rendererOptions:{ns:"http://www.w3.org/1999/xhtml"}})}function p(e){return(0,t.createElement)("span",{...e,rendererOptions:{ns:"http://www.w3.org/1999/xhtml"}})}function u(e){return(0,t.createElement)("img",{...e,rendererOptions:{ns:"http://www.w3.org/1999/xhtml"}})}function m(e){return(0,t.createElement)("button",{...e,rendererOptions:{ns:"http://www.w3.org/1999/xhtml"}})}function g(e){return(0,t.createElement)("fragment",{...e,rendererOptions:{ns:"http://www.w3.org/1999/xhtml"}})}function f(e){return(0,t.createElement)("column-view",{...e,rendererOptions:{ns:"http://www.w3.org/1999/xhtml"}})}function b(e){return(0,t.createElement)("row-view",{...e,rendererOptions:{ns:"http://www.w3.org/1999/xhtml"}})}function v(e){const o=(0,t.createElement)("input",{...e,rendererOptions:{ns:"http://www.w3.org/1999/xhtml"}});return r().items.TextField.handler(o),o}function y(e){const o=(0,t.createElement)("spacer-view",{...e,rendererOptions:{ns:"http://www.w3.org/1999/xhtml"}});return r().items.Spacer.handler(o),o}function S(e){const o=(0,t.createElement)("vertical-line",{...e,rendererOptions:{ns:"http://www.w3.org/1999/xhtml"}});return r().items.VerticalLine.handler(o),o}function w(e){const o=(0,t.createElement)("a",{...e,rendererOptions:{ns:"http://www.w3.org/1999/xhtml"}});return r().items.Link.handler(o),o}function k(e=[],t=" "){return e.reduce(((o,s,n)=>{let r="";return r=Array.isArray(s)?k(s):s,r+=n==e.length-1?"":t,o+r}),"")}function x(e){return`grayscale(${e})`}function C(...e){return`linear-gradient(${k(e,", ")})`}function T(e,t){return`repeat(${k([e,t],", ")})`}function R(e){return`var(--${e})`}const z=e=>i({children:e,style:{inline:{fontSize:"3em",textAlign:"center"}}}),E=({education:e,school:t,duration:o})=>({education:e,school:t,duration:o}),A=[E({education:"Applied Bachelor of Industrial Computing: Embedded Systems",school:"Higher Institute of Information's Technologies and Communication, Borj Cedria",duration:"September 2017 - July 2020"}),E({education:"Bachelor of Mathematics",school:"Lycée El-Wafa, Ariana",duration:"September 2013 - June 2017"})],U="main",W="main-accent",I="main-variant",O="text",_="text-accent",P="text-variant",D="background",M=(e,t=(()=>{}))=>m({children:e,className:"my-button",onClick:t,type:"button",style:{className:"text-button",scoped:!0,normal:{padding:["5px","15px"],margin:"5px"}}}),L=(e,t)=>w({style:{inline:{textDecoration:"none"}},children:M(e),href:t});function N(e){return(0,t.createElement)("path",{...e,rendererOptions:{ns:"http://www.w3.org/2000/svg"}})}const j=({viewBox:e="0 0 24 24",path:o,...s})=>function(e){return(0,t.createElement)("svg",{...e,rendererOptions:{ns:"http://www.w3.org/2000/svg"}})}({viewBox:e,children:N({d:o}),...s}),H="M23 9v2h-2v7a3 3 0 01-3 3h-4v-6h-4v6H6a3 3 0 01-3-3v-7H1V9l11-7 5 3.18V2h3v5.09z",B="M10.15,13.35L4.79,8l5.35-5.35l0.71,0.71L6.21,8l4.65,4.65L10.15,13.35z",F="M4.97,12.65L9.62,8L4.97,3.35l0.71-0.71L11.03,8l-5.35,5.35L4.97,12.65z",V="M3 13h8V3H3v10zm0 8h8v-6H3v6zm10 0h8V11h-8v10zm0-18v6h8V3h-8z",G="M3 3v15a3 3 0 003 3h9v-6h6V3zm9 8H6v-1h6zm6-3H6V7h12zm-2 8h5l-5 5z",q="M17 6V5a3 3 0 00-3-3h-4a3 3 0 00-3 3v1H2v4a3 3 0 003 3h14a3 3 0 003-3V6zM9 5a1 1 0 011-1h4a1 1 0 011 1v1H9zm10 9a4 4 0 003-1.38V17a3 3 0 01-3 3H5a3 3 0 01-3-3v-4.38A4 4 0 005 14z",Y="M3 3h4v4H3zm7 4h4V3h-4zm7-4v4h4V3zM3 14h4v-4H3zm7 0h4v-4h-4zm7 0h4v-4h-4zM3 21h4v-4H3zm7 0h4v-4h-4zm7 0h4v-4h-4z",$="M15 1v6h-2V4.41L7.41 10 6 8.59 11.59 3H9V1zm-4 10a1 1 0 01-1 1H5a1 1 0 01-1-1V6a1 1 0 011-1h2V3H5a3 3 0 00-3 3v5a3 3 0 003 3h5a3 3 0 003-3V9h-2z",Q="M20.5 2h-17A1.5 1.5 0 002 3.5v17A1.5 1.5 0 003.5 22h17a1.5 1.5 0 001.5-1.5v-17A1.5 1.5 0 0020.5 2zM8 19H5v-9h3zM6.5 8.25A1.75 1.75 0 118.3 6.5a1.78 1.78 0 01-1.8 1.75zM19 19h-3v-4.74c0-1.42-.6-1.93-1.38-1.93A1.74 1.74 0 0013 14.19a.66.66 0 000 .14V19h-3v-9h2.9v1.3a3.11 3.11 0 012.7-1.4c1.55 0 3.36.86 3.36 3.66z",K="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z",J="M23.643 4.937c-.835.37-1.732.62-2.675.733.962-.576 1.7-1.49 2.048-2.578-.9.534-1.897.922-2.958 1.13-.85-.904-2.06-1.47-3.4-1.47-2.572 0-4.658 2.086-4.658 4.66 0 .364.042.718.12 1.06-3.873-.195-7.304-2.05-9.602-4.868-.4.69-.63 1.49-.63 2.342 0 1.616.823 3.043 2.072 3.878-.764-.025-1.482-.234-2.11-.583v.06c0 2.257 1.605 4.14 3.737 4.568-.392.106-.803.162-1.227.162-.3 0-.593-.028-.877-.082.593 1.85 2.313 3.198 4.352 3.234-1.595 1.25-3.604 1.995-5.786 1.995-.376 0-.747-.022-1.112-.065 2.062 1.323 4.51 2.093 7.14 2.093 8.57 0 13.255-7.098 13.255-13.254 0-.2-.005-.402-.014-.602.91-.658 1.7-1.477 2.323-2.41z",X=(e,t,o)=>h({href:e,target:"_blank",children:j({path:t,viewBox:o,fill:"white",height:"30px",width:"30px"})});var Z=o(2302),ee=o.n(Z),te=o(5994),oe=o.n(te),se=o(9571),ne=o.n(se),re=o(6011),ie=o.n(re),ae=o(3210),le=o.n(ae),de=o(4629),ce=o.n(de),he=o(6019),pe=o.n(he),ue=o(7132),me=o.n(ue),ge=o(1237),fe=o.n(ge),be=o(5327),ve=o.n(be),ye=o(1973),Se=o.n(ye),we=o(7443),ke=o.n(we),xe=o(6883),Ce=o.n(xe),Te=o(2907),Re=o.n(Te),ze=o(2728),Ee=o.n(ze),Ae=o(2066),Ue=o.n(Ae),We=o(1027),Ie=o.n(We),Oe=o(8326),_e=o.n(Oe),Pe=o(7269),De=o.n(Pe),Me=o(5122),Le=o.n(Me),Ne=o(166),je=o.n(Ne),He=o(7815),Be=o.n(He),Fe=o(3911),Ve=o.n(Fe),Ge=o(1861),qe=o.n(Ge);const Ye=(e,t,o=!1)=>({name:e,src:t,invert:o}),$e=Ye("JavaScript",ee()),Qe=Ye("Recursive Js",oe()),Ke=Ye("Node Js",ne()),Je=Ye("React",ie()),Xe=Ye("Vue Js",le()),Ze=Ye("Angular",ce()),et=Ye("Android",pe()),tt=Ye("Dart",me()),ot=Ye("Electron Js",fe()),st=Ye("Kotlin",ve()),nt=Ye("TypeScript",Se()),rt=Ye("Nest Js",ke()),it=Ye("Express Js",Ce()),at=Ye("PostgreSQL",Re()),lt=Ye("Firebase",Ee()),dt=Ye("Java",Ue()),ct=Ye("Flutter",Ie()),ht=Ye("Svelte",_e()),pt=Ye("Adonis Js",De()),ut=Ye("Sass",Le()),mt=Ye("Deno",je(),!0),gt=Ye("Solid Js",Be()),ft=Ye("Quasar",Ve()),bt=[$e,nt,tt,st,dt,Ke,mt,Qe,Je,Xe,Ze,ht,gt,ct,ft,et,it,Ye("Fastify",qe(),!0),rt,pt,at,lt,ot,ut];const vt=bt;function yt(e){Xt("slider").scroll({left:300*e,behavior:"smooth"})}const St=()=>{const[e]=Jt("slider",{index:0,items:vt,direction:1});return oo("set-slider-timer",[e],(()=>{const e=setTimeout((()=>{const[e,t]=Kt("slider");e.items.length<2||(e.direction>0?e.index==e.items.length-1?(e.direction=-1,e.index=e.items.length-2):e.index=e.index+1:0==e.index?(e.direction=1,e.index=1):e.index=e.index-1,yt(e.index),t(e))}),2500);return()=>clearTimeout(e)})),b({style:{scoped:!0,normal:{height:"300px",width:"300px",minHeight:"300px",minWidth:"300px",position:"relative",overflow:"hidden"}},children:[wt(),wt(!1),b({hooks:{onRef:()=>"slider"},style:{scoped:!0,normal:{height:"300px",width:"300px",position:"relative",overflow:"hidden"}},children:e.items.map((e=>function(e){return f({style:{scoped:!0,normal:{minHeight:"100%",minWidth:"100%",padding:["20px"],boxSizing:"border-box",alignItems:"center",justifyContent:"center",textAlign:"center"}},children:[u({width:120,height:120,src:e.src,style:{inline:{filter:e.invert?"invert(1)":""}}}),y({height:"10px"}),l({children:e.name})]})}(e)))})]})};function wt(e=!0){return f({style:{scoped:!0,normal:{height:"100%",justifyContent:"center",position:"absolute",left:e?"0px":"auto",right:e?"auto":"0px",background:C(e?"90deg":"-90deg",[R(W),"50%"],["transparent","100%"]),zIndex:10}},children:m({className:"my-button",type:"button",title:e?"Left":"Right",children:[j({viewBox:"0 0 16 16",path:e?B:F,fill:"white"})],style:{scoped:"true",normal:{borderRadius:"50%",height:"30px",width:"30px",zIndex:10}},onClick:()=>{const[t,o]=Kt("slider");if(!(t.items.length<2)){if(e){if(0==t.index)return;t.index=t.index-1,t.direction=-1}else{if(t.index==t.items.length-1)return;t.index=t.index+1,t.direction=1}yt(t.index),o(t)}}})})}const kt=({title:e,location:t,duration:o,description:s})=>({title:e,location:t,duration:o,description:s}),xt=kt({title:"Fullstack developer",location:"HSTECH",duration:"since October 2022",description:"Full stack developer @ HSTECH"}),Ct=kt({title:"Intern",location:"Brain Academy Tunisia",duration:"January 2020 - July 2020",description:'We developed the prototype of "SMARTchair" which is an EEG controlled wheelchair.\n    Using our skills was not enough, \n    so it was imminent for us to learn and get used to many other programming languages, \n    software and even new operating systems. \n    The project was defended the 19th of July 2020 and got "Very Good" as honor.'}),Tt=kt({title:"Web Designer",location:"TriWeb, Tunisia",duration:"May 2021 - December 2021",description:"My job consisted of designing (Using Adobe Photoshop and Illustrator) \n    the graphical charter of turnkey websites and integrating \n    them with the help of a custom CMS made for Tri-Web."}),Rt=[xt,kt({title:"Freelancer",location:"Self-employed",duration:"Since November 2021",description:'Creating Mobile and Web Apps for customers \n    using various technologies like "Xamarin", \n    "Native Android", "React" ...'}),Tt,Ct];var zt=o(4066),Et=o.n(zt),At=o(9486),Ut=o.n(At),Wt=o(2378),It=o.n(Wt),Ot=o(7711),_t=o.n(Ot);const Pt=(e,t,o,s,n,r=[],i="",a=[],l=[])=>({name:e,type:t,logo:o,color:s,fromTo:n,links:r,shortDescription:i,fullDescription:a,techs:l}),Dt=Pt("Recursive","UI Framework",Qe.src,"#cf2026","Since September 2021",["https://github.com/RiadhAdrani/recursive","https://riadhadrani.github.io/recursive-docs/"],"Recursive is a Javascript framework to build beautiful component-based apps.",["Recursive is an ongoing project that allow developers to build a functional, component-based,"," Javascript only, beautiful and interactive Web applications."],[$e,Ke]),Mt=Pt("Utility Js","Javascript library",Ke.src,"#5cad47","Since September 2022",["https://github.com/RiadhAdrani/utility-js","https://www.npmjs.com/package/@riadh-adrani/utility-js"],"My Javascript utility functions and types",["My Javascript utility functions and types"],[nt,Ke]),Lt=Pt("Solid GitHub","Web App",gt.src,"#518ac8","November 2022",["https://github.com/RiadhAdrani/solid-github"],"Web app that retrieves repositories from GitHub and displaying them with the ability to save them which will be persisted in the local storage",["Web app that retrieves repositories from GitHub and displaying them with the ability to save them which will be persisted in the local storage"],[gt,nt]),Nt=Pt("Trollo","Web App",Et(),"#065ad4","November 2022",["https://github.com/RiadhAdrani/trollo"],"Trollo is a Trello clone, intended to showcase recursive and recursive-web compatibility with Typescript as of version 0.8.0.",["Web app that retrieves repositories from GitHub and displaying them with the ability to save them which will be persisted in the local storage"],[Qe,nt]),jt=Pt("Gradio","Web App",Ut(),"#52bffa","October 2022",["https://github.com/RiadhAdrani/gradio"],"A web application used to create and generate gradient background for css usage.",["A web application used to create and generate gradient background for css usage."],[ft,nt,Xe,ut]),Ht=Pt("Card Baker","Web App",It(),"#52bffa","August 2022",["https://github.com/RiadhAdrani/card-baker"],'Create "Yu-Gi-Oh" styled game cards.',['Create "Yu-Gi-Oh" styled game cards.'],[$e,Qe]),Bt=Pt("Random Name Picker","Android App",_t(),"#64c6c5","August 2022",["https://github.com/RiadhAdrani/random-name-picker/tree/master/app/src/main/res"],"An android application used to create lists for random name picking. Lists and user preferences are saved",["An android application used to create lists for random name picking. Lists and user preferences are saved"],[et,st]),Ft=[Dt,Mt,Lt,Nt,jt,Ht,Pt("WeTube","Web App","https://raw.githubusercontent.com/RiadhAdrani/wetube-fe/master/wetube.png","#00b0fa","July 2022",["https://github.com/RiadhAdrani/wetube-be","https://github.com/RiadhAdrani/wetube-fe"],"A Youtube clone built with Recursive and Express.",["Another clone added to the list of clones that I made using my own framework Recursive for the web,","and as you guessed it, its a Youtube clone."],[Qe,$e,it,at]),Bt,Pt("Audify","Desktop App","https://raw.githubusercontent.com/RiadhAdrani/audiphy/master/ss/audiphy.png","#3083f6","June 2022",["https://github.com/RiadhAdrani/audiphy"],"A simple audio player for Windows.","Audiphy is intended to be a Spotify clone, but turned out to be an audio player for Windows OS.",[$e,ot,Qe]),Pt("Wroddit","Web App","https://riadhadrani.github.io/wroddit/imgs/wroddit-dark.ce2166f57a4607631a155b725ccc621a.png","#E9ECEF","May 2022",["https://github.com/RiadhAdrani/wroddit"],"Reddit clone made using Recursive.js for front-end and Firebase as a database.",[],[$e,Qe,lt]),Pt("Dwidder","Web App","https://raw.githubusercontent.com/RiadhAdrani/dwidder/master/src/assets/icon.png","#1e9eae","February 2022",["https://github.com/RiadhAdrani/dwidder"],"Making a mini social media website using Recursive.js",["Dwidder is a twitter clone made to showcase the potential of Recursive.js","The name came originally from a tunisian meal called Dwida as I was developping the app."],[$e,Qe,lt]),Pt("Questions Submission","Web App","https://raw.githubusercontent.com/RiadhAdrani/guess-app-questions-submission/master/src/assets/logo_solid.png","#ffde16","July 2021",["https://github.com/RiadhAdrani/guess-app-questions-submission"],"A website that allow users to submit their questions and answers for a possible game app.","In order to collect questions for a guessing game app that I am planning to do in the future, I decided to create a website with Vue.js to solve the problem.",[$e,Xe,lt]),Pt("Azur City App","Android App","https://raw.githubusercontent.com/RiadhAdrani/azur_app/master/app/src/main/res/drawable/ic_app_icon.jpg","#01acc8","February 2021 - May 2021",["https://github.com/RiadhAdrani/azur_app"],"A prototype of a commercial app made for Azur City. The App was presented as an End of studies projects.",[],[et,st]),Pt("Werewolves of the Miller's Hollow","Android App","https://raw.githubusercontent.com/RiadhAdrani/werewolves_of_the_millers_hollow/master/app/src/main/res/drawable/ww_app_icon.jpg","#fbb03b","January 2021 - June 2021",["https://github.com/RiadhAdrani/werewolves_of_the_millers_hollow"],'Creating a guide for the game "Werewolves of The Millers Hollow" originally " Les loups garous de Thierclieux"',[],[et,st]),Pt("Color Noter","Cross platform App","https://raw.githubusercontent.com/RiadhAdrani/color-noter-desktop/master/md/color-noter.png","#8cacb9","September 2020 - September 2021",["https://github.com/RiadhAdrani/color_note_plus","https://github.com/RiadhAdrani/color-noter-desktop","https://github.com/RiadhAdrani/color-noter-web"],"Color Noter is a color based note taking app that offer the user the ability to write and save his ideas and todos in an easy to use environment.",[],[et,dt,$e,ot,Je,Qe,lt])];var Vt=o(8903),Gt=o.n(Vt);const qt={path:"/",title:"Home | Riadh Adrani",component:()=>f({style:{scoped:!0,normal:{height:"100%",justifyContent:"center"}},children:[b({style:{scoped:!0,normal:{alignItems:"center"},mediaQueries:[{condition:"(max-width:800px)",normal:{flexDirection:"column",textAlign:"center"}}]},children:[f({style:{scoped:!0,normal:{flex:1.5,padding:["0px","10px"]},mediaQueries:[{condition:"(max-width:800px)",normal:{alignItems:"center"}}]},children:[i({children:"Riadh Adrani,",style:{scoped:!0,normal:{fontSize:"4em"}}}),a({children:"A self-made software developer based in Tunisia",style:{scoped:!0,normal:{fontSize:"2em",fontWeight:300}}}),y({height:"15px"}),b({style:{scoped:!0,normal:{flexWrap:"wrap"},mediaQueries:[{condition:"(max-width:800px)",normal:{justifyContent:"center"}}]},children:[X("https://github.com/RiadhAdrani",K,"0 0 16 16"),y({width:"10px"}),X("https://www.linkedin.com/in/riadh-adrani/",Q,"0 0 24 24"),y({width:"10px"}),X("https://twitter.com/adrani_riadh",J,"0 0 24 24")]}),y({height:"15px"}),b({style:{scoped:!0,normal:{flexWrap:"wrap"},mediaQueries:[{condition:"(max-width:800px)",normal:{justifyContent:"center"}}]},children:[L("Projects","/projects"),L("Professional Career","/pro"),L("Academic Background","/academy"),L("Resume","/resume")]})]}),St()]})]}),routes:[{path:"projects",title:"Projects | Riadh Adrani",component:()=>{const[e,o]=Jt("project-search",""),[s,n]=Jt("project-tech",[]);function r(e){return null!=s.find((t=>t.name===e.name))}return f({children:[z("Projects"),y({height:"20px"}),v({value:e,placeholder:"Enter keywords",onInput:e=>o(e.target.value),style:{scoped:!0,normal:{padding:["10px","15px"],background:"transparent",border:["1px","solid",R(_)],borderRadius:"5px"}}}),y({height:"20px"}),b({style:{inline:{flexWrap:"wrap"}},children:vt.map((e=>{return c({children:e.name,style:{scoped:!0,normal:{padding:["5px","15px"],margin:"5px",border:["1px","solid",R(P)],borderRadius:"15px",cursor:"pointer",background:r(e)?R(O):"transparent",color:r(e)?R(U):R(O)},hover:{filter:(t=.5,`opacity(${t})`)}},onClick:()=>{r(e)?n(s.filter((t=>t.name!=e.name))):n([...s,e])}});var t}))}),y({height:"30px"}),(i={style:{scoped:!0,normal:{display:"grid",gridTemplateColumns:T(3,"1fr"),gridColumnGap:"20px",gridRowGap:"20px"},mediaQueries:[{condition:"(max-width:1200px)",normal:{gridTemplateColumns:T(2,"1fr")}},{condition:"(max-width:800px)",normal:{gridTemplateColumns:T(1,"1fr")}}]},children:Ft.filter((t=>""==e.trim()||!!t.name.toLowerCase().trim().includes(e.toLowerCase().trim()))).filter((e=>{if(0==s.length)return!0;for(let t of e.techs)if(r(t))return!0;return!1})).map((e=>(e=>f({className:"item-card",style:{scoped:!0,normal:{transitionDuration:"150ms"},hover:{backgroundColor:e.color+"22",borderColor:e.color+"77"}},children:[u({title:e.name,src:e.logo,alt:e.name,loading:"lazy",style:{inline:{height:"40px",width:"fit-content"}}}),y({height:"10px"}),a({children:[p({children:e.name}),g({children:e.links.map((e=>h({style:{inline:{display:"inline-flex",alignItems:"center",margin:["0","5px"]}},href:e,target:"_blank",children:j({viewBox:"0 0 16 16",fill:"white",path:$,height:"15px",width:"15px"})})))})]}),y({height:"10px",style:{inline:{borderBottom:["1px","solid",R(P)]}}}),y({height:"10px"}),l({children:e.type,style:{inline:{fontWeight:200}}}),d({children:e.fromTo,style:{inline:{fontWeight:400}}}),y({height:"10px"}),c({children:e.shortDescription,style:{inline:{minHeight:"3em"}}}),y({height:"10px"}),b({style:{inline:{flexWrap:"wrap",marginTop:"auto"}},children:e.techs.map((e=>{return f({dataSet:{title:e.name},style:{scoped:!0,normal:{justifyContent:"center",alignItems:"center",padding:["10px"],margin:["5px"],border:["1px","solid",R(P)],borderRadius:"50%",cursor:"help",position:"relative",filter:x(1),transitionDuration:"150ms"},hover:{borderColor:R(O),filter:x(0)},"[data-title]:hover::after":{content:(t="data-title",`attr(${t})`),position:"absolute",width:"max-content",top:"120%",left:"10px",padding:["5px","10px"],backgroundColor:R(I),border:["1px","solid",R(U)],borderRadius:"15px"}},children:u({loading:"lazy",src:e.src,title:e.name,alt:e.name,height:"15px",width:"15px"})});var t}))})]}))(e)))},(0,t.createElement)("div",{...i,rendererOptions:{ns:"http://www.w3.org/1999/xhtml"}}))]});var i}},{path:"pro",title:"Professional Career | Riadh Adrani",component:()=>f({children:[z("Professional Career"),y({height:"50px"}),f({children:Rt.map(((e,t)=>g({children:[f({className:"item-card",style:{scoped:!0,normal:{textAlign:"center"}},children:[a({children:e.title}),y({height:"10px",style:{inline:{borderBottom:["1px","solid",R(P)]}}}),y({height:"10px"}),d({children:e.location,style:{inline:{fontWeight:200}}}),d({children:e.duration}),y({height:"10px"}),c({children:e.description})]}),S({flags:{renderIf:t!=Rt.length-1},height:"100px",color:R(P),thickness:"2.5px",style:{inline:{alignSelf:"center"}}})]})))})]})},{path:"academy",title:"Academic Background | Riadh Adrani",component:()=>f({children:[z("Academic Background"),y({height:"50px"}),f({children:A.map(((e,t)=>g({children:[f({className:"item-card",style:{scoped:!0,normal:{textAlign:"center"}},children:[a({children:e.education}),y({height:"10px",style:{inline:{borderBottom:["1px","solid",R(P)]}}}),y({height:"10px"}),d({children:e.school,style:{inline:{fontWeight:200}}}),d({children:e.duration})]}),S({flags:{renderIf:t!=A.length-1},height:"100px",color:R(P),thickness:"2.5px",style:{inline:{alignSelf:"center"}}})]})))})]})},{path:"resume",title:"Resumé | Riadh Adrani",component:()=>f({children:[z("Resumé"),y({height:"30px"}),f({style:{inline:{alignItems:"center"}},children:[h({children:M("Download Resumé"),href:Gt()})]})]})}]},Yt=(e,t,o)=>{const s=eo()==t;return w({children:b({style:{inline:{alignItems:"center"}},children:[j({viewBox:"0 0 24 24",path:o,fill:"white",height:"20px",width:"20px",style:{scoped:!0,normal:{marginRight:"10px"},mediaQueries:[{condition:"(max-width:1100px)",normal:{marginRight:"0px"}}]}}),p({children:e,style:{scoped:!0,mediaQueries:[{condition:"(max-width:1100px)",normal:{display:"none"}}]}})]}),href:t,style:{scoped:!0,normal:{padding:["15px","10px"],margin:["0px","5px"],color:"inherit",textDecoration:"none",borderBottom:["4px","solid",s?R(O):"transparent"],transitionDuration:"200ms"},hover:{backgroundColor:R(W)}}})},$t=new e.RecursiveWebApp({root:document.body,app:()=>((()=>{function e(e,t){return t}Zt({imports:["https://fonts.googleapis.com/css2?family=Cairo:wght@200;300;400;500;600;700;800;900&family=Cousine:ital,wght@0,400;0,700;1,400;1,700&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap"],var:{[U]:e(0,"#1e1e1e"),[W]:e(0,"#101010"),[I]:e(0,"#0a0a0a"),[O]:e(0,"#ffffff"),[_]:e(0,"#777777"),[P]:e(0,"#555555"),[D]:e(0,"#3e3e3e"),"background-accent":e(0,"#5e5e5e"),"background-variant":e(0,"#7e7e7e")},selectors:{"*":{fontFamily:"'Cairo', sans-serif",lineHeight:"1.35em",color:R(O)},body:{margin:"0px",minHeight:"100vh",display:"flex",overflowY:"scroll"},"h1,h2,h3,h4,h5,h6":{margin:"0px",padding:["5px","0px"]},h3:{fontWeight:600},p:{margin:"0px"},".container":{justifySelf:"center",alignSelf:"center",width:"70%"},".my-button":{backgroundColor:R(U),border:["1px","solid","transparent"],cursor:"pointer",display:"flex",alignItems:"center",backgroundColor:R(U),boxShadow:["0px","0px","3px","0px",R(U)]},".my-button:hover":{boxShadow:["0px","0px","3px","0px",R(_)]},".item-card":{padding:["20px"],border:["1px","solid",R(D)],borderRadius:"5px",backgroundColor:R(U)},"::-webkit-scrollbar":{width:"10px"},"::-webkit-scrollbar-track":{background:R(W)},"::-webkit-scrollbar-thumb":{background:R(P),borderRadius:"2.5px"},"::-webkit-scrollbar-thumb:hover":{background:R(_)},"::-webkit-scrollbar-thumb:active":{background:R(O)}},mediaQueries:{"(max-width:1100px)":{".container":{width:"80%"}},"(max-width:900px)":{".container":{width:"90%"}},"(max-width:800px)":{".container":{width:"95%"}}}})})(),f({style:{scoped:!0,normal:{width:"100%",minHeight:"100vh"}},children:[b({style:{scoped:!0,normal:{justifyContent:"center",backgroundColor:R(U),color:"white",position:"sticky",top:"0px",boxShadow:["1px","1px","5px","0px",R(U)],zIndex:10}},children:[b({className:"container",style:{inline:{justifyContent:"center"}},children:[Yt("Home","/",H),Yt("Projects","/projects",Y),Yt("Professional Carrer","/pro",q),Yt("Academic Background","/academy",V),Yt("Resume","/resume",G)]})]}),f({style:{scoped:!0,normal:{flex:1,backgroundColor:R(W),alignItems:"center",padding:["20px",0]}},children:f({className:"container",style:{inline:{height:"100%"}},children:Qt()})})]})),route:qt,base:"RiadhAdrani",scopedStyle:!0});function Qt(){return $t.renderRoute()}function Kt(e){return $t.getState(e)}function Jt(e,t,o,s){return $t.setState(e,t,o,s)}function Xt(e,t=document.createElement("div")){return $t.getRef(e,t)}function Zt(e){$t.setStyle(e)}function eo(){return $t.getRoute()}function to(e){return e}function oo(e,t,o){$t.setEffect(e,t,o)}$t.render()})()})();