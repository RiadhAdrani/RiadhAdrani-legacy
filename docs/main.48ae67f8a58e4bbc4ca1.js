(()=>{var e={7433:(e,t,s)=>{const{RecursiveWebApp:n}=s(5413),{createElement:r}=s(8221);e.exports={RecursiveWebApp:n,createElement:r}},5413:(e,t,s)=>{const n=s(1317),r=s(6447),{useRecursiveWindow:o}=s(402),{App:a,createElement:i,Console:l}=s(8221);s(2173);e.exports={RecursiveWebApp:class extends a{constructor({root:e,app:t,route:s={path:"/",component:()=>""},base:a="",scrollCorrection:i=!1,cacheSize:l=1e3}){super({renderer:new n(t,e),cacheSize:l,buildRouter:e=>new r(s,a,i,e.stateManager,e.orchestrator),onAppInit:e=>{o(e.orchestrator)}})}Link(e){const t=i("a",e);if(t.href){const e=t.onClick||(()=>{}),s=t.href;t.href=this.router.useRouterMakeURL(s),t.onClick=t=>{t.preventDefault(),this.router.goTo(s),e(t)}}return t}setStyle(e){this.renderer.styler.setStyle(e)}createComponentStyle(e){return e}log(e){l.log(e)}updateTitle(e){document.title=e}}}},2173:(e,t,s)=>{const{COLUMN_VIEW:n,ROW_VIEW:r,LAZY_COLUMN:o,LAZY_ROW:a,HTML_CONTAINER:i}=s(3307),{View:l,addDefaultStyle:c}=s(8440);c("column-view",{display:"flex",flexDirection:"column"});c("row-view",{display:"flex",flexDirection:"row"});c("lazy-column",{display:"flex",flexDirection:"column"});c("lazy-row",{display:"flex",flexDirection:"row"});c("html-container",{display:"inline-block"})},3410:(e,t,s)=>{const{ELEMENT_TYPE_RAW:n,ELEMENT_TYPE_FRAGMENT:r}=s(9085),{COLUMN_VIEW:o,ROW_VIEW:a,SPACER_VIEW:i,LAZY_COLUMN:l,LAZY_ROW:c}=s(3307),d=(e,t)=>{var s=new IntersectionObserver((n=>{!0===n[0].isIntersecting&&(s.unobserve(n[0].target),n[0].target===t.lastChild&&e.onObserved(t))}),{threshold:[0]});"#text"!=t.lastChild.nodeName?s.observe(t.lastChild):console.warn("UseObserver : Unable to observe text node. Try wrapping it in another Element")};e.exports={items:{HtmlContainer:{tag:n,props:{},docs:[]},Fragment:{tag:r,props:{},docs:[]},Column:{tag:o,props:{},docs:[]},CheckBox:{tag:"input",props:{value:"string",checked:"string"},handler:e=>{e.type="checkbox"},docs:[]},ColorPicker:{tag:"input",props:{value:"string"},handler:e=>{e.type="color"},docs:[]},DatePicker:{tag:"input",props:{value:"string",max:"string",min:"string",step:"string"},handler:e=>{e.type="date"},docs:[]},DateTimeLocalPicker:{tag:"input",props:{value:"string",max:"string",min:"string",step:"string"},handler:e=>{e.type="datetime-local"},docs:[]},EmailField:{tag:"input",props:{value:"string",autoComplete:"string",list:"string",maxLength:"string",minLength:"string",multiple:"string",pattern:"string",placeholder:"string",readOnly:"string",required:"boolean",size:"string"},handler:e=>{e.type="email"},docs:[]},FilePicker:{tag:"input",props:{required:"boolean",accept:"string",capture:"string",multiple:"string"},handler:e=>{e.type="file"},docs:[]},HiddenInput:{tag:"input",props:{name:"string",value:"string",autoComplete:"string"},handler:e=>{e.type="hidden"},docs:[]},ImagePicker:{tag:"input",props:{alt:"string",src:"string",height:"string",formAction:"string",formEncType:"string",formMethod:"string",formNoValidate:"string",formTarget:"string"},handler:e=>{e.type="image"},docs:[]},MonthPicker:{tag:"input",props:{autoComplete:"string",list:"string",readOnly:"string",step:"string",value:"string"},handler:e=>{e.type="month"},docs:[]},NumberPicker:{tag:"input",props:{autoComplete:"string",list:"string",placeholder:"string",readOnly:"string",list:"string",value:"string",valueAsNumber:"string"},handler:e=>{e.type="number"},docs:[]},PasswordField:{tag:"input",props:{autoComplete:"string",inputMode:"string",maxLength:"string",minLength:"string",pattern:"string",placeholder:"string",readOnly:"string",required:"string",size:"string",value:"string"},handler:e=>{e.type="password"},docs:[]},RadioButton:{tag:"input",props:{checked:"string",value:"string",required:"string"},handler:e=>{e.type="radio"},docs:[]},RangePicker:{tag:"input",props:{autoComplete:"string",list:"string",max:"string",min:"string",step:"string",value:"string",valueAsNumber:"string"},handler:e=>{e.type="range"},docs:[]},ResetButton:{tag:"input",props:{value:"string"},handler:e=>{e.type="reset"},docs:[]},SearchField:{tag:"input",props:{autoComplete:"string",list:"string",maxLength:"string",minLength:"string",pattern:"string",placeholder:"string",required:"string",size:"string",value:"string"},handler:e=>{e.type="search"},docs:[]},SubmitButton:{tag:"input",props:{value:"string"},handler:e=>{e.type="submit"},docs:[]},TelephoneNumberField:{tag:"input",props:{autoComplete:"string",list:"string",maxLength:"string",minLength:"string",pattern:"string",readOnly:"string",placeholder:"string",size:"string",value:"string"},handler:e=>{e.type="tel"},docs:[]},TextField:{tag:"input",props:{autoComplete:"string",list:"string",maxLength:"string",minLength:"string",pattern:"string",readOnly:"string",placeholder:"string",size:"string",value:"string",required:"string"},handler:e=>{e.type="text"},docs:[]},TimePicker:{tag:"input",props:{autoComplete:"string",list:"string",readOnly:"string",step:"string",value:"string"},handler:e=>{e.type="time"},docs:[]},UrlField:{tag:"input",props:{autoComplete:"string",list:"string",maxLength:"string",minLength:"string",pattern:"string",readOnly:"string",placeholder:"string",size:"string",value:"string",required:"string"},handler:e=>{e.type="url"},docs:[]},WeekPicker:{tag:"input",props:{autoComplete:"string",list:"string",readOnly:"string",step:"string",value:"string"},handler:e=>{e.type="tel"},docs:[]},Row:{tag:a,props:{},docs:[]},Spacer:{tag:i,props:{height:"number",width:"number"},childless:!0,handler:e=>{e.style={...e.style,scoped:!0,normal:{minHeight:e.height,height:e.height,maxHeight:e.height,display:"inline-block",maxWidth:e.width,width:e.width,minWidth:e.width}}},docs:[]},LazyColumn:{tag:l,props:{onObserved:"Function"},handler:e=>{e.hooks||(e.hooks={});const t=e.hooks.onRef||(()=>{});e.hooks.onRef=s=>(0!==s.childNodes.length&&"function"==typeof e.onObserved&&d(e,s),t(s))},docs:[]},LazyRow:{tag:c,props:{onObserved:"Function"},handler:e=>{e.hooks={};const t=e.hooks.onRef||(()=>{});e.hooks.onRef=s=>{t(s),0!==s.childNodes.length&&"function"==typeof e.onObserved&&d(e,s)}},docs:[]}}}},8440:(e,t,s)=>{const n=s(2304);class r extends HTMLElement{constructor(e){customElements.define(e,this)}}e.exports={View:r,addDefaultStyle:function(e,t){n.addStaticStyle({selectors:{[e]:t}})}}},3307:e=>{e.exports={HTML_NS:"http://www.w3.org/1999/xhtml",SVG_NS:"http://www.w3.org/2000/svg",MATH_NS:"http://www.w3.org/1998/Math/MathML",COLUMN_VIEW:"column-view",ROW_VIEW:"row-view",LAZY_COLUMN:"lazy-column",LAZY_ROW:"lazy-row",HTML_CONTAINER:"html-container",SPACER_VIEW:"spacer-view"}},8798:(e,t,s)=>{const{render:n}=s(795);function r(e){return"string"==typeof e&&(!!e.trim()&&(!["unset","none","initial","inherit"].includes(e)&&(!e.includes(" ")&&"--"!=e.substring(0,2))))}function o(e){return"object"==typeof e&&(!Array.isArray(e)&&(null!=e&&0!=Object.keys(e).length))}e.exports={isValidName:r,isValidStepsObject:o,render:function(e,t){if(!r(e)||!o(t))return"";let s=`@keyframes ${e=e.trim()}{`;for(let e in t)s+=n(e,t[e]);return s+="}",s}}},3792:e=>{const t={ascentOverride:"ascent-override",descentOverride:"descent-override",fontDisplay:"font-display",fontFamily:"font-family",fontStretch:"font-stretch",fontStyle:"font-style",fontWeight:"font-weight",fontVariant:"font-variant",fontFeatureSettings:"font-feature-settings",fontVariationSettings:"font-variation-settings",lineGapOverride:"line-gap-override",src:"src",unicodeRange:"unicode-range",sizeAdjust:"size-adjust"};function s(e){return void 0!==t[e]}function n(e){return t[e]}e.exports={list:t,is:s,get:n,render:function(e){if(!Array.isArray(e))return"";let t="@font-face{";return e.forEach((e=>{for(let r in e)s(r)&&!e[r].toString().includes(";")&&(t+=`${n(r)}:${e[r]};`)})),t+="}",t}}},1778:e=>{e.exports={render:function(e){if(!Array.isArray(e))return"";let t="";return e.forEach((e=>{t+=`@import url("${e}");`})),t}}},5181:(e,t,s)=>{const{render:n}=s(795);e.exports={render:function(e,t){if("string"!=typeof e||!e.trim())return"";if(null===t)return"";if("object"!=typeof t)return"";if(Array.isArray(t))return"";if(0==Object.keys(t).length)return"";let s=`@media ${e}{`;for(let e in t)s+=n(e,t[e]);return s+="}",s},isValidMediaQueryDeclaration:function(e){return!!(e&&"object"==typeof e&&!Array.isArray(e)&&Object.keys(e).length>0)}}},5984:(e,t,s)=>{const{Console:n}=s(8221),{List:r}=s(9547),o=/\{|\}/g;function a(e){return void 0!==r[e]&&null!=r[e].css}function i(e){return r[e].css}function l(e){return!!["number","string"].includes(typeof e)&&(!!(e=e.toString().trim())&&-1==e.search(o))}function c(e,t){let s="";const r=[];return Array.isArray(e)?r.push(...e):r.push(e),r.forEach((e=>{l(e)?s+=` ${e}`:n.warn(`CSS: value "${e}" of property "${t}" has been ignored.`)})),s}e.exports={is:a,get:i,render:function(e,t){if(!a(e)||[void 0,null,""].includes(t))return"";const s=c(t,e);return s?`${i(e)}:${s};`:""},renderValue:c,validValue:l}},7416:(e,t,s)=>{const{render:n}=s(795),{render:r}=s(8798),{render:o}=s(5181),{render:a}=s(3792),{render:i}=s(1778),{render:l}=s(5545);e.exports=function(e){const t={lowPriority:"",highPriority:""};if(!e)return t;if(t.highPriority+=i(e.imports),t.highPriority+=a(e.fontFace),e.charset)for(let s in e.charset)t.highPriority+=`@charset "${e.font[s]}";`;if(t.lowPriority+=l(e.var),e.selectors)for(let s in e.selectors)t.lowPriority+=n(s,e.selectors[s]);if(e.mediaQueries)for(let s in e.mediaQueries)t.lowPriority+=o(e.mediaQueries[s].condition,e.mediaQueries[s].selectors);if(e.animations)for(let s in e.animations)t.lowPriority+=r(s,e.animations[s]);return t}},795:(e,t,s)=>{const{render:n}=s(5984),{List:r}=s(4106);function o(e){return void 0!==r[e]&&void 0!==r[e].css}e.exports={list:r,is:o,get:function(e){return o(e)?r[e].css:e},render:function(e,t){if("string"!=typeof e||!e||!t)return"";let s=`${e}{`;for(let e in t)s+=n(e,t[e]);return s+="}",s},customSelectorAlreadyExist:function(e){for(let t in r)if(r[t].css==e.trim())return t;return!1}}},5545:e=>{function t(e,t){return"string"==typeof e&&e.trim()?"--"===e.substring(0,2)||e.includes(";")||e.includes("{")||e.includes("}")?"":["string","number"].includes(typeof t)?t.toString().includes(";")||t.toString().includes("{")||t.toString().includes("}")?"":t.toString().trim()?`--${e}:${t};`:"":"":""}e.exports={render:function(e){if(!e)return"";let s=":root{";for(let n in e)s+=t(n,e[n]);return s+="}",s},renderVar:t}},461:(e,t,s)=>{const{isValidMediaQueryDeclaration:n}=s(5181);e.exports=function(e){if(!Array.isArray(e))return{};const t={};function s(e){return!([null,void 0].includes(e)||["string","number","bigint","boolean","symbol"].includes(typeof e)||Array.isArray(e))&&("object"!=typeof e||0!=Object.keys(e).length)}return e.forEach((e=>{if(e)for(let r in e)switch(r){case"animations":if(!e.animations)break;for(let n in e.animations)s(e.animations[n])&&(t.animations||(t.animations={}),t.animations[n]=e.animations[n]);break;case"mediaQueries":if(!e.mediaQueries)break;for(let s in e.mediaQueries){const r=e.mediaQueries[s];if(!n(r))continue;t.mediaQueries||(t.mediaQueries=[]);const o={condition:s,selectors:e.mediaQueries[s]};let a=!0;for(let e in t.mediaQueries){const s={condition:t.mediaQueries[e].condition,selectors:t.mediaQueries[e].selectors};if(JSON.stringify(s)===JSON.stringify(o)){a=!1;break}}a&&t.mediaQueries.push(o)}break;case"fontFace":if(!Array.isArray(e.fontFace))break;t.fontFace||(t.fontFace=[]),t.fontFace.push(...e.fontFace);break;case"var":if(!e.var||"object"!=typeof e.var||Array.isArray(e.var)||0==Object.keys(e.var).length)break;for(let s in e.var)t.var||(t.var={}),"string"==typeof e.var[s]&&e.var[s].trim()&&(t.var[s]=e.var[s]);break;case"imports":if(!Array.isArray(e.imports))break;t.imports||(t.imports=[]),e.imports.forEach((e=>{"string"==typeof e&&e.trim()&&t.imports.push(e.trim())}));break;case"selectors":if(!e.selectors)break;for(let n in e.selectors)s(e.selectors[n])&&(t.selectors||(t.selectors={}),t.selectors[n]=e.selectors[n])}})),t}},2030:(e,t,s)=>{const{Console:n}=s(8221),{isValidName:r}=s(8798),{get:o,is:a,customSelectorAlreadyExist:i}=s(795);e.exports=function(e){const t={};if(!e||void 0===e.className)return t;function s(e,t,s){if(!e||!s)return;return{key:"."+e+o(t),content:s}}for(let o in e)switch(o){case"inline":case"scoped":break;case"animations":if(!Array.isArray(e.animations))break;t.animations={},e.animations.forEach((e=>{r(e.name)&&e.steps&&(t.animations[e.name]=e.steps)}));break;case"mediaQueries":if(!Array.isArray(e.mediaQueries))break;t.mediaQueries={},e.mediaQueries.forEach((n=>{if(n.condition)for(let r in n){const o=s(e.className,r,n[r]);o&&(t.mediaQueries[n.condition]||(t.mediaQueries[n.condition]={}),t.mediaQueries[n.condition][o.key]=o.content)}}));break;default:if(["className","scoped","mediaQueries","animations"].includes(o))break;if(!a(o)){const e=i(o);if(!1!==e){n.warn(`CSSOM : Custom selector "${o}" is already defined and the custom declaration have been igonred. Use predefined selector "${e}"`);break}}const l=s(e.className,o,e[o]);l&&(t.selectors||(t.selectors={}),t.selectors[l.key]=l.content)}return t}},2304:(e,t,s)=>{const n=s(2030),r=s(461),o=s(7416);class a{static common=(()=>{const e=document.createElement("style");return document.querySelector("head").append(e),e})();static highPriority=(()=>{const e=document.createElement("style");return document.querySelector("head").append(e),e})();static lowPriority=(()=>{const e=document.createElement("style");return document.querySelector("head").append(e),e})();constructor(){this.highPriority="",this.lowPriority="",this.dynamicStack=[]}update(e){const t=(e||[]).map((e=>n(e))),s=o(r([...this.dynamicStack,...t]));this.highPriority!==s.highPriority&&(a.highPriority.innerHTML=s.highPriority,this.highPriority=s.highPriority),this.lowPriority!==s.lowPriority&&(a.lowPriority.innerHTML=s.lowPriority,this.lowPriority=s.lowPriority),this.dynamicStack=[]}static addStaticStyle(e){const t=o(e);a.common.innerHTML+=t.highPriority,a.common.innerHTML+=t.lowPriority}addDynamicDeclaration(e={var:{},import:[],fontFace:{},selectors:{},animations:{},mediaQueries:{}}){this.dynamicStack.push(e)}injectDynamicStyle(){const e=o(r(this.dynamicStack));this.dynamicSheet!==e&&(this.appDynamicStyle.innerHTML=e,this.dynamicSheet=e),this.dynamicStack=[]}setStyle(e={var:{},imports:[],fontFace:{},selectors:{},animations:{},mediaQueries:{}}){this.addDynamicDeclaration(e)}}e.exports=a},9547:e=>{const t="Color",s={accentColor:{css:"accent-color",values:["auto"],methods:[],type:t,support:[]},alignContent:{css:"align-content",values:["center","start","end","flex-start","flex-end","normal","baseline","first baseline","last baseline","space-between","space-around","space-evenly","stretch","safe center","unsafe center"],methods:[],type:"string",support:[]},alignItems:{css:"align-items",values:["center","start","end","flex-start","flex-end","normal","baseline","first baseline","last baseline","stretch","safe center","unsafe center"],methods:[],type:"string",support:[]},alignSelf:{css:"align-self",values:["center","start","end","flex-start","flex-end","normal","baseline","first baseline","last baseline","space-between","space-around","space-evenly","self-start","self-end","stretch","safe center","unsafe center"],methods:[],type:"string",support:[]},alignTracks:{css:"align-tracks",values:["start","space-between","center"],methods:[],type:"string",support:[]},all:{css:"all",values:[],methods:[],type:"string",support:[]},animation:{css:"animation",values:[],methods:[],type:"string",support:[]},animationDelay:{css:"animation-delay",values:[],methods:[,],type:"string",support:[]},animationDuration:{css:"animation-duration",values:[],methods:[],type:"string",support:[]},animationFillMode:{css:"animation-fill-mode",values:["none","forwards","backwards","both"],methods:[],type:"string",support:[]},animationIterationCount:{css:"animation-iteration-count",values:["infinite"],methods:[],type:"number",support:[]},animationName:{css:"animation-name",values:[],methods:[],type:"string",support:[]},animationPlayState:{css:"animation-play-state",values:["running","paused"],methods:[],type:"string",support:[]},animationTimingFunction:{css:"animation-timing-function",values:["ease","ease-in","ease-out","ease-in-out","linear","step-start","step-end"],methods:[],type:"string",support:[]},appearance:{css:"appearance",values:["none","auto","menulist-button","textfield","button","searchfield","textarea","push-button","slide-horizontal","checkbox","radio","square-button","menulist","meter","progress-bar"],methods:[],type:"string",support:[]},ascentOverride:{css:"ascent-override",values:[],methods:[],type:"string",support:[]},aspectRatio:{css:"aspect-ratio",values:["auto"],methods:[],type:"string",support:[]},backdropFilter:{css:"backdrop-filter",values:["none"],methods:[],type:"string",support:[]},backfaceVisibility:{css:"backface-visibility",values:["hidden","visible"],methods:[],type:"string",support:[]},background:{css:"background",values:[],methods:[],type:"string",support:[]},backgroundAttachment:{css:"background-attachment",values:["scroll","fixed","local"],methods:[],type:"string",support:[]},backgroundBlendMode:{css:"background-blend-mode",values:[],methods:[],type:"string",support:[]},backgroundClip:{css:"background-clip",values:["border-box","padding-box","content-box","text"],methods:[],type:"string",support:[]},backgroundColor:{css:"background-color",values:[],methods:[],type:t,support:[]},backgroundImage:{css:"background-image",values:[],methods:[],type:"string",support:[]},backgroundOrigin:{css:"background-origin",values:["border-box","padding-box","content-box"],methods:[],type:"string",support:[]},backgroundPosition:{css:"background-position",values:["top","bottom","left","right","center"],methods:[],type:"string",support:[]},backgroundPositionX:{css:"background-position-x",values:["left","right","center"],methods:[],type:"string",support:[]},backgroundPositionY:{css:"background-position-y",values:["top","center","bottom"],methods:[],type:"string",support:[]},backgroundRepeat:{css:"background-repeat",values:["repeat-x","repeat-y","repeat","space","round","no-repeat"],methods:[],type:"string",support:[]},backgroundSize:{css:"background-size",values:["cover","contain"],methods:[],type:"string",support:[]},blockSize:{css:"block-size",values:["max-content","min-content"],methods:[],type:"string",support:[]},borderBlock:{css:"border-block",values:[],methods:[],type:"string",support:[]},borderBlockColor:{css:"border-block-color",values:[],methods:[],type:t,support:[]},borderBlockStyle:{css:"border-block-style",values:["dashed","dotted","groove"],methods:[],type:"string",support:[]},borderBlockWidth:{css:"border-block-width",values:["thick"],methods:[],type:"string",support:[]},borderBlockEnd:{css:"border-block-end",values:[],methods:[],type:"string",support:[]},borderBlockEndColor:{css:"border-block-end-color",values:[],methods:[],type:t,support:[]},borderBlockEndStyle:{css:"border-block-end-style",values:["dashed","dotted","groove"],methods:[],type:"string",support:[]},borderBlockEndWidth:{css:"border-block-end-width",values:["thick"],methods:[],type:"string",support:[]},borderBlockStart:{css:"border-block-start",values:[],methods:[],type:"string",support:[]},borderBlockStartColor:{css:"border-block-start-color",values:[],methods:[],type:t,support:[]},borderBlockStartStyle:{css:"border-block-start-style",values:["dashed","dotted","groove"],methods:[],type:"string",support:[]},borderBlockStartWidth:{css:"border-block-start-width",values:["thick"],methods:[],type:"string",support:[]},border:{css:"border",values:[],methods:[],type:"string",support:[]},borderBottom:{css:"border-bottom",values:[],methods:[],type:"string",support:[]},borderBottomColor:{css:"border-bottom-color",values:[],methods:[],type:t,support:[]},borderBottomLeftRadius:{css:"border-bottom-left-radius",values:[],methods:[],type:"string",support:[]},borderBottomRightRadius:{css:"border-bottom-right-radius",values:[],methods:[],type:"string",support:[]},borderBottomStyle:{css:"border-bottom-style",values:["none","hidden","dotted","dashed","solid","double","groove","ridge","inset","outset"],methods:[],type:"string",support:[]},borderBottomWidth:{css:"border-bottom-width",values:["thin","medium","thick"],methods:[],type:"string",support:[]},borderCollapse:{css:"border-collapse",values:["collapse","seperate"],methods:[],type:"string",support:[]},borderColor:{css:"border-color",values:[],methods:[],type:t,support:[]},borderEndEndRadius:{css:"border-end-end-radius",values:[],methods:[],type:"string",support:[]},borderEndStartRadius:{css:"border-end-start-radius",values:[],methods:[],type:"string",support:[]},borderStartEndRadius:{css:"border-start-end-radius",values:[],methods:[],type:"string",support:[]},borderStartStartRadius:{css:"border-start-start-radius",values:[],methods:[],type:"string",support:[]},borderImage:{css:"border-image",values:[],methods:[],type:"string",support:[]},borderImageOutset:{css:"border-outset",values:[],methods:[],type:"string",support:[]},borderImageRepeat:{css:"border-image-repeat",values:["stretch","repeat","round","space"],methods:[],type:"string",support:[]},borderImageSlice:{css:"border-image-slice",values:["fill"],methods:[],type:"string",support:[]},borderImageSource:{css:"border-image-source",values:[],methods:[],type:"string",support:[]},borderImageWidth:{css:"border-image-width",values:[],methods:[],type:"string",support:[]},borderInline:{css:"border-inline",values:[],methods:[],type:t,support:[]},borderInlineColor:{css:"border-inline-color",values:[],methods:[],type:t,support:[]},borderInlineStyle:{css:"border-inline-style",values:["dashed","dotted","groove"],methods:[],type:"string",support:[]},borderInlineWidth:{css:"border-inline-width",values:[],methods:[],type:"string",support:[]},borderInlineEnd:{css:"border-inline-end",values:[],methods:[],type:"string",support:[]},borderInlineEndColor:{css:"border-inline-end-color",values:[],methods:[],type:t,support:[]},borderInlineEndStyle:{css:"border-inline-end-style",values:["dashed","dotted","groove"],methods:[],type:"string",support:[]},borderInlineEndWidth:{css:"border-inline-end-width",values:[],methods:[],type:"string",support:[]},borderStartEnd:{css:"border-start-end",values:[],methods:[],type:"string",support:[]},borderInlineStartColor:{css:"border-inline-start-color",values:[],methods:[],type:t,support:[]},borderInlineStartStyle:{css:"border-inline-start-style",values:["dashed","dotted","groove"],methods:[],type:"string",support:[]},borderInlineStartWidth:{css:"border-inline-start-width",values:[],methods:[],type:"string",support:[]},borderLeft:{css:"border-left",values:[],methods:[],type:"string",support:[]},borderLeftColor:{css:"border-left-color",values:[],methods:[],type:t,support:[]},borderLeftStyle:{css:"border-left-style",values:["none","hidden","dotted","dashed","solid","double","groove","ridge","inset","outset"],methods:[],type:"string",support:[]},borderLeftWidth:{css:"border-left-width",values:[],methods:[],type:"string",support:[]},borderRadius:{css:"border-radius",values:[],methods:[],type:"string",support:[]},borderRight:{css:"border-right",values:[],methods:[],type:"string",support:[]},borderRightColor:{css:"border-right-color",values:[],methods:[],type:t,support:[]},borderRightStyle:{css:"border-right-style",values:["none","hidden","dotted","dashed","solid","double","groove","ridge","inset","outset"],methods:[],type:"string",support:[]},borderRightWidth:{css:"border-right-width",values:[],methods:[],type:"string",support:[]},borderSpacing:{css:"border-spacing",values:[],methods:[],type:"string",support:[]},borderStyle:{css:"border-style",values:["none","hidden","dotted","dashed","solid","double","groove","ridge","inset","outset"],methods:[],type:"string",support:[]},borderTop:{css:"border-top",values:[],methods:[],type:"string",support:[]},borderTopColor:{css:"border-top-color",values:[],methods:[],type:t,support:[]},borderTopLeftRadius:{css:"border-top-left-radius",values:[],methods:[],type:"string",support:[]},borderTopRightRadius:{css:"border-top-right-radius",values:[],methods:[],type:"string",support:[]},borderTopStyle:{css:"border-top-style",values:["none","hidden","dotted","dashed","solid","double","groove","ridge","inset","outset"],methods:[],type:"string",support:[]},borderTopWidth:{css:"border-top-width",values:[],methods:[],type:"string",support:[]},borderWidth:{css:"border-width",values:[],methods:[],type:"string",support:[]},bottom:{css:"bottom",values:["auto"],methods:[],type:"string",support:[]},boxDecorationBreak:{css:"box-decoration-break",values:["slice","clone"],methods:[],type:"string",support:[]},boxShadow:{css:"box-shadow",values:["none"],methods:[],type:"string",support:[]},boxSizing:{css:"box-sizing",values:["border-box","box-sizing"],methods:[],type:"string",support:[]},breakAfter:{css:"break-after",values:["auto","avoid","always","all","avoid-page","page","left","right","recto","verso","avoid-column","column","avoid-region","region"],methods:[],type:"string",support:[]},breakBefore:{css:"break-before",values:["auto","avoid","always","all","avoid-page","page","left","right","recto","verso","avoid-column","column","avoid-region","region"],methods:[],type:"string",support:[]},breakInside:{css:"break-inside",values:["auto","avoid","avoid-page","avoid-column","avoid-region"],methods:[],type:"string",support:[]},captionSide:{css:"caption-side",values:["top","bottom","block-start","block-end","inline-start","inline-end"],methods:[],type:"string",support:[]},caretColor:{css:"caret-color",values:["auto","transparent","currentcolor"],methods:[],type:t,support:[]},clear:{css:"clear",values:["none","left","right","both","inline-start","inline-end"],methods:[],type:"string",support:[]},clip:{css:"clip",values:["auto"],methods:[],type:"string",support:[]},clipPath:{css:"clip-path",values:["none","margin-box","border-box","padding-box","content-box","fill-box","stroke","view-box"],methods:[],type:"string",support:[]},color:{css:"color",values:[],methods:[],type:t,support:[]},colorAdjust:{css:"color-adjust",values:[],methods:[],type:"string",support:[]},colorScheme:{css:"color-scheme",values:["normal","light","dark"],methods:[],type:"string",support:[]},columnCount:{css:"column-count",values:["auto"],methods:[],type:"string",support:[]},columnFill:{css:"column-fill",values:["auto","balance","balance-all"],methods:[],type:"string",support:[]},columnGap:{css:"column-gap",values:["normal"],methods:[],type:"string",support:[]},columnRule:{css:"column-rule",values:[],methods:[],type:"string",support:[]},columnRuleColor:{css:"column-rule-color",values:[],methods:[],type:t,support:[]},columnRuleStyle:{css:"column-rule-style",values:["none","hidden","dotted","dashed","solid","double","groove","ridge","inset","outset"],methods:[],type:"string",support:[]},columnRuleWidth:{css:"column-rule-width",values:["thin","medium","thick"],methods:[],type:"string",support:[]},columnSpan:{css:"column-span",values:["none","all"],methods:[],type:"string",support:[]},columnWidth:{css:"column-width",values:["auto"],methods:[],type:"string",support:[]},columns:{css:"columns",values:["auto"],methods:[],type:"string",support:[]},contain:{css:"contain",values:["none","strict","content","size","layout","style","paint"],methods:[],type:"string",support:[]},content:{css:"content",values:["normal","none","open-quote","close-quote","no-open-quote","no-close-quote"],methods:[],type:"string",support:[]},contentVisibility:{css:"content-visibility",values:["visible","hidden","auto"],methods:[],type:"string",support:[]},counterIncrement:{css:"counter-increment",values:[],methods:[],type:"string",support:[]},counterReset:{css:"counter-reset",values:[],methods:[],type:"string",support:[]},counterSet:{css:"counter-set",values:[],methods:[],type:"string",support:[]},cursor:{css:"cursor",values:["auto","default","none","context-menu","help","pointer","progress","wait","cell","crosshair","text","vertical-text","alias","move","no-drop","not-allowed","grab","grabbing","n-resize","e-resize","w-resize","ne-resize","nw-resize","se-resize","sw-resize","ew-resize","ns-resize","ns-resize","nesw-resize","nwse-resize","zoom-in","zoom-out"],methods:[],type:"string",support:[]},direction:{css:"direction",values:["ltr","rtl"],methods:[],type:"string",support:[]},display:{css:"display",values:["block","inline","inline-block","flex","inline-flex","grid","inline-grid","flow-root","none","contents","table","table-row"],methods:[],type:"string",support:[]},emptyCells:{css:"empty-cells",values:["show","hide"],methods:[],type:"string",support:[]},filter:{css:"filter",values:["none"],methods:[],type:"string",support:[]},flex:{css:"flex",values:["auto","none"],methods:[],type:"string",support:[]},flexBasis:{css:"flex-basis",values:["max-content","min-content","fit-content","auto"],methods:[],type:"string",support:[]},flexDirection:{css:"flex-direction",values:["row","row-reverse","column","column-reverse"],methods:[],type:"string",support:[]},flexFlow:{css:"flex-flow",values:[],methods:[],type:"string",support:[]},flexGrow:{css:"flex-grow",values:[],methods:[],type:"string",support:[]},flexShrink:{css:"flex-shrink",values:[],methods:[],type:"string",support:[]},flexWrap:{css:"flex-wrap",values:["nowrap","wrap","wrap-reverse"],methods:[],type:"string",support:[]},float:{css:"float",values:["left","right","none","inline-start","inline-end"],methods:[],type:"string",support:[]},font:{css:"font",values:[],methods:[],type:"string",support:[]},fontFamily:{css:"font-family",values:["serif","sans-serif","monospace","cursive","fantasy","system-ui","ui-serif","ui-sans-serif","ui-monospace","ui-rounded","emoji","math","fangsong"],methods:[],type:"string",support:[]},fontFeatureSettings:{css:"font-feature-settings",values:[],methods:[],type:"string",support:[]},fontKerning:{css:"font-kerning",values:["auto","normal","none"],methods:[],type:"string",support:[]},fontSize:{css:"font-size",values:["xx-small","x-small","small","medium","large","x-large","xx-large","xxx-large"],methods:[],type:"string",support:[]},fontSizeAdjust:{css:"font-size-adjust",values:["none"],methods:[],type:"string",support:[]},fontStretch:{css:"font-stretch",values:["ultra-condensed","extra-condensed","condensed","semi-condensed","normal","semi-expanded","expanded","extra-expanded","ultra-expanded"],methods:[],type:"string",support:[]},fontStyle:{css:"font-style",values:["normal","italic","oblique"],methods:[],type:"string",support:[]},fontSynthesis:{css:"font-synthesis",values:["none","weight","style","small-caps"],methods:[],type:"string",support:[]},fontVariant:{css:"font-variant",values:[],methods:[],type:"string",support:[]},fontVariantAlternates:{css:"font-variant-alternates",values:[],methods:[],type:"string",support:[]},fontVariantCaps:{css:"font-variant-caps",values:[],methods:[],type:"string",support:[]},fontVariantEastAsian:{css:"font-variant-east-asian",values:[],methods:[],type:"string",support:[]},fontVariantLigatures:{css:"font-variant-ligatures",values:[],methods:[],type:"string",support:[]},fontVariantNumeric:{css:"font-variant-numeric",values:[],methods:[],type:"string",support:[]},fontVariantPosition:{css:"font-variant-position",values:[],methods:[],type:"string",support:[]},fontVariantSettings:{css:"font-variant-settings",values:[],methods:[],type:"string",support:[]},fontWeight:{css:"font-weight",values:["normal","bold","lighter","bolder","100","200","300","400","500","600","700","800","900"],methods:[],type:"string",support:[]},forcedColorAdjust:{css:"forced-color-adjust",values:["auto","none"],methods:[],type:t,support:[]},gap:{css:"gap",values:[],methods:[],type:"string",support:[]},grid:{css:"grid",values:["none"],methods:[],type:"string",support:[]},gridArea:{css:"grid-area",values:[],methods:[],type:"string",support:[]},gridAutoColumns:{css:"grid-auto-columns",values:["min-content","max-content","auto"],methods:[],type:"string",support:[]},gridAutoFlow:{css:"grid-auto-flow",values:["row","column","dense"],methods:[],type:"string",support:[]},gridAutoRows:{css:"grid-auto-rows",values:["min-content","max-content","auto"],methods:[],type:"string",support:[]},gridColumn:{css:"grid-column",values:["auto"],methods:[],type:"string",support:[]},gridColumnEnd:{css:"grid-column-end",values:["auto"],methods:[],type:"string",support:[]},gridColumnGap:{css:"grid-column-gap",values:["auto"],methods:[],type:"string",support:[]},gridColumnStart:{css:"grid-column-start",values:[],methods:[],type:"string",support:[]},gridGap:{css:"grid-gap",values:[],methods:[],type:"string",support:[]},gridRow:{css:"grid-row",values:["auto"],methods:[],type:"string",support:[]},gridRowEnd:{css:"grid-row-end",values:["auto"],methods:[],type:"string",support:[]},gridRowGap:{css:"grid-row-gap",values:["auto"],methods:[],type:"string",support:[]},gridRowStart:{css:"grid-row-start",values:[],methods:[],type:"string",support:[]},gridTemplate:{css:"grid-template",values:["none"],methods:[],type:"string",support:[]},gridTemplateAreas:{css:"grid-template-areas",values:["none"],methods:[],type:"string",support:[]},gridTemplateColumns:{css:"grid-template-columns",values:["none"],methods:[],type:"string",support:[]},gridTemplateRows:{css:"grid-template-rows",values:["none"],methods:[],type:"string",support:[]},hangingPunctuation:{css:"hanging-punctuation",values:["none","first","last","force-end","allow-end"],methods:[],type:"string",support:[]},height:{css:"height",values:["max-content","min-content","auto"],methods:[],type:"string",support:[]},hyphens:{css:"hyphens",values:["none","manual","auto"],methods:[],type:"string",support:[]},isolation:{css:"isolation",values:["auto","isolate"],methods:[],type:"string",support:[]},imageOrientation:{css:"image-orientation",values:["none","from-image"],methods:[],type:"string",support:[]},imageRendering:{css:"image-rendering",values:["auto","crisp-edge","pixelated"],methods:[],type:"string",support:[]},imageResolution:{css:"image-resolution",values:["from-image"],methods:[],type:"string",support:[]},initialLetter:{css:"initial-letter",values:["normal"],methods:[],type:"string",support:[]},inlineSize:{css:"inline-size",values:["auto","max-content","min-content"],methods:[],type:"string",support:[]},inset:{css:"inset",values:["auto"],methods:[],type:"string",support:[]},insetBlock:{css:"inset-inline",values:["auto"],methods:[],type:"string",support:[]},insetBlockStart:{css:"inset-block-start",values:["auto"],methods:[],type:"string",support:[]},insetInlineStart:{css:"inset-inline-start",values:["auto"],methods:[],type:"string",support:[]},justifyContent:{css:"justify-content",values:["center","start","end","flex-start","flex-end","left","right","normal","space-between","space-around","stretch","safe center","unsafe center"],methods:[],type:"string",support:[]},justifyItems:{css:"justify-items",values:["center","start","end","flex-start","flex-end","left","right","normal","space-between","space-around","stretch","safe center","unsafe center","self-start","self-end","baseline","first baseline","last baseline","legacy right","legacy left","legacy center"],methods:[],type:"string",support:[]},justifySelf:{css:"justify-self",values:["auto","normal","stretch","center","start","end","flex-start","flex-end","self-start","self-end","left","right","baseline","first baseline","last baseline","safe center","unsafe center"],methods:[],type:"string",support:[]},left:{css:"left",values:["auto"],methods:[],type:"string",support:[]},letterSpacing:{css:"letter-spacing",values:["normal"],methods:[],type:"string",support:[]},lineHeight:{css:"line-height",values:["normal"],methods:[],type:"string",support:[]},lineBreak:{css:"line-break",values:["auto","loose","normal","strict","anywhere"],methods:[],type:"string",support:[]},listStyle:{css:"list-style",values:[],methods:[],type:"string",support:[]},listStyleImage:{css:"list-style-image",values:["none"],methods:[],type:"string",support:[]},listStylePosition:{css:"list-style-position",values:["inside","outside"],methods:[],type:"string",support:[]},listStyleType:{css:"list-style-type",values:["none","disc","circle","square","decimal","georgian","trad-chinese-informal","kannada","decimal-leading-zero","lower-roman","upper-roman","lower-greek","lower-alpha","upper-alpha","armenian","bengali","cambodian","devanagari","gujarati","kannada","lao","malayalam","myanmar","oriya","telugu"],methods:[],type:"string",support:[]},margin:{css:"margin",values:["auto"],methods:[],type:"string",support:[]},marginBlock:{css:"margin-block",values:[],methods:[],type:"string",support:[]},marginBlockEnd:{css:"margin-block-end",values:["auto"],methods:[],type:"string",support:[]},marginBlockStart:{css:"margin-block-start",values:["auto"],methods:[],type:"string",support:[]},marginBottom:{css:"margin-bottom",values:["auto"],methods:[],type:"string",support:[]},marginInline:{css:"margin-inline",values:["auto"],methods:[],type:"string",support:[]},marginInlineEnd:{css:"margin-inline-end",values:["auto"],methods:[],type:"string",support:[]},marginInlineStart:{css:"margin-inline-start",values:["auto"],methods:[],type:"string",support:[]},marginLeft:{css:"margin-left",values:["auto"],methods:[],type:"string",support:[]},marginRight:{css:"margin-right",values:["auto"],methods:[],type:"string",support:[]},marginTop:{css:"margin-top",values:["auto"],methods:[],type:"string",support:[]},mask:{css:"mask",values:["none"],methods:[],type:"string",support:[]},maskBorder:{css:"mask-border",values:[],methods:[],type:"string",support:[]},maskBorderMode:{css:"mask-border-mode",values:["luminance","alpha"],methods:[],type:"string",support:[]},maskBorderOutset:{css:"mast-border-outset",values:[],methods:[],type:"string",support:[]},maskBorderRepeat:{css:"mask-border-repeat",values:["stretch","repeat","round","space"],methods:[],type:"string",support:[]},maskBorderSlice:{css:"mask-border-slice",values:[],methods:[],type:"string",support:[]},maskBorderSource:{css:"mask-border-source",values:["none"],methods:[],type:"string",support:[]},maskBorderWidth:{css:"mask-border-width",values:["auto"],methods:[],type:"string",support:[]},maskClip:{css:"mask-clip",values:["content-box","padding-box","border-box","margin-box","fill-box","stroke-box","view-box","no-clip"],methods:[],type:"string",support:[]},maskComposite:{css:"mask-composite",values:["add","subtract","intersect","exclude"],methods:[],type:"string",support:[]},maskImage:{css:"mask-image",values:["none"],methods:[],type:"string",support:[]},maskMode:{css:"mask-mode",values:["alpha","luminance","match-source"],methods:[],type:"string",support:[]},maskOrigin:{css:"mask-origin",values:["content-box","padding-box","border-box","margin-box","fill-box","stroke-box","view-box","content","padding","border"],methods:[],type:"string",support:[]},maskPosition:{css:"mask-position",values:["top","bottom","left","right","center"],methods:[],type:"string",support:[]},maskRepeat:{css:"mask-repeat",values:["repeat-x","repeat-y","repeat","space","round","no-repeat"],methods:[],type:"string",support:[]},maskSize:{css:"mask-size",values:["cover","contain"],methods:[],type:"string",support:[]},maskType:{css:"mask-type",values:["alpha","luminance"],methods:[],type:"string",support:[]},mathStyle:{css:"math-style",values:["normal","compact"],methods:[],type:"string",support:[]},maxBlockSize:{css:"max-block-size",values:["none","max-content","min-content"],methods:[],type:"string",support:[]},maxInlineSize:{css:"max-inline-size",values:["none","max-content","min-content"],methods:[],type:"string",support:[]},minBlockSize:{css:"min-block-size",values:["none","max-content","min-content"],methods:[],type:"string",support:[]},minInlineSize:{css:"min-inline-size",values:["none","max-content","min-content"],methods:[],type:"string",support:[]},maxHeight:{css:"max-height",values:["none","max-content","min-content"],methods:[],type:"string",support:[]},maxWidth:{css:"max-width",values:["none","max-content","min-content"],methods:[],type:"string",support:[]},minHeight:{css:"min-height",values:["none","max-content","min-content"],methods:[],type:"string",support:[]},minWidth:{css:"min-width",values:["none","max-content","min-content"],methods:[],type:"string",support:[]},mixBlendMode:{css:"mix-blend-mode",values:["normal","multiply","screen","overlay","darken","lighten","color-dodge","color-burn","hard-light","soft-light","difference","exclusion","hue","saturation","color","luminosity"],methods:[],type:"string",support:[]},objectFit:{css:"object-fit",values:["contain","cover","fill","none","scale-down"],methods:[],type:"string",support:[]},objectPosition:{css:"object-position",values:["top","bottom","left","right","center"],methods:[],type:"string",support:[]},offset:{css:"offset",values:["none","auto"],methods:[],type:"string",support:[]},offsetAnchor:{css:"offset-anchor",values:["top","bottom","left","right","center","auto"],methods:[],type:"string",support:[]},offsetDistance:{css:"offset-distance",values:[],methods:[],type:"string",support:[]},offsetPath:{css:"offset-path",values:["none","margin-box","stroke-box"],methods:[],type:"string",support:[]},offsetPosition:{css:"offset-position",values:["top","bottom","left","right","center","auto"],methods:[],type:"string",support:[]},offsetRotate:{css:"offset-rotate",values:["auto"],methods:[],type:"string",support:[]},opacity:{css:"opacity",values:[],methods:[],type:"string",support:[]},order:{css:"order",values:[],methods:[],type:"string",support:[]},orphans:{css:"orphans",values:[],methods:[],type:"string",support:[]},outline:{css:"outline",values:[],methods:[],type:"string",support:[]},outlineColor:{css:"outline-color",values:[],methods:[],type:t,support:[]},outlineOffset:{css:"outline-offset",values:[],methods:[],type:"string",support:[]},outlineStyle:{css:"outline-style",values:["auto","none","dotted","dashed","solid","double","groove","ridge","inset","outset"],methods:[],type:"string",support:[]},outlineWidth:{css:"outline-width",values:["thin","medium","thick"],methods:[],type:"string",support:[]},overflow:{css:"overflow",values:["visible","hidden","clip","scroll","auto"],methods:[],type:"string",support:[]},overflowAnchor:{css:"overflow-anchor",values:["auto","none"],methods:[],type:"string",support:[]},overflowBlock:{css:"overflow-block",values:["visible","hidden","scroll","auto"],methods:[],type:"string",support:[]},overflowClipMargin:{css:"overflow-clip-margin",values:[],methods:[],type:"string",support:[]},overflowInline:{css:"overflow-inline",values:["visible","hidden","scroll","auto"],methods:[],type:"string",support:[]},overflowWrap:{css:"overflow-wrap",values:["normal","break-word","anywhere"],methods:[],type:"string",support:[]},overflowX:{css:"overflow-x",values:["visible","hidden","clip","scroll","auto"],methods:[],type:"string",support:[]},overflowY:{css:"overflow-y",values:["visible","hidden","clip","scroll","auto"],methods:[],type:"string",support:[]},overscrollBehavior:{css:"overscroll-behavior",values:["auto","contain","none"],methods:[],type:"string",support:[]},overscrollBehaviorBlock:{css:"overscroll-behavior-block",values:["auto","contain","none"],methods:[],type:"string",support:[]},overscrollBehaviorInline:{css:"overscroll-behavior-inline",values:["auto","contain","none"],methods:[],type:"string",support:[]},overscrollBehaviorX:{css:"overscroll-behavior-x",values:["auto","contain","none"],methods:[],type:"string",support:[]},overscrollBehaviorY:{css:"overscroll-behavior-y",values:["auto","contain","none"],methods:[],type:"string",support:[]},right:{css:"right",values:["auto"],methods:[],type:"string",support:[]},padding:{css:"padding",values:[],methods:[],type:"string",support:[]},paddingBlock:{css:"padding-block",values:[],methods:[],type:"string",support:[]},paddingBlockEnd:{css:"padding-block-end",values:[],methods:[],type:"string",support:[]},paddingBlockStart:{css:"padding-block-start",values:[],methods:[],type:"string",support:[]},paddingBottom:{css:"padding-bottom",values:[],methods:[],type:"string",support:[]},paddingInline:{css:"padding-inline",values:[],methods:[],type:"string",support:[]},paddingInlineEnd:{css:"padding-inline-end",values:[],methods:[],type:"string",support:[]},paddingInlineStart:{css:"padding-inline-start",values:[],methods:[],type:"string",support:[]},paddingLeft:{css:"padding-left",values:[],methods:[],type:"string",support:[]},paddingRight:{css:"padding-right",values:[],methods:[],type:"string",support:[]},paddingTop:{css:"padding-top",values:[],methods:[],type:"string",support:[]},pageBreakAfter:{css:"page-break-after",values:[],methods:[],type:"string",support:[]},pageBreakBefore:{css:"page-break-before",values:[],methods:[],type:"string",support:[]},pageBreakInside:{css:"page-break-inside",values:[],methods:[],type:"string",support:[]},perspective:{css:"perspective",values:["none"],methods:[],type:"string",support:[]},perspectiveOrigin:{css:"perspective-origin",values:["top","center","right"],methods:[],type:"string",support:[]},placeContent:{css:"place-content",values:["start","end","flex-start","flex-end","center","center","left","right","space-between","baseline","first baseline","last baseline","space-evenly","stretch","safe","unsafe"],methods:[],type:"string",support:[]},placeItems:{css:"place-items",values:["start","end","flex-start","flex-end","center","center","left","right","space-between","baseline","first baseline","last baseline","space-evenly","stretch","safe","unsafe","normal","legacy","self-start","self-end"],methods:[],type:"string",support:[]},pointerEvents:{css:"pointer-events",values:["auto","none","visiblePainted","visibleFill","visibleStroke","visible","painted","fill","stroke","all"],methods:[],type:"string",support:[]},position:{css:"position",values:["static","relative","absolute","fixed","sticky"],methods:[],type:"string",support:[]},quotes:{css:"quotes",values:["none","auto"],methods:[],type:"string",support:[]},resize:{css:"resize",values:[],methods:["none","both","horizontal","vertical","block","inline"],type:"string",support:[]},rotate:{css:"rotate",values:["none"],methods:[],type:"string",support:[]},rowGap:{css:"row-gap",values:[],methods:[],type:"string",support:[]},rubyAlign:{css:"ruby-align",values:["start","center","space-between","space-around"],methods:[],type:"string",support:[]},rubyPosition:{css:"ruby-position",values:["over","under","inter-character","alternate"],methods:[],type:"string",support:[]},scale:{css:"scale",values:[],methods:["none"],type:"string",support:[]},scrollBehavior:{css:"scroll-behavior",values:["auto","smooth"],methods:[],type:"string",support:[]},scrollMargin:{css:"scroll-margin",values:[],methods:[],type:"string",support:[]},scrollMarginBlock:{css:"scroll-margin-block",values:[],methods:[],type:"string",support:[]},scrollMarginBlockEnd:{css:"scroll-margin-block-end",values:[],methods:[],type:"string",support:[]},scrollMarginBlockStart:{css:"scroll-margin-block-start",values:[],methods:[],type:"string",support:[]},scrollMarginBottom:{css:"scroll-margin-bottom",values:[],methods:[],type:"string",support:[]},scrollMarginInline:{css:"scroll-margin-inline",values:[],methods:[],type:"string",support:[]},scrollMarginInlineEnd:{css:"scroll-margin-inline-end",values:[],methods:[],type:"string",support:[]},scrollMarginInlineStart:{css:"scroll-margin-inline-start",values:[],methods:[],type:"string",support:[]},scrollMarginLeft:{css:"scroll-margin-left",values:[],methods:[],type:"string",support:[]},scrollMarginRight:{css:"scroll-margin-right",values:[],methods:[],type:"string",support:[]},scrollMarginTop:{css:"scroll-margin-top",values:[],methods:[],type:"string",support:[]},scrollPadding:{css:"scroll-padding",values:[],methods:[],type:"string",support:[]},scrollPaddingBlock:{css:"scroll-padding-block",values:[],methods:[],type:"string",support:[]},scrollPaddingBlockEnd:{css:"scroll-padding-block-end",values:[],methods:[],type:"string",support:[]},scrollPaddingBlockStart:{css:"scroll-padding-block-start",values:[],methods:[],type:"string",support:[]},scrollPaddingBottom:{css:"scroll-padding-bottom",values:[],methods:[],type:"string",support:[]},scrollPaddingInline:{css:"scroll-padding-inline-end",values:[],methods:[],type:"string",support:[]},scrollPaddingInlineStart:{css:"scroll-padding-inline-start",values:[],methods:[],type:"string",support:[]},scrollPaddingLeft:{css:"scroll-padding-left",values:[],methods:[],type:"string",support:[]},scrollPaddingRight:{css:"scroll-padding-right",values:[],methods:[],type:"string",support:[]},scrollPaddingTop:{css:"scroll-padding-top",values:[],methods:[],type:"string",support:[]},scrollSnapAlign:{css:"scroll-snap-align",values:["none","start","end","center"],methods:[],type:"string",support:[]},scrollSnapStop:{css:"scroll-snap-stop",values:["normal","always"],methods:[],type:"string",support:[]},scrollSnapType:{css:"scroll-snap-type",values:["none","x","y","block","inline","both","mandatory","proximity"],methods:[],type:"string",support:[]},scrollbarColor:{css:"scrollbar-color",values:[],methods:[],type:t,support:[]},scrollbarGutter:{css:"scrollbar-gutter",values:["auto","stable","both-edges"],methods:[],type:"string",support:[]},scrollbarWidth:{css:"scrollbar-width",values:["auto","thin","none"],methods:[],type:"string",support:[]},shapeImageThreshold:{css:"shape-image-threshold",values:[],methods:[],type:"string",support:[]},shapeMargin:{css:"shape-margin",values:[],methods:[],type:"string",support:[]},shapeOutside:{css:"shape-outside",values:["none","margin-box","content-box","border-box","padding-box"],methods:[],type:"string",support:[]},tabSize:{css:"tab-size",values:[],methods:[],type:"string",support:[]},tableLayout:{css:"table-layout",values:["auto","fixed"],methods:[],type:"string",support:[]},textAlign:{css:"text-align",values:["start","end","left","right","center","justify","justify-all","match-parent"],methods:[],type:"string",support:[]},textAlignLast:{css:"text-align-last",values:["start","end","left","right","center","justify"],methods:[],type:"string",support:[]},textCombineUpright:{css:"text-combine-upright",values:["none","all"],methods:[],type:"string",support:[]},textDecoration:{css:"text-decoration",values:["none"],methods:[],type:"string",support:[]},textDecorationColor:{css:"text-decoration-color",values:[],methods:[],type:t,support:[]},textDecorationLine:{css:"text-decoration-line",values:["none","underline","overline","line-through","blink"],methods:[],type:"string",support:[]},textDecorationSkip:{css:"text-decoration-skip",values:["none","objects","spaces","edges","box-decoration","leading-spaces","trailing-spaces"],methods:[],type:"string",support:[]},textDecorationSkipInk:{css:"text-decoration-skip-ink",values:["none","auto","all"],methods:[],type:"string",support:[]},textDecorationStyle:{css:"text-decoration-style",values:["solid","double","dotted","dashed","wavy"],methods:[],type:"string",support:[]},textDecorationThickness:{css:"text-decoration-thickness",values:["auto","from-font"],methods:[],type:"string",support:[]},textEmphasis:{css:"text-emphasis",values:["none"],methods:[],type:"string",support:[]},textEmphasisColor:{css:"text-emphasis-color",values:[],methods:[],type:t,support:[]},textEmphasisPosition:{css:"text-emphasis-position",values:["over","under","right","left"],methods:[],type:"string",support:[]},textEmphasisStyle:{css:"text-emphasis-style",values:["none","filled","open","dot","circle","double-circle","triangle","sesame"],methods:[],type:"string",support:[]},textIndent:{css:"text-indent",values:[],methods:[],type:"string",support:[]},textJustify:{css:"text-justify",values:["none","auto","inter-word","inter-character","distribute"],methods:[],type:"string",support:[]},textOrientation:{css:"text-orientation",values:["mixed","upright","sideways-right","sideways","use-glyph-orientation"],methods:[],type:"string",support:[]},textOverflow:{css:"text-overflow",values:["clip","ellipsis"],methods:[],type:"string",support:[]},textRendering:{css:"text-rendering",values:["auto","optimizeSpeed","optimizeLegibility","geometricPrecision"],methods:[],type:"string",support:[]},textShadow:{css:"text-shadow",values:[],methods:[],type:"string",support:[]},textSizeAdjust:{css:"text-size-adjust",values:[],methods:[],type:"string",support:[]},textTransform:{css:"text-transform",values:["none","capitalize","uppercase","lowercase","full-width","full-size-kana"],methods:[],type:"string",support:[]},textUnderlineOffset:{css:"text-underline-offset",values:["auto"],methods:[],type:"string",support:[]},textUnderlinePosition:{css:"text-underline-position",values:["auto","under","left","right"],methods:[],type:"string",support:[]},top:{css:"top",values:["auto"],methods:[],type:"string",support:[]},touchAction:{css:"touch-action",values:["auto","none","pan-x","pan-y","manipulation","pinch-zoom"],methods:[],type:"string",support:[]},transform:{css:"transform",values:[],methods:[],type:"string",support:[]},transformBox:{css:"transform-box",values:["content-box","border-box","fill-box","stroke-box","view-box"],methods:[],type:"string",support:[]},transformOrigin:{css:"transform-origin",values:["left","center","right","top","bottom"],methods:[],type:"string",support:[]},transformStyle:{css:"transform-style",values:["flat","preserve-3d"],methods:[],type:"string",support:[]},transition:{css:"transition",values:[],methods:[],type:"string",support:[]},transitionDelay:{css:"transition-delay",values:[],methods:[],type:"string",support:[]},transitionDuration:{css:"transition-duration",values:[],methods:[],type:"string",support:[]},transitionProperty:{css:"transition-property",values:[],methods:[],type:"string",support:[]},transitionTimingFunction:{css:"transition-timing-function",values:["ease","ease-in","ease-out","ease-in-out","linear","step-start","step-end"],methods:[],type:"string",support:[]},translate:{css:"translate",values:["none"],methods:[],type:"string",support:[]},unicodeBidi:{css:"unicode-bidi",values:[],methods:[],type:"string",support:[]},userSelect:{css:"user-select",values:["none","auto","text","contain","all"],methods:[],type:"string",support:[]},verticalAlign:{css:"vertical-align",values:["baseline","sub","super","text-top","text-bottom","middle","top","bottom"],methods:[],type:"string",support:[]},visibility:{css:"visibility",values:["visible","hidden","collapse"],methods:[],type:"string",support:[]},whiteSpace:{css:"white-space",values:["normal","nowrap","pre","pre-wrap","pre-line","break-spaces"],methods:[],type:"string",support:[]},width:{css:"width",values:["max-content","min-content","auto"],methods:[],type:"string",support:[]},widows:{css:"widows",values:[],methods:[],type:"string",support:[]},wordBreak:{css:"word-break",values:["normal","break-all","keep-all","break-word"],methods:[],type:"string",support:[]},wordSpacing:{css:"word-spacing",values:["normal"],methods:[],type:"string",support:[]},wordWrap:{css:"word-wrap",values:["normal","break-word","anywhere"],methods:[],type:"string",support:[]},writingMode:{css:"writing-mode",values:["horizontal-tb","vertical-rl","vertical-lr"],methods:[],type:"string",support:[]},zIndex:{css:"z-index",values:["auto"],methods:[],type:"string",support:[]},zoom:{css:"zoom",values:[],methods:[],type:"string",support:[]},webkitLineClamp:{css:"-webkit-line-clamp",values:[],methods:[],type:"string",support:[]},webkitAppearance:{css:"-webkit-appearance",values:[],methods:[],type:"string",support:[]},webkitTextEmphasis:{css:"-webkit-text-emphasis",values:[],methods:[],type:"string",support:[]},webkitHyphens:{css:"-webkit-hyphens",values:[],methods:[],type:"string",support:[]},mozAppearance:{css:"-moz-appearance",values:[],methods:[],type:"string",support:[]},mozTabSize:{css:"-moz-tab-size",values:[],methods:[],type:"string",support:[]},mozHyphens:{css:"-moz-hyphens",values:[],methods:[],type:"string",support:[]},oTabSize:{css:"-o-tab-size",values:[],methods:[],type:"string",support:[]},msHyphens:{css:"-ms-hyphens",values:[],methods:[],type:"string",support:[]}};e.exports={List:s,globalValues:["inherit","initial","revert","unset","revert","revert-layer"]}},4106:e=>{e.exports={List:{normal:{css:"",support:{}},active:{css:":active",support:{}},anyLink:{css:":any-link",support:{}},autofill:{css:":autofill",support:{}},checked:{css:":checked",support:{}},default:{css:":default",support:{}},defined:{css:":defined",support:{}},disabled:{css:":disabled",support:{}},empty:{css:":empty",support:{}},enabled:{css:":enabled",support:{}},first:{css:":first",support:{}},firstChild:{css:":first-child",support:{}},firstOfType:{css:":first-of-type",support:{}},fullscreen:{css:"fullscreen",support:{}},focus:{css:":focus",support:{}},focusVisible:{css:":focus-visible",support:{}},focusWithin:{css:":focus-within",support:{}},host:{css:":host",support:{}},hover:{css:":hover",support:{}},indeterminate:{css:":indeterminate",support:{}},inRange:{css:":in-range",support:{}},invalid:{css:":invalid",support:{}},lastChild:{css:":last-child",support:{}},lastOfType:{css:":last-of-type",support:{}},left:{css:":left",support:{}},link:{css:":link",support:{}},modal:{css:":modal",support:{}},onlyChild:{css:":only-child",support:{}},onlyOfType:{css:":only-of-type",support:{}},optional:{css:":optional",support:{}},outOfRange:{css:":out-of-range",support:{}},pictureInPicutre:{css:":picture-in-picture",support:{}},placeholderShown:{css:":placeholder-shown",support:{}},readOnly:{css:":read-only",support:{}},readWrite:{css:":read-write",support:{}},required:{css:":required",support:{}},scope:{css:":scope",support:{}},target:{css:":target",support:{}},valid:{css:":valid",support:{}},visited:{css:":visited",support:{}},after:{css:"::after",support:{}},before:{css:"::before",support:{}},cue:{css:"::cue",support:{}},firstLetter:{css:"::first-letter",support:{}},firstLine:{css:"::first-line",support:{}},fileSelectorButton:{css:"::file-selector-button",support:{}},placeholder:{css:"::placeholder",support:{}},selection:{css:"::selection",support:{}},marker:{css:"::marker",support:{}},webkitScrollbar:{css:"::-webkit-scrollbar",support:{}},webkitScrollbarTrack:{css:"::-webkit-scrollbar-track",support:{}},webkitScrollbarThumb:{css:"::-webkit-scrollbar-thumb",support:{}},webkitScrollbarThumbHover:{css:"::-webkit-scrollbar-thumb:hover",support:{}},webkitScrollbarThumbActive:{css:"::-webkit-scrollbar-thumb:active",support:{}}}}},8678:(e,t,s)=>{const n=s(6029),r=s(4402),o={...s(2809),...r,...n};function a(e){return void 0!==o[e]}e.exports={list:o,is:a,get:function(e){if(a(e))return o[e].name},isToggle:function(e){return a(e)&&"toggle"===o[e].type}}},302:(e,t,s)=>{const{handler:n}=s(402),r={onAbort:{listener:"abort",on:"onabort",type:"Event",docs:[]},onAnimationEnd:{listener:"animationend",on:"onanimationend",type:"Event",docs:[]},onAnimationIteration:{listener:"animationiteration",on:"onanimationiteration",type:"Event"},onAnimationStart:{listener:"animationstart",on:"onanimationstart",type:"Event",docs:[]},onAnimationEnd:{listener:"animationend",on:"onanimationend",type:"Event",docs:[]},onBeforePrint:{listener:"beforeprint",on:"onbeforeprint",type:"Event",docs:[]},onBeforeUnload:{listener:"beforeunload",on:"onberforeunload",type:"Event",docs:[]},onBlur:{listener:"blur",on:"onblur",type:"Event",docs:[]},onCanPlay:{listener:"canplay",on:"oncanplay",type:"Event",docs:[]},onCanPlayThrough:{listener:"canplaythrough",on:"oncanplaythroug",type:"Event",docs:[]},onChange:{listener:"change",on:"onchange",type:"Event",docs:[]},onContextMenu:{listener:"contextmenu",on:"oncontextmenu",type:"Event",docs:[]},onCopy:{listener:"copy",on:"oncopy",type:"Event",docs:[]},onCut:{listener:"cut",on:"oncut",type:"Event",docs:[]},onDurationChange:{listener:"durationchange",on:"ondurationchange",type:"Event",docs:[]},onEnded:{listener:"ended",on:"onended",type:"Event",docs:[]},onError:{listener:"error",on:"onerror",type:"Event",docs:[]},onFocus:{listener:"focus",on:"onfocus",type:"Event",docs:[]},onFocusIn:{listener:"focusin",on:"onfocusin",type:"Event",docs:[]},onFocusOut:{listener:"focusout",on:"onfocusout",type:"Event",docs:[]},onFullScreenChange:{listener:"fullscreenchange",on:"onfullscreenchange",type:"Event",docs:[]},onHashChange:{listener:"hashchange",on:"onhashchange",type:"Event",docs:[]},onInvalid:{listener:"invalid",on:"oninvalid",type:"Event",docs:[]},onLoad:{listener:"load",on:"onload",type:"Event",docs:[]},onLoadedData:{listener:"loadeddata",on:"onloadeddata",type:"Event",docs:[]},onLoadedMetaData:{listener:"loadedmetadata",on:"onloadedmetadata",type:"Event",docs:[]},onLoadStart:{listener:"loadstart",on:"onloadstart",type:"Event",docs:[]},onMessage:{listener:"message",on:"onmessage",type:"Event",docs:[]},onOffline:{listener:"offline",on:"ononffline",type:"Event",docs:[]},onOnline:{listener:"online",on:"ononline",type:"Event",docs:[]},onOpen:{listener:"open",on:"onopen",type:"Event",docs:[]},onPageHide:{listener:"pagehide",on:"onpagehide",type:"Event",docs:[]},onPageShow:{listener:"pageshow",on:"onpageshow",type:"Event",docs:[]},onPaste:{listener:"paste",on:"onpaste",type:"Event",docs:[]},onPause:{listener:"pause",on:"onpause",type:"Event",docs:[]},onPlay:{listener:"play",on:"onplay",type:"Event",docs:[]},onPlaying:{listener:"playing",on:"onplaying",type:"Event",docs:[]},onProgress:{listener:"progress",on:"onprogress",type:"Event",docs:[]},onRateChange:{listener:"ratechange",on:"onratechange",type:"Event",docs:[]},onResize:{listener:"resize",on:"onresize",type:"Event",docs:[]},onReset:{listener:"reset",on:"onreset",type:"Event",docs:[]},onScroll:{listener:"scroll",on:"onscroll",type:"Event",docs:[]},onSearch:{listener:"search",on:"onsearch",type:"Event",docs:[]},onSeeked:{listener:"seeked",on:"onseeked",type:"Event",docs:[]},onSeeking:{listener:"seeking",on:"onseeking",type:"Event",docs:[]},onSelect:{listener:"select",on:"onselect",type:"Event",docs:[]},onSelectionChange:{listener:"selectionchange",on:"onselectionchange",type:"Event",docs:[]},onShow:{listener:"show",on:"onshow",type:"Event",docs:[]},onStalled:{listener:"stalled",on:"onstalled",type:"Event",docs:[]},onStorage:{listener:"storage",on:"onstorage",type:"Event",docs:[]},onSubmit:{listener:"submit",on:"onsubmit",type:"Event",docs:[]},onSuspend:{listener:"suspend",on:"onsuspend",type:"Event",docs:[]},onTimeUpdate:{listener:"timeupdate",on:"ontimeupdate",type:"Event",docs:[]},onToggle:{listener:"toggle",on:"ontoggle",type:"Event",docs:[]},onTransitionEnd:{listener:"transitionend",on:"ontransitionend",type:"Event",docs:[]},onUnload:{listener:"unload",on:"onunload",type:"Event",docs:[]},onVolumeChange:{listener:"volumnechange",on:"onvolumechange",type:"Event",docs:[]},onWaiting:{listener:"waiting",on:"onwaiting",type:"Event",docs:[]},onWheel:{listener:"wheel",on:"onwheel",type:"WheelEvent",docs:[]},onInput:{listener:"input",on:"oninput",type:"InputEvent",docs:[]},onDrag:{listener:"drag",on:"ondrag",type:"DragEvent",docs:[]},onDragEnd:{listener:"dragend",on:"ondragend",type:"DragEvent",docs:[]},onDragEnter:{listener:"dragenter",on:"ondragenter",type:"DragEvent",docs:[]},onDragLeave:{listener:"dragleave",on:"ondragleave",type:"DragEvent",docs:[]},onDragOver:{listener:"dragover",on:"ondragover",type:"DragEvent",docs:[]},onDragStart:{listener:"dragstart",on:"ondragstart",type:"DragEvent",docs:[]},onDrop:{listener:"drop",on:"ondrop",type:"DragEvent",docs:[]},onKeyDown:{listener:"keydown",on:"onkeydown",type:"KeyboardEvent",docs:[]},onKeyPress:{listener:"keypress",on:"onkeypress",type:"KeyboardEvent",docs:[]},onKeyUp:{listener:"keyup",on:"onkeyup",type:"KeyboardEvent",docs:[]},onClick:{listener:"click",on:"onclick",type:"MouseEvent",docs:[]},onDoubleClick:{listener:"dblclick",on:"ondblclick",type:"MouseEvent",docs:[]},onMouseDown:{listener:"mousedown",on:"onmousedown",type:"MouseEvent",docs:[]},onMouseEnter:{listener:"mouseenter",on:"onmouseenter",type:"MouseEvent",docs:[]},onMouseLeave:{listener:"mouseleave",on:"onmouseleave",type:"MouseEvent",docs:[]},onMouseMove:{listener:"mousemove",on:"onmousemove",type:"MouseEvent",docs:[]},onMouseOver:{listener:"mouseover",on:"onmouseover",type:"MouseEvent",docs:[]},onMouseOut:{listener:"mouseout",on:"onmouseout",type:"MouseEvent",docs:[]},onMouseUp:{listener:"mouseup",on:"onmouseup",type:"MouseEvent",docs:[]},onPointerOver:{listener:"pointerover",on:"onpointerover",type:"PointerEvent",docs:[]},onPointerEnter:{listener:"pointerenter",on:"onpointerenter",type:"PointerEvent",docs:[]},onPointerDown:{listener:"pointerdown",on:"onpointerdown",type:"PointerEvent",docs:[]},onPointerMove:{listener:"pointermove",on:"onpointermove",type:"PointerEvent",docs:[]},onPointerUp:{listener:"pointerup",on:"onpointerup",type:"PointerEvent",docs:[]},onPointerCancel:{listener:"pointercancel",on:"onpointercancel",type:"PointerEvent",docs:[]},onPointerOut:{listener:"pointerout",on:"onpointerout",type:"PointerEvent",docs:[]},onPointerLeave:{listener:"pointerleave",on:"onpointerleave",type:"PointerEvent",docs:[]},onGotPointerCapture:{listener:"gotpointercapture",on:"ongotpointercapture",type:"PointerEvent"},onLostPointerCapture:{listener:"lostpointercapture",on:"onlostpointercapture",type:"PointerEvent"},onTouchCancel:{listener:"touchcancel",on:"ontouchcancel",type:"TouchEvent",docs:[]},onTouchEnd:{listener:"touchend",on:"ontouchend",type:"TouchEvent",docs:[]},onTouchMove:{listener:"touchmove",on:"ontouchmove",type:"TouchEvent",docs:[]},onTouchStart:{listener:"touchstart",on:"ontouchstart",type:"TouchEvent",docs:[]},onClickGlobal:n("onclickglobal","PointerEvent",[]),onResizeGlobal:n("onresizeglobal","Event",[]),onKeyUpGlobal:n("onkeyupglobal","KeyboardEvent",[]),onKeyDownGlobal:n("onkeydownglobal","KeyboardEvent",[]),onContextMenuGlobal:n("oncontextmenuglobal","PointerEvent",[]),onScrollGlobal:n("onscrollglobal","Event",[]),onBeforeUnloadGlobal:n("onbeforeunloadglobal","BeforeUnloadEvent",[])};function o(e){return void 0!==r[e]}function a(e){return r[e]}e.exports={is:o,get:a,hasHandler:function(e){return o(e)&&void 0!==a(e).handler},getListener:function(e){return a(e).listener},list:r}},6029:e=>{e.exports={ariaAutocomplete:{name:"aria-autocomplete",type:"normal",values:"string",els:!0,docs:[]},ariaChecked:{name:"aria-checked",type:"normal",values:"string",els:!0,docs:[]},ariaDisabled:{name:"aria-disabled",type:"normal",values:"string",els:!0,docs:[]},ariaErrormessage:{name:"aria-errormessage",type:"normal",values:"string",els:!0,docs:[]},ariaExpanded:{name:"aria-expanded",type:"normal",values:"string",els:!0,docs:[]},ariaHaspopup:{name:"aria-haspopup",type:"normal",values:"string",els:!0,docs:[]},ariaHidden:{name:"aria-hidden",type:"normal",values:"string",els:!0,docs:[]},ariaInvalid:{name:"aria-invalid",type:"normal",values:"string",els:!0,docs:[]},ariaLabel:{name:"aria-label",type:"normal",values:"string",els:!0,docs:[]},ariaLevel:{name:"aria-level",type:"normal",values:"string",els:!0,docs:[]},ariaModal:{name:"aria-modal",type:"normal",values:"string",els:!0,docs:[]},ariaMultiline:{name:"aria-multiline",type:"normal",values:"string",els:!0,docs:[]},ariaMultiselectable:{name:"aria-multiselectable",type:"normal",values:"string",els:!0,docs:[]},ariaOrientation:{name:"aria-orientation",type:"normal",values:"string",els:!0,docs:[]},ariaPlaceholder:{name:"aria-placeholder",type:"normal",values:"string",els:!0,docs:[]},ariaPressed:{name:"aria-pressed",type:"normal",values:"string",els:!0,docs:[]},ariaReadonly:{name:"aria-readonly",type:"normal",values:"string",els:!0,docs:[]},ariaRequired:{name:"aria-required",type:"normal",values:"string",els:!0,docs:[]},ariaSelected:{name:"aria-selected",type:"normal",values:"string",els:!0,docs:[]},ariaSort:{name:"aria-sort",type:"normal",values:"string",els:!0,docs:[]},ariaValuemax:{name:"aria-valuemax",type:"normal",values:"string",els:!0,docs:[]},ariaValuemin:{name:"aria-valuemin",type:"normal",values:"string",els:!0,docs:[]},ariaValuenow:{name:"aria-valuenow",type:"normal",values:"string",els:!0,docs:[]},ariaValuetext:{name:"aria-valuetext",type:"normal",values:"string",els:!0,docs:[]},ariaBusy:{name:"aria-busy",type:"normal",values:"string",els:!0,docs:[]},ariaLive:{name:"aria-live",type:"normal",values:"string",els:!0,docs:[]},ariaRelevant:{name:"aria-relevant",type:"normal",values:"string",els:!0,docs:[]},ariaAtomic:{name:"aria-atomic",type:"normal",values:"string",els:!0,docs:[]},ariaDropeffect:{name:"aria-dropeffect",type:"normal",values:"string",els:!0,docs:[]},ariaGrabbed:{name:"aria-grabbed",type:"normal",values:"string",els:!0,docs:[]},ariaActivedescendant:{name:"aria-activedescendant",type:"normal",values:"string",els:!0,docs:[]},ariaColcount:{name:"aria-colcount",type:"normal",values:"string",els:!0,docs:[]},ariaColindex:{name:"aria-colindex",type:"normal",values:"string",els:!0,docs:[]},ariaColspan:{name:"aria-colspan",type:"normal",values:"string",els:!0,docs:[]},ariaControls:{name:"aria-controls",type:"normal",values:"string",els:!0,docs:[]},ariaDescribedby:{name:"aria-describedby",type:"normal",values:"string",els:!0,docs:[]},ariaDescription:{name:"aria-description",type:"normal",values:"string",els:!0,docs:[]},ariaDetails:{name:"aria-details",type:"normal",values:"string",els:!0,docs:[]},ariaFlowto:{name:"aria-flowto",type:"normal",values:"string",els:!0,docs:[]},ariaLabelledby:{name:"aria-labelledby",type:"normal",values:"string",els:!0,docs:[]},ariaOwns:{name:"aria-owns",type:"normal",values:"string",els:!0,docs:[]},ariaPosinset:{name:"aria-posinset",type:"normal",values:"string",els:!0,docs:[]},ariaRowcount:{name:"aria-rowcount",type:"normal",values:"string",els:!0,docs:[]},ariaRowindex:{name:"aria-rowindex",type:"normal",values:"string",els:!0,docs:[]},ariaRowspan:{name:"aria-rowspan",type:"normal",values:"string",els:!0,docs:[]},ariaSetsize:{name:"aria-setsize",type:"normal",values:"string",els:!0,docs:[]},ariaCurrent:{name:"aria-current",type:"normal",values:"string",els:!0,docs:[]},ariaKeyshortcuts:{name:"aria-keyshortcuts",type:"normal",values:"string",els:!0,docs:[]},ariaRoledescription:{name:"aria-roledescription",type:"normal",values:"string",els:!0,docs:[]}}},4402:e=>{e.exports={accept:{name:"accept",type:"normal",values:["audio/*","video/*","image/*"],els:["form","input"],docs:["List of types the server accepts, typically a file type."]},acceptCharSet:{name:"acceptcharset",type:"normal",values:"string",els:["form"],docs:["List of supported charsets."]},accessKey:{name:"accesskey",type:"normal",values:"string",els:!0,docs:["Keyboard shortcut to activate or add focus to the element."]},action:{name:"action",type:"normal",values:"string",els:["form"],docs:["The URI of a program that processes the information submitted via the form."]},align:{name:"align",type:"normal",values:"string",els:["applet","caption","col","colgroup","hr","iframe","img","table","tbody","td","tfoot","th","thead","tr"],docs:["Specifies the horizontal alignment of the element."]},allow:{name:"allow",type:"normal",values:"string",els:["iframe"],docs:["Specifies a feature-policy for the iframe."]},alt:{name:"alt",type:"toggle",values:"boolean",els:["applet","area","img","input"],docs:["Alternative text in case an image can't be displayed."]},async:{name:"async",type:"normal",values:"string",els:["script"],docs:["Executes the script asynchronously."]},autoCapitalize:{name:"autocapitalize",type:"normal",els:!0,values:["off","none","on","sentences","words","characters"],docs:["Sets whether input is automatically capitalized when entered by user"]},autoComplete:{name:"autocomplete",type:"normal",values:["off","on","name","honorific-prefix","given-name","additional-name","family-name","honorific-suffix","nickname","email","username","new-password","current-password","one-time-code","organization-title","organization","street-address","country","country-name","postal-code","cc-name","cc-given-name","cc-additional-name","cc-family-name","cc-number","cc-exp","cc-exp-month","cc-exp-year","cc-csc","cc-type","transaction-currency","transaction-amount","language","bday","bday-day","bday-month","bday-year","sex","tel","tel-country-code","tel-national","tel-area-code","tel-local","tel-extension","impp","url","photo"],els:["form","input","select","textarea"],docs:["Indicates whether controls in this form can by default have their values automatically completed by the browser."]},autoFocus:{name:"autofocus",type:"toggle",values:"string",els:["button","input","keygen","select","textarea"],docs:["The element should be automatically focused after the page loaded."]},autoplay:{name:"autoplay",type:"toggle",values:"boolean",docs:["The audio or video should play as soon as possible."]},allowFullScreen:{name:"allowfullscreen",type:"toggle",values:"boolean",docs:[]},allowPaymentRequest:{name:"allowpaymentrequest",type:"toggle",values:"string",docs:[]},action:{name:"action",type:"normal",values:"string",els:["audio","video"],docs:[]},background:{name:"background",type:"normal",values:"string",els:["body","table","td","th"],docs:["Specifies the URL of an image file."]},bgColor:{name:"bgcolor",type:"normal",values:"string",els:["body","col","colgroup","marquee","table","tbody","tfoot","td","th","tr"],docs:["Background color of the element."]},border:{name:"border",type:"normal",values:"string",els:["img","object","table"],docs:["The border width."]},buffered:{name:"buffered",type:"normal",values:"string",els:["audio","video"],docs:["Contains the time range of already buffered media."]},capture:{name:"capture",type:"normal",values:["user","environment"],els:["input"],docs:["From the Media Capture specification, specifies a new file can be captured."]},challenge:{name:"challenge",type:"normal",values:"string",els:["keygen"],docs:["A challenge string that is submitted along with the public key."]},charSet:{name:"charset",type:"normal",values:"string",els:["meta","script"],docs:["Declares the character encoding of the page or script"]},checked:{name:"checked",type:"toggle",values:"string",els:["command","input"],docs:["Indicates whether the element should be checked on page load."]},cite:{name:"cite",type:"normal",values:"string",els:["blockquote","del","ins","q"],docs:["Contains a URI which points to the source of the quote or change."]},className:{name:"class",type:"normal",values:"string",els:!0,docs:["Often used with CSS to style elements with common properties."]},code:{name:"code",type:"normal",values:"string",els:["applet"],docs:["Specifies the URL of the applet's class file to be loaded and executed."]},codeBase:{name:"codebase",type:"normal",values:"string",els:["applet"],docs:["This attribute gives the absolute or relative URL of the directory where applets' .class files referenced by the code attribute are stored."]},color:{name:"color",type:"normal",values:"string",els:["font","hr"],docs:["This attribute sets the text color using either a named color or a color specified in the hexadecimal #RRGGBB format."]},cols:{name:"cols",type:"normal",values:"number",els:["textarea"],docs:["Defines the number of columns in a textarea."]},colSpan:{name:"colSpan",type:"normal",values:"string",els:["td","th"],docs:["The colspan attribute defines the number of columns a cell should span."]},content:{name:"content",type:"string",values:"string",els:["meta"],docs:["A value associated with http-equiv or name depending on the context."]},contentEditable:{name:"contenteditable",type:"normal",values:["true","false"],els:!0,docs:["Indicates whether the element's content is editable."]},contextMenu:{name:"contextmenu",type:"normal",values:"string",els:!0,docs:["Defines the ID of a ``<menu>`` element which will serve as the element's context menu."]},controls:{name:"controls",type:"toggle",values:"string",els:["audio","video"],docs:["Indicates whether the browser should show playback controls to the user."]},compact:{name:"compact",type:"toggle",values:"string",els:!0,docs:[]},coords:{name:"coords",type:"normal",values:"string",els:["area"],docs:["A set of values specifying the coordinates of the hot-spot region."]},crossOrigin:{name:"crossorigin",type:"normal",values:["use-credentials","anonymous"],els:["audio","img","link","script","video"],docs:["How the element handles cross-origin requests"]},csp:{name:"csp",type:"normal",values:"string",els:["iframe"],docs:["Specifies the Content Security Policy that an embedded document must agree to enforce upon itself."]},data:{name:"data",type:"normal",values:"string",els:["object"],docs:["Specifies the URL of the resource."]},dataSet:{name:"dataset",type:"normal",values:"string",els:["object"],docs:["Lets you attach custom attributes to an HTML element."]},dateTime:{name:"datetime",type:"normal",values:"string",els:["del","ins","time"],docs:["Indicates the date and time associated with the element."]},decoding:{name:"decoding",type:"normal",values:["sync","async","auto"],els:["img"],docs:["Indicates the preferred method to decode the image."]},def:{name:"default",type:"normal",values:"string",els:["track"],docs:["Indicates that the track should be enabled unless the user's preferences indicate something different."]},defer:{name:"defer",type:"normal",values:"string",els:["script"],docs:["Indicates that the script should be executed after the page has been parsed."]},dir:{name:"dir",type:"normal",values:["ltr","rtl","auto"],els:!0,docs:["Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)"]},dirName:{name:"dirname",type:"normal",values:"string",els:["input","textarea"],docs:[]},disabled:{name:"disabled",type:"toggle",values:"boolean",els:["button","command","fieldset","input","keygen","optgroup","option","select","textarea"],docs:["Indicates whether the user can interact with the element."]},download:{name:"download",type:"normal",values:"string",els:["a","area"],docs:["Indicates that the hyperlink is to be used for downloading a resource."]},draggable:{name:"draggable",type:"normal",values:["true","false"],els:!0,docs:["Defines whether the element can be dragged."]},encType:{name:"enctype",type:"normal",values:["application/x-www-form-urlencoded","multipart/form-data","text/plain"],els:["form"],docs:["Defines the content type of the form data when the method is POST."]},entryKeyHint:{name:"entrykeyhint",type:"normal",values:"string",els:["textarea"],docs:["The enterkeyhint specifies what action label (or icon) to present for the enter key on virtual keyboards. The attribute can be used with form controls (such as the value of textarea elements), or in elements in an editing host (e.g., using contenteditable attribute)."]},form:{name:"form",type:"normal",values:"string",els:["button","fieldset","input","keygen","label","meter","object","output","progress","select","textarea"],docs:["Indicates the form that is the owner of the element."]},formAction:{name:"formaction",type:"normal",values:"string",els:["button","input"],docs:["Indicates the action of the element, overriding the action defined in the <form>."]},formEncType:{name:"formenctype",type:"normal",values:"string",els:["button","input"],docs:['If the button/input is a submit button (type="submit"), this attribute sets the encoding type to use during form submission. If this attribute is specified, it overrides the enctype attribute of the button\'s form owner.']},formMethod:{name:"formmethod",type:"normal",values:"string",els:["button","input"],docs:['If the button/input is a submit button (type="submit"), this attribute sets the submission method to use during form submission (GET, POST, etc.). If this attribute is specified, it overrides the method attribute of the button\'s form owner.']},formNoValidate:{name:"formnovalidate",type:"normal",values:"string",els:["button","input"],docs:['If the button/input is a submit button (type="submit"), this boolean attribute specifies that the form is not to be validated when it is submitted. If this attribute is specified, it overrides the novalidate attribute of the button\'s form owner.']},formTarget:{name:"formtarget",type:"normal",values:"string",els:["_self","_blank","_parent","_top"],docs:["The formtarget attribute specifies a name or a keyword that indicates where to display the response that is received after submitting the form."]},isFor:{name:"for",type:"normal",values:"string",els:["label","output"],docs:["Describes elements which belongs to this one."]},headers:{name:"headers",type:"normal",values:"string",els:["td","th"],docs:["IDs of the ``<th>`` elements which applies to this element."]},height:{name:"height",type:"normal",values:"string",els:["canvas","embed","iframe","img","input","object","video"],docs:["Specifies the height of elements listed here. For all other elements, use the CSS height property."]},hidden:{name:"hidden",type:"toggle",values:"boolean",els:!0,docs:["Prevents rendering of given element, while keeping child elements, e.g. script elements, active."]},high:{name:"high",type:"normal",values:"string",els:["meter"],docs:["Indicates the lower bound of the upper range."]},href:{name:"href",type:"normal",values:"string",els:["a","area","base","link"],docs:["The URL of a linked resource."]},hrefLang:{name:"hreflang",type:"normal",values:"string",els:["a","area","link"],docs:["Specifies the language of the linked resource."]},httpEquiv:{name:"httpEquiv",type:"normal",values:["content-security-policy","content-type","default-style","x-ua-compatible","refresh"],els:["meta"],docs:["Defines a pragma directive."]},icon:{name:"icon",type:"normal",values:"string",els:["command"],docs:["Specifies a picture which represents the command."]},id:{name:"id",type:"normal",values:"string",els:!0,docs:["Often used with CSS to style a specific element. The value of this attribute must be unique."]},importance:{name:"importance",type:"normal",values:"string",els:["iframe","img","link","script"],docs:["Indicates the relative fetch priority for the resource."]},integrity:{name:"integrity",type:"normal",values:"string",els:["link","script"],docs:["Specifies a Subresource Integrity value that allows browsers to verify what they fetch."]},intrinsicSize:{name:"instrinsicsize",type:"normal",values:"string",els:["img"],docs:["This attribute tells the browser to ignore the actual intrinsic size of the image and pretend it's the size specified in the attribute."]},inputMode:{name:"inputmode",type:"normal",values:["none","text","decimal","numeric","tel","search","email","url"],els:["textarea","contenteditable"],docs:["Provides a hint as to the type of data that might be entered by the user while editing the element or its contents. The attribute can be used with form controls (such as the value of textarea elements), or in elements in an editing host (e.g., using contenteditable attribute)."]},isMap:{name:"ismap",type:"toggle",values:"boolean",els:["img"],docs:["Indicates that the image is part of a server-side image map."]},itemProp:{name:"itemprop",type:"normal",values:"string",els:!0,docs:[]},keyType:{name:"keytype",type:"normal",values:["RSA"],els:["keygen"],docs:["Specifies the type of key generated."]},kind:{name:"kind",type:"normal",values:["subtitles","captions","descriptions","chapters","metadata"],els:["track"],docs:["Specifies the kind of text track."]},label:{name:"label",type:"normal",values:"string",els:["optgroup","option","track"],docs:["Specifies a user-readable title of the element."]},lang:{name:"lang",type:"normal",values:"string",els:!0,docs:["Defines the language used in the element."]},language:{name:"language",type:"normal",values:"string",els:["script"],docs:["Defines the script language used in the element."]},loading:{name:"loading",type:"normal",values:["lazy","eager"],els:["img","iframe"],docs:['Indicates if the element should be loaded lazily (loading="lazy") or loaded immediately (loading="eager").']},list:{name:"list",type:"normal",values:"string",els:["input"],docs:["Identifies a list of pre-defined options to suggest to the user."]},loop:{name:"loop",type:"toggle",values:"boolean",els:["audio","bgsound","marquee","video"],docs:["Indicates whether the media should start playing from the start when it's finished."]},low:{name:"low",type:"normal",values:"string",els:["meter"],docs:["Indicates the upper bound of the lower range."]},manifest:{name:"manifest",type:"normal",values:"string",els:["html"],docs:["Specifies the URL of the document's cache manifest."]},max:{name:"max",type:"normal",values:"string",els:["input","meter","progress"],docs:["Indicates the maximum value allowed."]},maxLength:{name:"maxLength",type:"normal",values:"string",els:["input","textarea"],docs:["Defines the maximum number of characters allowed in the element."]},minLength:{name:"minLength",type:"normal",values:"string",els:["input","textarea"],docs:["Defines the minimum number of characters allowed in the element."]},media:{name:"media",type:"normal",values:"string",els:["a","area","link","source","style"],docs:["Specifies a hint of the media for which the linked resource was designed."]},method:{name:"method",type:"normal",values:["post","get","dialog"],els:["form"],docs:["Defines which HTTP method to use when submitting the form. Can be GET (default) or POST."]},min:{name:"min",type:"normal",values:"string",els:["input","meter"],docs:["Indicates the minimum value allowed."]},multiple:{name:"multiple",type:"toggle",values:"boolean",els:["input","select"],docs:["Indicates whether multiple values can be entered in an input of the type email or file."]},muted:{name:"muted",type:"toggle",values:"boolean",els:["audio","video"],docs:["Indicates whether the audio will be initially silenced on page load."]},name:{name:"name",type:"normal",values:"string",els:["button","form","fieldset","iframe","input","keygen","object","output","select","textarea","map","meta","param"],docs:["Name of the element. For example used by the server to identify the fields in form submits."]},noShade:{name:"noshade",type:"togge",values:"boolean",els:["hr"],docs:["The HTML ``<hr>`` noshade Attribute is the boolean value and used to specify the solid horizontal line instead of shaded lines."]},noValidate:{name:"novalidate",type:"normal",values:"string",els:["form"],docs:["This attribute indicates that the form shouldn't be validated when submitted."]},open:{name:"open",type:"toggle",values:"boolean",els:["details","dialog"],docs:["Indicates whether the contents are currently visible (in the case of a ``<details>`` element) or whether the dialog is active and can be interacted with (in the case of a ``<dialog>`` element)."]},optimum:{name:"optimum",type:"normal",values:"string",els:["meter"],docs:["Indicates the optimal numeric value."]},pattern:{name:"pattern",type:"normal",values:"string",els:["input"],docs:["Defines a regular expression which the element's value will be validated against."]},ping:{name:"ping",type:"normal",values:"string",els:["a","area"],docs:["The ping attribute specifies a space-separated list of URLs to be notified if a user follows the hyperlink."]},placeholder:{name:"placeholder",type:"normal",values:"string",els:["input","textarea"],docs:["Provides a hint to the user of what can be entered in the field."]},poster:{name:"poster",type:"normal",values:"string",els:["video"],docs:["A URL indicating a poster frame to show until the user plays or seeks."]},playsInline:{name:"playsinline",type:"toggle",values:"string",els:!0,docs:[]},preload:{name:"preload",type:"normal",values:"string",els:["audio","video"],docs:["Indicates whether the whole resource, parts of it or nothing should be preloaded."]},radioGroup:{name:"radiogroup",type:"normal",values:"string",els:["command"],docs:[]},readOnly:{name:"readonly",type:"toggle",values:"boolean",els:["input","textarea"],docs:["Indicates whether the element can be edited."]},referrerPolicy:{name:"referrerpolicy",type:"normal",values:["no-referrer","no-referrer-when-downgrade","origin","origin-when-cross-origin","same-origin","strict-origin","strict-origin-when-cross-origin","unsafe-url"],els:["a","area","iframe","img","link","script"],docs:["Specifies which referrer is sent when fetching the resource."]},rel:{name:"rel",type:"normal",values:["alternate","author","bookmark","canonical","dns-prefetch","external","help","icon","license","manifest","me","modulepreload","next","nofollow","noopener","noreferrer","opener","pingback","preconnect","prefetch","preload","prerender","prev","search","stylesheet","tag"],els:["a","area","link"],docs:["Specifies the relationship of the target object to the link object."]},required:{name:"required",type:"toggle",values:"boolean",els:["input","select","textarea"],docs:["Indicates whether this element is required to fill out or not."]},reversed:{name:"reversed",type:"toggle",values:"boolean",els:["ol"],docs:["Indicates whether the list should be displayed in a descending order instead of a ascending."]},role:{name:"role",type:"normal",values:"string",els:!0,docs:["Defines an explicit role for an element for use by assistive technologies."]},rows:{name:"rows",type:"normal",values:"number",els:["textarea"],docs:["Defines the number of rows in a text area."]},rowSpan:{name:"rowspan",type:"normal",values:"string",els:["td","th"],docs:["Defines the number of rows a table cell should span over."]},sandbox:{name:"sandbox",type:"normal",values:["allow-downloads-without-user-activation","allow-downloads","allow-forms","allow-modals","allow-orientation-lock","allow-pointer-lock","allow-popups","allow-popups-to-escape-sandbox","allow-presentation","allow-same-origin","allow-scripts","allow-storage-access-by-user-activation","allow-top-navigation","allow-top-navigation-by-user-activation"],els:["iframe"],docs:["Stops a document loaded in an iframe from using certain features (such as submitting forms or opening new windows)."]},scope:{name:"scope",type:"normal",values:["row","col","rowgroup","colgroup"],els:["th"],docs:["Defines the cells that the header test (defined in the th element) relates to."]},selected:{name:"selected",type:"toggle",values:"boolean",els:["option"],docs:["Defines a value which will be selected on page load."]},shape:{name:"shape",type:"normal",values:"string",els:["a","area"],docs:[]},size:{name:"size",type:"normal",values:"string",els:["input","select"],docs:["Defines the width of the element (in pixels). If the element's type attribute is text or password then it's the number of characters."]},sizes:{name:"sizes",type:"normal",values:"string",els:["link","img","source"],docs:[]},slot:{name:"slot",type:"normal",values:"string",els:!0,docs:["Assigns a slot in a shadow DOM shadow tree to an element."]},span:{name:"span",type:"normal",values:"string",els:["col","colgroup"],docs:[]},spellCheck:{name:"spellcheck",type:"normal",values:["true","false"],els:!0,docs:["Indicates whether spell checking is allowed for the element."]},src:{name:"src",type:"normal",values:"string",els:["audio","embed","iframe","img","input","script","source","track","video"],docs:["The URL of the embeddable content."]},srcDoc:{name:"srcdoc",type:"normal",values:"string",els:["iframe"],docs:[]},srcLang:{name:"srclang",type:"normal",values:"string",els:["track"],docs:[]},srcSet:{name:"srcset",type:"normal",values:"string",els:["img","source"],docs:["One or more responsive image candidates."]},start:{name:"start",type:"normal",values:"string",els:["ol"],docs:["Defines the first number if other than 1."]},step:{name:"step",type:"normal",values:"string",els:["input"],docs:[]},summary:{name:"summary",type:"normal",values:"string",els:["table"],docs:[]},tabIndex:{name:"tabindex",type:"normal",values:"string",els:!0,docs:["Overrides the browser's default tab order and follows the one specified instead."]},target:{name:"target",type:"normal",values:["_self","_blank","_parent","_top"],els:["a","area","base","form"],docs:["Specifies where to open the linked document (in the case of an ``<a>`` element) or where to display the response received (in the case of a ``<form>`` element)"]},title:{name:"title",type:"normal",values:"string",els:!0,docs:["Text to be displayed in a tooltip when hovering over the element."]},translate:{name:"translate",type:"normal",values:["yes","no"],els:!0,docs:["Specify whether an element's attribute values and the values of its Text node children are to be translated when the page is localized, or whether to leave them unchanged."]},type:{name:"type",type:"normal",values:"string",els:["button","input","command","embed","object","script","source","styles","menu","link"],docs:["Defines the type of the element."]},useMap:{name:"usemap",type:"normal",values:"string",els:["img","input","object"],docs:["Defines a default value which will be displayed in the element on page load."]},value:{name:"value",type:"normal",values:"string",els:["button","data","input","li","meter","option","progress","param"],docs:[]},width:{name:"width",type:"normal",values:"string",els:["canvas","embed","iframe","img","input","object","video"],docs:["For the elements listed here, this establishes the element's width."]},wrap:{name:"wrap",type:"normal",values:["hard","soft","off"],els:["textarea"],docs:["Indicates whether the text should be wrapped."]}}},2809:e=>{e.exports={accentHeight:{name:"accent-height",type:"normal",values:"string",docs:["The accent-height attribute defines the distance from the origin to the top of accent characters, measured by a distance within the font coordinate system.","@deprecated"]},accumulate:{name:"accumulate",type:"normal",values:["sum","none"],els:["animate","animateColor","animateMotion","animateTransform"],docs:["The accumulate attribute controls whether or not an animation is cumulative."]},additive:{name:"additive",type:"normal",values:["sum","replace"],els:["animate","animateColor","animateMotion","animateTransform"],docs:["The additive attribute controls whether or not an animation is additive."]},alignmentBaseline:{name:"alignment-baseline",type:"normal",values:["auto","baseline","before-edge","text-before-edge","middle","central","after-edge","text-after-edge","ideographic","alphabetic","hanging","mathematical","top","center","bottom"],els:["tspan","tref","altGlyph","textPath"],docs:[,"The alignment-baseline attribute specifies how an object is aligned with respect to its parent. This property specifies which baseline of this element is to be aligned with the corresponding baseline of the parent. For example, this allows alphabetic baselines in Roman text to stay aligned across font size changes. It defaults to the baseline with the same name as the computed value of the alignment-baseline property."]},alphabetic:{name:"alphabetic",type:"normal",values:"string",els:["font-face"],docs:["The alphabetic attribute defines the lower baseline of a font. It has the same syntax and semantics as the baseline descriptor within an @font-face.","@deprecated"]},amplitude:{name:"amplitude",type:"number",values:[1],els:["feFuncA","feFuncB","feFuncG","feFuncR"],docs:["The amplitude attribute controls the amplitude of the gamma function of a component transfer element when its type attribute is gamma."]},arabicForm:{name:"arabic-form",type:"normal",values:"string",els:["glyph"],docs:["The arabic-form attribute indicates which of the four possible forms an Arabic glyph represents.","@deprecated"]},ascent:{name:"ascent",type:"normal",values:"string",els:["font-face"],docs:["The ascent attribute defines the maximum unaccented height of the font within the font coordinate system.","@deprecated"]},attributeName:{name:"attributeName",type:"normal",values:"string",els:["animate","animateColor","animateTransform","set"],docs:["The attributeName attribute indicates the name of the CSS property or attribute of the target element that is going to be changed during an animation."]},attributeType:{name:"attributeType",type:"normal",values:"string",els:["animate","animateColor","animateTransform","set"],docs:["The attributeType attribute specifies the namespace in which the target attribute and its associated values are defined.","@deprecated"]},azimuth:{name:"azimuth",type:"normal",values:"number",els:["feDistantLight"],docs:["The azimuth attribute specifies the direction angle for the light source on the XY plane (clockwise), in degrees from the x axis."]},baseFrequency:{name:"baseFrequency",type:"normal",values:"string",els:["feTurbulence"],docs:["The baseFrequency attribute represents the base frequency parameter for the noise function of the ``<feTurbulence>`` filter primitive."]},baselineShift:{name:"baseline-shift",type:"normal",values:["sub","super"],els:["altGlyph","textPath","tref","tspan"],docs:["The baseline-shift attribute allows repositioning of the dominant-baseline relative to the dominant-baseline of the parent text content element. The shifted object might be a sub- or superscript."]},baseProfile:{name:"baseProfile",type:"normal",values:"string",els:["svg"],docs:["The baseProfile attribute describes the minimum SVG language profile that the author believes is necessary to correctly render the content. The attribute does not specify any processing restrictions; It can be considered metadata.","@deprecated"]},bbox:{name:"bbox",type:"normal",values:"string",els:["font-face"],docs:["The bbox attribute defines the maximal bounding box of a font.","@deprecated"]},begin:{name:"begin",type:"normal",values:"string",els:["animate","animateColor","animateMotion","animateTransform","discard","set"],docs:["The begin attribute defines when an animation should begin or when an element should be discarded."]},bias:{name:"bias",type:"normal",values:"string",els:["feConvolveMatrix"],docs:["The bias attribute shifts the range of the filter. After applying the kernelMatrix of the ``<feConvolveMatrix>`` element to the input image to yield a number and applied the divisor attribute, the bias attribute is added to each component. This allows representation of values that would otherwise be clamped to 0 or 1."]},by:{name:"by",type:"normal",values:"string",els:["animate","animateColor","animateMotion","animateTransform"],docs:["The by attribute specifies a relative offset value for an attribute that will be modified during an animation."]},calcMode:{name:"calcMode",type:"normal",values:"string",docs:["The calcMode attribute specifies the interpolation mode for the animation."]},capHeight:{name:"cap-height",type:"normal",values:["discrete","linear","paced","spline"],els:["animate","animateColor","animateMotion","animateTransform"],docs:["The cap-height attribute defines the height of uppercase glyphs of the font within the font coordinate system.","@deprecated"]},className:{name:"class",type:"normal",values:"string",els:!0,docs:["Often used with CSS to style elements with common properties."]},clip:{name:"clip",type:"normal",values:"string",els:["font-face"],docs:["The clip attribute is a presentation attribute defining the visible region of an element.","@deprecated"]},clipPathUnits:{name:"clipPathUnits",type:"normal",values:["userSpaceOnUse","objectBoundingBox"],els:["clipPath"],docs:["The clipPathUnits attribute indicates which coordinate system to use for the contents of the ``<clipPath>`` element."]},clipPath:{name:"clip-path",type:"normal",values:"string",els:["a","circle","clipPath","ellipse","g","glyph","image","line","marker","mask","path","pattern","polygon","polyline","rect","svg","symbol","text","use"],docs:["The clip-path presentation attribute defines or associates a clipping path with the element it is related to."]},clipRule:{name:"clip-rule",type:"normal",values:["nonzero","evenodd"],els:[],docs:["The clip-rule attribute only applies to graphics elements that are contained within a ``<clipPath>`` element. The clip-rule attribute basically works as the fill-rule attribute, except that it applies to ``<clipPath>`` definitions."]},color:{name:"color",type:"normal",values:"Color",els:[],docs:["The color attribute is used to provide a potential indirect value, currentcolor, for the fill, stroke, stop-color, flood-color, and lighting-color attributes."]},colorInterpolation:{name:"color-interpolation",type:"normal",values:"string",docs:["The color-interpolation attribute specifies the color space for gradient interpolations, color animations, and alpha compositing."]},colorInterpolationFilters:{name:"color-interpolation-filters",type:"normal",values:"string",docs:["The color-interpolation-filters attribute specifies the color space for imaging operations performed via filter effects."]},colorProfile:{name:"color-profile",type:"normal",values:"string",docs:["The color-profile attribute is used to define which color profile a raster image included through the ``<image>`` element should use."]},colorRendering:{name:"color-rendering",type:"normal",values:"string",els:[],docs:[]},contentScriptType:{name:"contentScriptType",type:"normal",values:"string",docs:["The contentScriptType attribute specifies the default scripting language for the given document fragment on the ``<svg>`` element."]},contentStyleType:{name:"contentStyleType",type:"normal",values:"string",docs:["The contentStyleType attribute specifies the style sheet language for the given document fragment on the ``<svg>`` element.","@deprecated"]},crossorigin:{name:"crossorigin",type:"normal",values:"string",docs:["The crossorigin attribute, valid on the ``<image>`` element, provides support for CORS, defining how the element handles crossorigin requests, thereby enabling the configuration of the CORS requests for the element's fetched data. It is a CORS settings attribute."]},cursor:{name:"cursor",type:"normal",values:"string",docs:["The cursor attribute specifies the mouse cursor displayed when the mouse pointer is over an element."]},cx:{name:"cx",type:"normal",values:"string",docs:["The cx attribute define the x-axis coordinate of a center point."]},cy:{name:"cy",type:"normal",values:"string",docs:["The cy attribute define the y-axis coordinate of a center point."]},d:{name:"d",type:"normal",values:"string",els:[],docs:["The d attribute defines a path to be drawn."]},decelerate:{name:"decelerate",type:"normal",values:"string",els:[],docs:[]},descent:{name:"descent",type:"normal",values:"string",els:[],docs:["The descent attribute defines the maximum unaccented depth of the font.","@deprecated"]},diffuseConstant:{name:"diffuseConstant",type:"normal",values:"string",els:[],docs:["The diffuseConstant attribute represents the kd value in the Phong lighting model. In SVG, this can be any non-negative number."]},direction:{name:"direction",type:"normal",values:"string",els:[],docs:["The direction attribute specifies the inline-base direction of a ``<text>`` or ``<tspan>`` element. It defines the start and end points of a line of text as used by the text-anchor and inline-size properties. It also may affect the direction in which characters are positioned if the unicode-bidi property's value is either embed or bidi-override."]},display:{name:"display",type:"normal",values:"string",els:[],docs:["The display attribute lets you control the rendering of graphical or container elements."]},divisor:{name:"divisor",type:"normal",values:"string",els:[],docs:["The divisor attribute specifies the value by which the resulting number of applying the kernelMatrix of a ``<feConvolveMatrix>`` element to the input image color value is divided to yield the destination color value."]},dominantBaseline:{name:"dominant-baseline",type:"normal",values:"string",els:[],docs:["The dominant-baseline attribute specifies the dominant baseline, which is the baseline used to align the box's text and inline-level contents. It also indicates the default alignment baseline of any boxes participating in baseline alignment in the box's alignment context."]},dur:{name:"dur",type:"normal",values:"string",els:[],docs:["The dur attribute indicates the simple duration of an animation."]},dx:{name:"dx",type:"normal",values:"string",els:[],docs:["The dx attribute indicates a shift along the x-axis on the position of an element or its content."]},dy:{name:"dy",type:"normal",values:"string",els:[],docs:["The dy attribute indicates a shift along the y-axis on the position of an element or its content."]},edgeMode:{name:"edgeMode",type:"normal",values:"string",els:[],docs:["The edgeMode attribute determines how to extend the input image as necessary with color values so that the matrix operations can be applied when the kernel is positioned at or near the edge of the input image."]},elevation:{name:"elevation",type:"normal",values:"string",els:[],docs:["The elevation attribute specifies the direction angle for the light source from the XY plane towards the Z-axis, in degrees. Note that the positive Z-axis points towards the viewer of the content."]},enableBackground:{name:"enable-background",type:"normal",values:"string",els:[],docs:["The enable-background attribute specifies how the accumulation of the background image is managed.","@deprecated"]},end:{name:"end",type:"normal",values:"string",els:[],docs:["The end attribute defines an end value for the animation that can constrain the active duration."]},exponent:{name:"exponent",type:"normal",values:"string",els:[],docs:["The exponent attribute defines the exponent of the gamma function."]},fill:{name:"fill",type:"normal",values:"string",els:[],docs:["The fill attribute has two different meanings. For shapes and text it's a presentation attribute that defines the color (or any SVG paint servers like gradients or patterns) used to paint the element; for animation it defines the final state of the animation."]},fillOpacity:{name:"fill-opacity",type:"normal",values:"string",els:[],docs:["The fill-opacity attribute is a presentation attribute defining the opacity of the paint server (color, gradient, pattern, etc.) applied to a shape."]},fillRule:{name:"fill-rule",type:"normal",values:"string",els:[],docs:["The fill-rule attribute is a presentation attribute defining the algorithm to use to determine the inside part of a shape."]},filter:{name:"filter",type:"normal",values:"string",els:[],docs:["The filter attribute specifies the filter effects defined by the ``<filter>`` element that shall be applied to its element."]},filterRes:{name:"filterRes",type:"normal",values:"string",els:[],docs:["The filterRes attribute indicates the width and height of the intermediate images in pixels of a filter primitive.","@deprecated"]},filterUnits:{name:"filterUnits",type:"normal",values:"string",els:[],docs:["The filterUnits attribute defines the coordinate system for the attributes x, y, width and height."]},floodColor:{name:"flood-color",type:"normal",values:"string",els:[],docs:["The flood-color attribute indicates what color to use to flood the current filter primitive subregion."]},floodOpacity:{name:"flood-opacity",type:"normal",values:"string",els:[],docs:["The flood-opacity attribute indicates the opacity value to use across the current filter primitive subregion."]},fontFamily:{name:"font-family",type:"normal",values:"string",els:[],docs:["The font-family attribute indicates which font family will be used to render the text, specified as a prioritized list of font family names and/or generic family names."]},fontSize:{name:"font-size",type:"normal",values:"string",els:[],docs:["The font-size attribute refers to the size of the font from baseline to baseline when multiple lines of text are set solid in a multiline layout environment."]},fontSizeAdjust:{name:"font-size-adjust",type:"normal",values:"string",els:[],docs:["The font-size-adjust attribute allows authors to specify an aspect value for an element that will preserve the x-height of the first choice font in a substitute font."]},fontStretch:{name:"font-stretch",type:"normal",values:"string",els:[],docs:["The font-stretch attribute indicates the desired amount of condensing or expansion in the glyphs used to render the text."]},fontStyle:{name:"font-style",type:"normal",values:"string",els:[],docs:["The font-style attribute specifies whether the text is to be rendered using a normal, italic, or oblique face."]},fontVariant:{name:"font-variant",type:"normal",values:"string",els:[],docs:["The font-variant attribute indicates whether the text is to be rendered using variations of the font's glyphs."]},fontWeight:{name:"font-weight",type:"normal",values:"string",els:[],docs:["The font-weight attribute refers to the boldness or lightness of the glyphs used to render the text, relative to other fonts in the same font family."]},format:{name:"format",type:"normal",values:"string",els:[],docs:["The format attribute indicates the format of the given font.","@deprecated"]},from:{name:"from",type:"normal",values:"string",els:[],docs:["The from attribute indicates the initial value of the attribute that will be modified during the animation."]},fr:{name:"fr",type:"normal",values:"string",els:[],docs:["The fr attribute defines the radius of the focal point for the radial gradient."]},fx:{name:"fx",type:"normal",values:"string",els:[],docs:["The fx attribute defines the x-axis coordinate of the focal point for a radial gradient."]},fy:{name:"fy",type:"normal",values:"string",els:[],docs:["The fy attribute defines the y-axis coordinate of the focal point for a radial gradient."]},g1:{name:"g1",type:"normal",values:"string",els:[],docs:[]},g2:{name:"g2",type:"normal",values:"string",els:[],docs:[]},glyphName:{name:"glyph-name",type:"normal",values:"string",els:[],docs:[]},glyphOrientationHorizontal:{name:"glyph-orientation-horizontal",type:"normal",values:"string",els:[],docs:[]},glyphOrientationVertical:{name:"glyph-orientation-vertical",type:"normal",values:"string",els:[],docs:[]},glyphRef:{name:"glyphRef",type:"normal",values:"string",els:[],docs:[]},gradientTransform:{name:"gradientTransform",type:"normal",values:"string",els:[],docs:[]},gradientUnits:{name:"gradientUnits",type:"normal",values:"string",els:[],docs:[]},hanging:{name:"hanging",type:"normal",values:"string",els:[],docs:[]},height:{name:"height",type:"normal",values:"string",els:[],docs:[]},href:{name:"href",type:"normal",values:"string",els:[],docs:[]},hreflang:{name:"hreflang",type:"normal",values:"string",els:[],docs:[]},horizAdvX:{name:"horiz-adv-x",type:"normal",values:"string",els:[],docs:[]},horizOriginX:{name:"horiz-origin-x",type:"normal",values:"string",els:[],docs:[]},id:{name:"id",type:"normal",values:"string",els:[],docs:[]},ideographic:{name:"ideographic",type:"normal",values:"string",els:[],docs:[]},imageRendering:{name:"image-rendering",type:"normal",values:"string",els:[],docs:[]},in:{name:"in",type:"normal",values:"string",els:[],docs:[]},in2:{name:"in2",type:"normal",values:"string",els:[],docs:[]},intercept:{name:"intercept",type:"normal",values:"string",els:[],docs:[]},k:{name:"k",type:"normal",values:"string",els:[],docs:[]},k1:{name:"k1",type:"normal",values:"string",els:[],docs:[]},k2:{name:"k2",type:"normal",values:"string",els:[],docs:[]},k3:{name:"k3",type:"normal",values:"string",els:[],docs:[]},k4:{name:"k4",type:"normal",values:"string",els:[],docs:[]},kernelMatrix:{name:"kernelMatrix",type:"normal",values:"string",els:[],docs:[]},kernelUnitLength:{name:"kernelUnitLength",type:"normal",values:"string",els:[],docs:[]},kerning:{name:"kerning",type:"normal",values:"string",els:[],docs:[]},keyPoints:{name:"keyPoints",type:"normal",values:"string",els:[],docs:[]},keySplines:{name:"keySplines",type:"normal",values:"string",els:[],docs:[]},keyTimes:{name:"keyTimes",type:"normal",values:"string",els:[],docs:[]},lang:{name:"lang",type:"normal",values:"string",els:[],docs:[]},lengthAdjust:{name:"lengthAdjust",type:"normal",values:"string",els:[],docs:[]},letterSpacing:{name:"letter-spacing",type:"normal",values:"string",els:[],docs:[]},lightingColor:{name:"lighting-color",type:"normal",values:"string",els:[],docs:[]},limitingConeAngle:{name:"limitingConeAngle",type:"normal",values:"string",els:[],docs:[]},local:{name:"local",type:"normal",values:"string",els:[],docs:[]},markerEnd:{name:"marker-end",type:"normal",values:"string",els:[],docs:[]},markerMid:{name:"marker-mid",type:"normal",values:"string",els:[],docs:[]},markerStart:{name:"marker-start",type:"normal",values:"string",els:[],docs:[]},markerHeight:{name:"markerHeight",type:"normal",values:"string",els:[],docs:[]},markerUnits:{name:"markerUnits",type:"normal",values:"string",els:[],docs:[]},markerWidth:{name:"markerWidth",type:"normal",values:"string",els:[],docs:[]},mask:{name:"mask",type:"normal",values:"string",els:[],docs:[]},maskContentUnits:{name:"maskContentUnits",type:"normal",values:"string",els:[],docs:[]},maskUnits:{name:"maskUnits",type:"normal",values:"string",els:[],docs:[]},mathematical:{name:"mathematical",type:"normal",values:"string",els:[],docs:[]},max:{name:"max",type:"normal",values:"string",els:[],docs:[]},media:{name:"media",type:"normal",values:"string",els:[],docs:[]},method:{name:"method",type:"normal",values:"string",els:[],docs:[]},min:{name:"min",type:"normal",values:"string",els:[],docs:[]},mode:{name:"mode",type:"normal",values:"string",els:[],docs:[]},name:{name:"name",type:"normal",values:"string",els:[],docs:[]},numOctaves:{name:"numOctaves",type:"normal",values:"string",els:[],docs:[]},offset:{name:"offset",type:"normal",values:"string",els:[],docs:[]},opacity:{name:"opacity",type:"normal",values:"string",els:[],docs:[]},operator:{name:"operator",type:"normal",values:"string",els:[],docs:[]},order:{name:"order",type:"normal",values:"string",els:[],docs:[]},orient:{name:"orient",type:"normal",values:"string",els:[],docs:[]},orientation:{name:"orientation",type:"normal",values:"string",els:[],docs:[]},origin:{name:"origin",type:"normal",values:"string",els:[],docs:[]},overflow:{name:"overflow",type:"normal",values:"string",els:[],docs:[]},overlinePosition:{name:"overline-position",type:"normal",values:"string",els:[],docs:[]},overlineThickness:{name:"overline-thickness",type:"normal",values:"string",els:[],docs:[]},panose1:{name:"panose-1",type:"normal",values:"string",els:[],docs:[]},paintOrder:{name:"paint-order",type:"normal",values:"string",els:[],docs:[]},path:{name:"path",type:"normal",values:"string",els:[],docs:[]},pathLength:{name:"pathLength",type:"normal",values:"string",els:[],docs:[]},patternContentUnits:{name:"patternContentUnits",type:"normal",values:"string",els:[],docs:[]},patternTransform:{name:"patternTransform",type:"normal",values:"string",els:[],docs:[]},patternUnits:{name:"patternUnits",type:"normal",values:"string",els:[],docs:[]},ping:{name:"ping",type:"normal",values:"string",els:[],docs:[]},pointerEvents:{name:"pointer-events",type:"normal",values:"string",els:[],docs:[]},points:{name:"points",type:"normal",values:"string",els:[],docs:[]},pointsAtX:{name:"pointsAtX",type:"normal",values:"string",els:[],docs:[]},pointsAtY:{name:"pointsAtY",type:"normal",values:"string",els:[],docs:[]},pointsAtZ:{name:"pointsAtZ",type:"normal",values:"string",els:[],docs:[]},preserveAlpha:{name:"preserveAlpha",type:"normal",values:"string",els:[],docs:[]},preserveAspectRatio:{name:"preserveAspectRatio",type:"normal",values:"string",els:[],docs:[]},primitiveUnits:{name:"primitiveUnits",type:"normal",values:"string",els:[],docs:[]},r:{name:"r",type:"normal",values:"string",els:[],docs:[]},radius:{name:"radius",type:"normal",values:"string",els:[],docs:[]},referrerPolicy:{name:"referrerPolicy",type:"normal",values:"string",els:[],docs:[]},refX:{name:"refX",type:"normal",values:"string",els:[],docs:[]},refY:{name:"refY",type:"normal",values:"string",els:[],docs:[]},rel:{name:"rel",type:"normal",values:"string",els:[],docs:[]},renderingIntent:{name:"rendering-intent",type:"normal",values:"string",els:[],docs:[]},repeatCount:{name:"repeatCount",type:"normal",values:"string",els:[],docs:[]},repeatDur:{name:"repeatDur",type:"normal",values:"string",els:[],docs:[]},requiredExtensions:{name:"requiredExtensions",type:"normal",values:"string",els:[],docs:[]},requiredFeatures:{name:"requiredFeatures",type:"normal",values:"string",els:[],docs:[]},restart:{name:"restart",type:"normal",values:"string",els:[],docs:[]},result:{name:"result",type:"normal",values:"string",els:[],docs:[]},rotate:{name:"rotate",type:"normal",values:"string",els:[],docs:[]},rx:{name:"rx",type:"normal",values:"string",els:[],docs:[]},ry:{name:"ry",type:"normal",values:"string",els:[],docs:[]},scale:{name:"scale",type:"normal",values:"string",els:[],docs:[]},seed:{name:"seed",type:"normal",values:"string",els:[],docs:[]},shapeRendering:{name:"shape-rendering",type:"normal",values:"string",els:[],docs:[]},slope:{name:"slope",type:"normal",values:"string",els:[],docs:[]},spacing:{name:"spacing",type:"normal",values:"string",els:[],docs:[]},specularConstant:{name:"specularConstant",type:"normal",values:"string",els:[],docs:[]},specularExponent:{name:"specularExponent",type:"normal",values:"string",els:[],docs:[]},speed:{name:"speed",type:"normal",values:"string",els:[],docs:[]},spreadMethod:{name:"spreadMethod",type:"normal",values:"string",els:[],docs:[]},startOffset:{name:"startOffset",type:"normal",values:"string",els:[],docs:[]},stdDeviation:{name:"stdDeviation",type:"normal",values:"string",els:[],docs:[]},stemh:{name:"stemh",type:"normal",values:"string",els:[],docs:[]},stemv:{name:"stemv",type:"normal",values:"string",els:[],docs:[]},stitchTiles:{name:"stitchTiles",type:"normal",values:"string",els:[],docs:[]},stopColor:{name:"stop-color",type:"normal",values:"string",els:[],docs:[]},stopOpacity:{name:"stop-opacity",type:"normal",values:"string",els:[],docs:[]},strikethroughPosition:{name:"strikethrough-position",type:"normal",values:"string",els:[],docs:[]},strikethroughThickness:{name:"strikethrough-thickness",type:"normal",values:"string",els:[],docs:[]},string:{name:"string",type:"normal",values:"string",els:[],docs:[]},stroke:{name:"stroke",type:"normal",values:"string",els:[],docs:[]},strokeDasharray:{name:"stroke-dasharray",type:"normal",values:"string",els:[],docs:[]},strokeDashoffset:{name:"stroke-dashoffset",type:"normal",values:"string",els:[],docs:[]},strokeLinecap:{name:"stroke-linecap",type:"normal",values:"string",els:[],docs:[]},strokeLinejoin:{name:"stroke-linejoin",type:"normal",values:"string",els:[],docs:[]},strokeMiterlimit:{name:"stroke-miterlimit",type:"normal",values:"string",els:[],docs:[]},strokeOpacity:{name:"stroke-opacity",type:"normal",values:"string",els:[],docs:[]},strokeWidth:{name:"stroke-width",type:"normal",values:"string",els:[],docs:[]},surfaceScale:{name:"surfaceScale",type:"normal",values:"string",els:[],docs:[]},systemLanguage:{name:"systemLanguage",type:"normal",values:"string",els:[],docs:[]},tabindex:{name:"tabindex",type:"normal",values:"string",els:[],docs:[]},tableValues:{name:"tableValues",type:"normal",values:"string",els:[],docs:[]},target:{name:"target",type:"normal",values:"string",els:[],docs:[]},targetX:{name:"targetX",type:"normal",values:"string",els:[],docs:[]},targetY:{name:"targetY",type:"normal",values:"string",els:[],docs:[]},textAnchor:{name:"text-anchor",type:"normal",values:"string",els:[],docs:[]},textDecoration:{name:"text-decoration",type:"normal",values:"string",els:[],docs:[]},textRendering:{name:"text-rendering",type:"normal",values:"string",els:[],docs:[]},textLength:{name:"textLength",type:"normal",values:"string",els:[],docs:[]},to:{name:"to",type:"normal",values:"string",els:[],docs:[]},transform:{name:"transform",type:"normal",values:"string",els:[],docs:[]},transformOrigin:{name:"transform-origin",type:"normal",values:"string",els:[],docs:[]},type:{name:"type",type:"normal",values:"string",els:[],docs:[]},u1:{name:"u1",type:"normal",values:"string",els:[],docs:[]},u2:{name:"u2",type:"normal",values:"string",els:[],docs:[]},underlinePosition:{name:"underline-position",type:"normal",values:"string",els:[],docs:[]},underlineThickness:{name:"underline-thickness",type:"normal",values:"string",els:[],docs:[]},unicode:{name:"unicode",type:"normal",values:"string",els:[],docs:[]},unicodeBidi:{name:"unicode-bidi",type:"normal",values:"string",els:[],docs:[]},unicodeRange:{name:"unicode-range",type:"normal",values:"string",els:[],docs:[]},unitsPerEm:{name:"units-per-em",type:"normal",values:"string",els:[],docs:[]},vAlphabetic:{name:"v-alphabetic",type:"normal",values:"string",els:[],docs:[]},vHanging:{name:"v-hanging",type:"normal",values:"string",els:[],docs:[]},vIdeographic:{name:"v-ideographic",type:"normal",values:"string",els:[],docs:[]},vMathematical:{name:"v-mathematical",type:"normal",values:"string",els:[],docs:[]},values:{name:"values",type:"normal",values:"string",els:[],docs:[]},vectorEffect:{name:"vector-effect",type:"normal",values:"string",els:[],docs:[]},version:{name:"version",type:"normal",values:"string",els:[],docs:[]},vertAdvY:{name:"vert-adv-y",type:"normal",values:"string",els:[],docs:[]},vertOriginX:{name:"vert-origin-x",type:"normal",values:"string",els:[],docs:[]},vertOriginY:{name:"vert-origin-y",type:"normal",values:"string",els:[],docs:[]},viewBox:{name:"viewBox",type:"normal",values:"string",els:[],docs:[]},viewTarget:{name:"viewTarget",type:"normal",values:"string",els:[],docs:[]},visibility:{name:"visibility",type:"normal",values:"string",els:[],docs:[]},width:{name:"width",type:"normal",values:"string",els:[],docs:[]},widths:{name:"widths",type:"normal",values:"string",els:[],docs:[]},wordSpacing:{name:"word-spacing",type:"normal",values:"string",els:[],docs:[]},writingMode:{name:"writing-mode",type:"normal",values:"string",els:[],docs:[]},x:{name:"x",type:"normal",values:"string",els:[],docs:[]},xHeight:{name:"x-height",type:"normal",values:"string",els:[],docs:[]},x1:{name:"x1",type:"normal",values:"string",els:[],docs:[]},x2:{name:"x2",type:"normal",values:"string",els:[],docs:[]},xChannelSelector:{name:"xChannelSelector",type:"normal",values:"string",els:[],docs:[]},xlinkActuate:{name:"xlink:actuate",type:"normal",values:"string",els:[],docs:[]},xlinkArcrole:{name:"xlink:arcrole",type:"normal",values:"string",els:[],docs:[]},xLinkHref:{name:"xlink:href",type:"normal",values:"string",els:[],docs:[]},xlinkRole:{name:"xlink:role",type:"normal",values:"string",els:[],docs:[]},xlinkShow:{name:"xlink:show",type:"normal",values:"string",els:[],docs:[]},xlinkTitle:{name:"xlink:title",type:"normal",values:"string",els:[],docs:[]},xlinkType:{name:"xlink:type",type:"normal",values:"string",els:[],docs:[]},xmlBase:{name:"xml:base",type:"normal",values:"string",els:[],docs:[]},xmlLang:{name:"xml:lang",type:"normal",values:"string",els:[],docs:[]},xmlSpace:{name:"xml:space",type:"normal",values:"string",els:[],docs:[]},y:{name:"y",type:"normal",values:"string",els:[],docs:[]},y1:{name:"y1",type:"normal",values:"string",els:[],docs:[]},y2:{name:"y2",type:"normal",values:"string",els:[],docs:[]},yChannelSelector:{name:"yChannelSelector",type:"normal",values:"string",els:[],docs:[]},z:{name:"z",type:"normal",values:"string",els:[],docs:[]},zoomAndPan:{name:"zoomAndPan",type:"normal",values:"string",els:[],docs:[]},autoReverse:{name:"autoReverse",type:"normal",values:"string",els:[],docs:[]},accelerate:{name:"accelerate",type:"normal",values:"string",els:[],docs:[]}}},1317:(e,t,s)=>{const{get:n,is:r,isToggle:o}=s(8678),{get:a,is:i}=s(302),l=s(2304),{Console:c,Renderer:d}=s(8221),{renderValue:p}=s(5984),{ELEMENT_TYPE_TEXT_NODE:u}=s(9085),{HTML_CONTAINER:m,HTML_NS:h}=s(3307);e.exports=class extends d{constructor(e,t){super(e,t),this.styler=new l}setElementEvent(e,t,s){s[e]=s=>this.orchestrator.batchCallback((()=>t(s)),e)}transformUid(e){const t=function(e){const t=[..."abcdefghijklmnopqrstuvwxyz-_0123456789"],s=t.length,n=[...e].reduce(((e,t)=>e+t.charCodeAt()),0);return[...e].map(((e,r)=>(e=>{const n=t[e%s];return r%3==0&&0!=r?n.toUpperCase():n})(e.charCodeAt()+n+r))).join("")}(e);return t}resolveClassName(e){if(e.style&&(e.style.scoped||e.style.className)){let t=e.style.className||"";e.style.scoped&&(t&&(t+="-"),t+=`_${this.transformUid(e.uid)}`),e.attributes.className?e.attributes.className+=" ":e.attributes.className="",e.attributes.className=e.attributes.className+t,e.style.className=t}}isExternalStyleSheet(e){return e&&Object.keys(e).filter((e=>"inline"!=e)).length>0}flattenStyle(e){const t=[];return Array.isArray(e.children)&&e.children.forEach((e=>{t.push(...this.flattenStyle(e))})),this.resolveClassName(e),e.style&&this.isExternalStyleSheet(e.style)&&(e.style.className?t.push(e.style):c.warn("CSS: no className detected and therefore style will be ignored")),t}reduceChildrenToInnerHTML(e){return e.children.reduce(((e,t)=>e+t.children.toString()),"")}useRendererCreateInstance(e){if(e.elementType===u)return document.createTextNode(e.children);let t=h;return e.rendererOptions&&e.rendererOptions.ns&&(t=e.rendererOptions.ns),document.createElementNS(t,e.elementType)}useRendererUpdateText(e,t){e.instance.data=t.children}useRendererIsAttribute(e){return r(e)}useRendererIsEvent(e){return i(e)}useRendererAddEvent(e,t,s){const n=a(e);n&&(this.setElementEvent(n.on,t,s.instance),n.handler&&n.handler(s.instance))}useRendererItemInTree(e){return document.contains(e.instance)}useRendererInjectAttribute(e,t,s){if("dataSet"==e)for(let e in t)s.dataset[e]=t[e];else o(e)?s.toggleAttribute(n(e),1==t):s.setAttribute(n(e),t)}useRendererInjectStyle(e,t){if(e&&e.inline)for(let s in e.inline)t.style[s]=p(e.inline[s],s)}useRendererSetAttribute(e,t,s){const r=s.instance;if("dataSet"===e){for(let e in r.dataset)t[e]!==r.dataset[e]&&(r.dataset[e]=t[e]);for(let e in t)void 0===r.dataset[e]&&(r.dataset[e]=t[e])}else if(o(e))r.toggleAttribute(n(e),1==t);else{r.setAttribute(n(e),t);try{r[n(e)]=t}catch(e){}}}useRendererUpdateStyle(e,t){let s={},n={};e.style&&e.style.inline&&(s=e.style.inline),t.style&&t.style.inline&&(n=t.style.inline);const r={...s,...n};for(let t in r)e.instance.style[t]=null!=n[t]?p(r[t],t):""}useRendererInjectEvent(e,t,s){const n=a(e);n&&this.setElementEvent(n.on,t,s)}useRendererInjectChild(e,t){t.append(this.renderInstance(e))}useRendererClean(){}useRendererRenderTree(){const e=this.renderInstance(this.current);this.root.append(e)}useRendererRemoveAttribute(e,t){t.removeAttribute(e),t[e]=""}useRendererOnTreePrepared(e){const t=this.flattenStyle(e);this.styler.update(t)}useRendererAddElement(e,t,s){const n=t.instance;if("number"==typeof s&&n.childNodes.length>s){const t=e.parent.instance,n=t.childNodes.item(s);t.insertBefore(this.renderInstance(e),n)}else n.append(this.renderInstance(e))}useRendererChangeElementPosition(e,t){e.parent.instance.insertBefore(e.instance,e.parent.instance.children[t])}useRendererGetElementPosition(e){return Array.from(e.instance.parentElement.children).indexOf(e.instance)}useRendererReplaceElement(e,t){e.instance.replaceWith(this.renderInstance(t))}useRendererRemoveElement(e){e.instance.remove()}useRendererRemoveEvent(e,t){const s=a(e);s&&(t[s.on]=null)}useRendererCreateRawContainer(e){const t=document.createElement(m);return t.innerHTML=this.reduceChildrenToInnerHTML(e),t}useRendererUpdateRawContainersAgainstEachOthers(e,t){const s=this.reduceChildrenToInnerHTML(e),n=this.reduceChildrenToInnerHTML(t);s!==n&&(e.instance.innerHTML=n)}}},6447:(e,t,s)=>{const{Router:n}=s(8221);e.exports=class extends n{constructor(e,t,s,n,r){super(e,t,s,n,r)}useRouterNavigationListener(){window.addEventListener("popstate",(e=>{let t;t=e.state?e.state.route:this.useRouterGetRoute();const[s,n,r]=this.resolvePath(t);this.mountNewRoute(s,n,r),e.preventDefault()}))}useRouterMakeURL(e){let t=`${location.origin}/`;return this.base.trim()&&(t+=`${this.base}/`),"/"==e.charAt(0)?t+=e.slice(1):t+=e,t}useRouterGetRoute(){return this.base?window.location.pathname.replace("/"+this.base,""):window.location.pathname}useRouterGetLocationPath(){return location.pathname}useRouterReplaceState(e,t,s){history.replaceState({route:e},"",this.useRouterMakeURL(e))}useRouterPushState(e,t,s){history.pushState({route:e},"",this.useRouterMakeURL(e))}useRouterGoToAnchor(e){setTimeout((()=>{const t=e.replace("#",""),s=document.getElementById(t);s&&s.scrollIntoView({behavior:"smooth"})}),100)}useRouterScrollToTop(){this.scroll&&window.scrollTo({top:0,behavior:"smooth"})}useRouterOnLoad(){const e=this.useRouterGetRoute(),t=location.hash,[s]=this.getRouteState();s.title&&this.useRouterSetTitle(s.title),"function"==typeof s.onLoad&&s.onLoad(),"/"!==e&&this.replace(e,t)}useRouterSetTitle(e){document.title=e}}},361:e=>{e.exports=(e,t="Event",s=[])=>({listener:e,on:"on"+e,handler:t=>{window[e]&&window[e].items&&window[e].items.push(t)},type:t,docs:s})},3922:e=>{e.exports=(e,t)=>{window.addEventListener(e,(function(e){t(e)}))}},9801:(e,t,s)=>{const n=s(3922);e.exports=(e,t,s,r,o=!0)=>{function a(){window[s].items=window[s].items.filter((e=>document.contains(e)))}function i(t){t&&document.contains(t)&&(e.batchCallback((()=>{window[s].items.forEach((e=>{e.contains(t)||e.events[r]()}))})),a())}window[s]||(window[s]={items:[],notify:()=>i(document.body)},n(t,(t=>{if(!Array.isArray(window[s].items))return;const n=t.target;e.batchCallback((()=>{window[s].items.forEach((e=>{o&&e.contains(n)||e.events[r](t,(()=>i(t.target)))}))})),a()})))}},402:(e,t,s)=>{const n=s(9801),r=s(361);e.exports={handler:r,useRecursiveWindow:function(e){n(e,"click","onclickglobal","onClickGlobal"),n(e,"contextmenu","oncontextmenuglobal","onContextMenuGlobal"),n(e,"resize","onresizeglobal","onResizeGlobal",!1),n(e,"keyup","onkeyupglobal","onKeyUpGlobal",!1),n(e,"keydown","onkeydownglobal","onKeyDownGlobal",!1),n(e,"scroll","onscrollglobal","onScrollGlobal",!1),n(e,"beforeunload","onbeforeunloadglobal","onBeforeUnloadGlobal",!1)}}},8221:(e,t,s)=>{const{RecursiveOrchestrator:n,RecursiveRenderer:r,RecursiveRouter:o,RecursiveState:a,RecursiveConsole:i,createRecursiveElement:l,RecursiveApp:c}=s(9933);e.exports={Orchestrator:n,Renderer:r,Router:o,State:a,App:c,Console:i,createElement:l}},9933:(e,t,s)=>{const{RecursiveOrchestrator:n}=s(8253),{RecursiveRenderer:r,createRecursiveElement:o}=s(2624),{RecursiveRouter:a}=s(5e3),{RecursiveState:i}=s(3559),{RecursiveConsole:l}=s(6766),{RecursiveApp:c}=s(1943);e.exports={RecursiveOrchestrator:n,RecursiveRenderer:r,RecursiveRouter:a,RecursiveState:i,RecursiveConsole:l,createRecursiveElement:o,RecursiveApp:c}},1943:(e,t,s)=>{const{RecursiveConsole:n}=s(6766),{RecursiveOrchestrator:r}=s(8253),{RecursiveRenderer:o}=s(2624),{RecursiveRouter:a}=s(5e3),{RecursiveState:i}=s(3559);e.exports={RecursiveApp:class{constructor({renderer:e,buildRouter:t=(()=>{}),cacheSize:s=1e3,onAppInit:l=(()=>{})}){if(this.orchestrator=new r,this.stateManager=new i,this.router=null,this.renderer=null,e instanceof o?this.renderer=e:n.error("Renderer is not of type RecursiveRenderer."),"function"==typeof t){let e=t(this);e instanceof a?this.router=e:n.error("Router is not of type RecursiveRouter.")}"number"==typeof s&&s!=this.stateManager.cacheSize&&(this.stateManager.cacheSize=s),"function"==typeof l&&l(this),this.stateManager.orchestrator=this.orchestrator,this.orchestrator.renderer=this.renderer,this.renderer.stateManager=this.stateManager,this.renderer.orchestrator=this.orchestrator}render(){this.renderer.render(),this.router.useRouterOnLoad()}route(e){return arguments[0]}getRoute(){return this.router.useRouterGetRoute()}getParams(){return this.router.getParams()}getBase(){return this.router.base}goTo(e){this.router.goTo(e)}renderRoute(){return this.router.renderRoute()}getState(e){return this.stateManager.getState(e)}setState(e,t,s,n){return this.stateManager.setState(...arguments)}getCache(e){return this.stateManager.getCache(e)}setCache(e,t,s,n){return this.stateManager.setCache(...arguments)}getRef(e){return this.stateManager.getRef(e)}updateOn(e){this.orchestrator.batchCallback(e,"update-on-"+Date.now())}}}},459:(e,t,s)=>{const n=s(6090),r=s(5488);e.exports={copy:n,isDevMode:r}},6090:e=>{e.exports=function(e){let t;return["bigint","boolean","function","number","string","symbol","undefined"].includes(typeof e)||null===e?t=e:Array.isArray(e)?(t=[],Object.assign(t,e)):"object"==typeof e?(t={},Object.assign(t,e)):t=e,t}},5488:(e,t,s)=>{const{DEVELOPMENT_MODE:n}=s(9085);e.exports=function(){return"production"===n}},6766:(e,t,s)=>{const{isDevMode:n}=s(459);const r={error:function(e,t){if(!n()||!e)return;let s="";throw Array.isArray(t)&&t.length>0&&(s+="- Help - "+t.join(", ")),new Error(`${e} ${s}`)},warn:function(e){n()&&e&&console.warn(e)},log:function(e){n()&&e&&console.log(e)}};e.exports={RecursiveConsole:r}},9085:e=>{const t=Symbol();e.exports={STATE_CACHE_STORE:"cache",STATE_REF_STORE:"ref",STATE_RESERVED_STORE:"reserved",STATE_STATE_STORE:"state",ROUTER_ANCHOR_REG_EXP:/#[\w.~:?#[\]@!$&'()*+,;=-]+$/,ROUTER_DYNAMIC_REG_EXP:/:[^:;]*;/g,ROUTER_PATH_STATE:"path",ROUTER_ROUTE_STATE:"route",ROUTER_NOT_FOUND_ROUTE:"/404",DEVELOPMENT_MODE:"development",ORCHESTRATOR_FREE:"free",ORCHESTRATOR_HANDLING_REQUESTS:"handling-requests",ORCHESTRATOR_COMPUTE_TREE:"calculating-tree",ORCHESTRATOR_COMPUTE_STYLE:"calculating-style",ORCHESTRATOR_RENDERING:"rendering",ORCHESTRATOR_UPDATING:"updating",ORCHESTRATOR_COMPUTE_DIFF:"calculating-diff",ORCHESTRATOR_EXEC_BEFORE_DESTROYED:"execute-before-destroyed",ORCHESTRATOR_COMMIT_INTO_TREE:"commit-into-tree",ORCHESTRATOR_EXEC_ON_DESTROYED:"execute-on-destroyed",ORCHESTRATOR_EXEC_ON_CREATED:"execute-on-created",ORCHESTRATOR_EXEC_ON_UPDATED:"execute-on-updated",ORCHESTRATOR_CLEAN_STATES:"clean-states",FLAGS_FORCE_RERENDER:"forceRerender",FLAGS_RENDER_IF:"renderIf",HOOKS_BEFORE_DESTROYED:"beforeDestroyed",HOOKS_ON_CREATED:"onCreated",HOOKS_ON_DESTROYED:"onDestroyed",HOOKS_ON_REF:"onRef",HOOKS_ON_UPDATED:"onUpdated",ELEMENT_TYPE_FRAGMENT:"fragment",ELEMENT_TYPE_TEXT_NODE:"#text",ELEMENT_TYPE_RAW:"#raw",RENDERER_PHASE_BEFORE_DESTROYED:"beforeDestroyed",RENDERER_PHASE_CHANGES:"changes",RENDERER_PHASE_ON_CREATED:"onCreated",RENDERER_PHASE_ON_DESTROYED:"onDestroyed",RENDERER_PHASE_ON_UPDATED:"onUpdated",RECURSIVE_ELEMENT_SYMBOL:t}},3019:e=>{e.exports={RecursiveContext:class{constructor(){this.context=void 0,this.stack=[]}get(){return this.context}startContext(e){null!=this.context&&this.stack.push(this.context),this.context=e}endCurrentContext(){this.context&&(this.stack.length>0?this.context=this.stack.pop():this.context=void 0)}useContext(e,t){if("function"!=typeof e)return;this.startContext(t);const s=e();return this.endCurrentContext(),s}}}},8253:(e,t,s)=>{const n=s(6766),{RecursiveRenderer:r}=s(2624),o=s(5993),a=s(6405),{ORCHESTRATOR_FREE:i,ORCHESTRATOR_HANDLING_REQUESTS:l,ORCHESTRATOR_COMPUTE_TREE:c,ORCHESTRATOR_COMPUTE_STYLE:d,ORCHESTRATOR_RENDERING:p,ORCHESTRATOR_UPDATING:u,ORCHESTRATOR_COMPUTE_DIFF:m,ORCHESTRATOR_EXEC_BEFORE_DESTROYED:h,ORCHESTRATOR_COMMIT_INTO_TREE:g,ORCHESTRATOR_EXEC_ON_DESTROYED:y,ORCHESTRATOR_EXEC_ON_CREATED:f,ORCHESTRATOR_EXEC_ON_UPDATED:v,ORCHESTRATOR_CLEAN_STATES:b}=s(9085);e.exports={RecursiveOrchestrator:class{constructor(){this.renderer=void 0,this.currentTask={done:!0},this.step=i,this.updatesCount=0,this.batching=!1,this.stateChanged=!1,this.batchingStartTime=Date.now(),this.batchingLastDuration=0,this.batchingRequests=[],this.unhandledRequests=[],this.setStep={free:()=>this.step=i,handlingRequests:()=>this.step=l,computeTree:()=>this.step=c,computeStyle:()=>this.step=d,rendering:()=>this.step=p,updating:()=>this.step=u,computeDiff:()=>this.step=m,commit:()=>this.step=g,execBeforeDestroyed:()=>this.step=h,execOnDestroyed:()=>this.step=y,execOnCreated:()=>this.step=f,execOnUpdated:()=>this.step=v,cleanStates:()=>this.step=b}}update(){this.renderer||n.error("No renderer was specified"),this.renderer.update()}requestUpdate(e){if([i,l].includes(this.step))return this.step===i?(this.update(),this.updatesCount++,this.countUpdateSinceFree(),void(this.unhandledRequests.length>0?(this.setStep.handlingRequests(),this.requestUpdate("unhandled-requests")):this.free())):void(this.step===l&&(this.unhandledRequests=[],this.update(),this.updatesCount++,this.unhandledRequests.length>0?(this.setStep.handlingRequests(),this.unhandledRequests=[],this.requestUpdate("unhandled-requests")):this.free()));this.unhandledRequests.push(a(e,e))}free(){this.updatesCount=0,this.stateChanged=!1,this.setStep.free()}countUpdateSinceFree(){setTimeout((()=>{this.updatesCount>200&&n.error("Infinite re-render detected",["This error occured because the RecursiveDOM detected the need of a large amount of updates in a short period of time.","Avoid updating the state without any condition specially in hooks"])}),2e3)}notifyStateChanged(){this.stateChanged=!0}startBatching(){this.batchingStartTime=Date.now(),this.batching=!0}endBatching(e){this.batchingLastDuration=Date.now()-this.batchingStartTime,this.batchingRequests=[],this.batching=!1,this.stateChanged&&this.requestUpdate(e)}requestEndBatching(e){this.batchingRequests.length>0&&(this.batchingRequests=this.batchingRequests.filter((t=>t.uuid!==e))),0===this.batchingRequests.length&&this.endBatching(e)}requestStartBatching(e){if(this.batching){const t=o(20);this.batchingRequests.push(a(e,t)),setTimeout((()=>{this.batchingRequests.find((e=>e.uuid===t))&&(n.warn("Batch request took too long (more than 100ms). This could be caused by a catched error. Avoid batching your updates in an asynchronous call and using await inside the updateAfter method."),this.endBatching(e))}),100)}else this.startBatching()}batchCallback(e,t="batch-callback-"+Date.now){void 0!==e&&"function"==typeof e&&(!0===this.batching?e():(this.requestStartBatching(t),e(),this.requestEndBatching(t)))}}}},5993:e=>{e.exports=function(e){let t="";for(let e=0;e<5;e++)t+=Math.random()*e*10*Math.random();return`task-${t}-${e}`}},6405:e=>{e.exports=function(e,t){return{sender:e,time:Date.now(),uuid:t}}},6701:(e,t,s)=>{const{RECURSIVE_ELEMENT_SYMBOL:n}=s(9085);e.exports=function(e,t){return{...t,elementType:e,$$_RecursiveSymbol:n}}},8216:(e,t,s)=>{const{FLAGS_RENDER_IF:n,FLAGS_FORCE_RERENDER:r}=s(9085),o={forceRerender:r,renderIf:n};e.exports={isFlag:function(e){return!!o[e]},list:o}},2379:(e,t,s)=>{const{HOOKS_ON_CREATED:n,HOOKS_ON_DESTROYED:r,HOOKS_ON_UPDATED:o,HOOKS_BEFORE_DESTROYED:a,HOOKS_ON_REF:i}=s(9085),l={onCreated:{key:n,type:"function"},onDestroyed:{key:r,type:"function"},onUpdated:{key:o,type:"function"},beforeDestroyed:{key:a,type:"function"},onRef:{key:i,type:"function"}};e.exports={isHook:function(e,t){return!!l[e]&&typeof t===l[e].type},list:l}},2624:(e,t,s)=>{const{RecursiveConsole:n}=s(6766),{RecursiveContext:r}=s(3019),{RecursiveOrchestrator:o}=s(8253),{RecursiveState:a}=s(3559),i=s(6701),l=s(4948),c=s(2732),d=s(9187),p=s(3107),u=s(5681),m=s(5047),h=s(2774),g=s(5322),y=s(5399),f=s(6656),v=s(397),b=s(8974),{RENDERER_PHASE_ON_CREATED:R,RENDERER_PHASE_ON_UPDATED:x,RENDERER_PHASE_BEFORE_DESTROYED:E,RENDERER_PHASE_ON_DESTROYED:w,RENDERER_PHASE_CHANGES:k}=s(9085);e.exports={RecursiveRenderer:class{constructor(e,t){this.orchestrator=void 0,this.stateManager=void 0,this.contextManager=new r,this.app=e,this.root=t,this.current=void 0,this.phases={[R]:[],[x]:[],[E]:[],[w]:[],[k]:[]}}delegateToRenderer(e,t){this.phases[e]&&"function"==typeof t&&this.phases[e].push(t)}runPhase(e){this.phases&&Array.isArray(this.phases[e])&&this.phases[e].forEach((e=>{"function"==typeof e&&e()}))}onElementUpdated(e){e.hooks&&e.hooks.onUpdated&&this.delegateToRenderer(x,(()=>e.hooks.onUpdated(e.instance)))}onElementCreated(e){e.hooks&&e.hooks.onCreated&&this.delegateToRenderer(R,(()=>e.hooks.onCreated(e.instance)))}onBeforeElementDestroyed(e){e.hooks&&this.delegateToRenderer(E,e.hooks.beforeDestroyed)}onElementDestroyed(e){e.hooks&&this.delegateToRenderer(w,e.hooks.onDestroyed)}renderInstance(e){return u(e,this)}replaceElement(e,t){m(e,t,this)}addElement(e,t,s){l(e,t,s,this)}changeElementPosition(e,t){c(e,t,this)}removeElement(e){d(e,this)}updateEvents(e,t){return b(e,t,this)}updateAttributes(e,t){return y(e,t,this)}updateChildren(e,t){f(e,t,this)}updateStyle(e,t){this.delegateToRenderer(k,(()=>this.useRendererUpdateStyle(e,t)))}updateElement(e,t){v(e,t,this)}setInstanceReference(e){h(e,this)}render(){p(this)}update(){g(this)}clean(){this.stateManager.clear(),this.phases={[R]:[],[x]:[],[E]:[],[w]:[],[k]:[]},this.useRendererClean()}useRendererUpdateStyle(e,t){n.error("Renderer has no method updateStyle.")}useRendererUpdateText(e,t){n.error("Renderer has no method updateText.")}useRendererClean(){n.error("Renderer has no method clean.")}useRendererOnTreePrepared(e){n.error("Renderer has no method onTreePrepared.")}useRendererRemoveAttribute(e,t){n.error("Renderer has no method RemoveAttribute.")}useRendererSetAttribute(e,t,s){n.error("Renderer has no method SetAttribute.")}useRendererItemInTree(e){n.error("Renderer has no method itemInTree.")}useRendererRemoveEvent(e,t){n.error("Renderer has no method RemoveEvent.")}useRendererAddEvent(e,t,s){n.error("Renderer has no method AddEvent.")}useRendererRenderTree(){n.error("Renderer has no method renderTree.")}useRendererChangeElementPosition(e,t,s){n.error("Renderer has no method useRendererChangeElementPosition.")}useRendererGetElementPosition(e){n.error("Renderer has no method useRendererGetElementPosition.")}useRendererRemoveElement(e){n.error("Renderer has no method useRendererRemoveElement")}useRendererAddElement(e,t,s){n.error("Renderer has no method useRendererAddElement.")}useRendererReplaceElement(e,t){n.error("Renderer has no method useRendererReplaceElement.")}useRendererIsAttribute(e){n.error("Renderer has no method useRendererIsAttribute.")}useRendererIsEvent(e){n.error("Renderer has no method useRendererIsEvent.")}useRendererCreateInstance(e){n.error("Renderer has no method useRendererCreateInstance.")}useRendererInjectAttribute(e,t,s){n.error("Renderer has no method useRendererInjectAttribute.")}useRendererInjectStyle(e,t){n.error("Renderer has no method useRendererInjectStyle.")}useRendererInjectEvent(e,t,s){n.error("Renderer has no method useRendererInjectEvent.")}useRendererInjectChild(e,t){n.error("Renderer has no method useRendererInjectChild.")}useRendererCreateRawContainer(e){n.error("Renderer has no method useRendererCreateRawContainer.")}useRendererUpdateRawContainersAgainstEachOthers(e,t){n.error("Renderer has no method useRendererUpdateRawContainersAgainstEachOthers.")}},createRecursiveElement:i}},4948:(e,t,s)=>{const{RecursiveRenderer:n}=s(2624),{RENDERER_PHASE_CHANGES:r}=s(9085),o=s(2822);e.exports=function(e,t,s,n){o(e)&&(n.delegateToRenderer(r,(()=>n.useRendererAddElement(e,t,s))),n.onElementCreated(e))}},2732:(e,t,s)=>{const{RecursiveRenderer:n}=s(2624),{RENDERER_PHASE_CHANGES:r}=s(9085);e.exports=function(e,t,s){s.delegateToRenderer(r,(()=>s.useRendererChangeElementPosition(e,t)))}},2822:(e,t,s)=>{const{RECURSIVE_ELEMENT_SYMBOL:n}=s(9085);e.exports=function(e){return e&&e.elementType&&e.elementType.toString().trim()&&e.$$_RecursiveSymbol==n}},5330:(e,t,s)=>{const{RecursiveRenderer:n}=s(2624),{isFlag:r}=s(8216),{isHook:o}=s(2379),{RecursiveConsole:a}=s(6766),{ELEMENT_TYPE_FRAGMENT:i,ELEMENT_TYPE_TEXT_NODE:l,RECURSIVE_ELEMENT_SYMBOL:c,ELEMENT_TYPE_RAW:d}=s(9085),{checkChildIsValid:p}=s(9310),u=(e,t,s,n)=>{const m={};if(!e.$$_RecursiveSymbol||e.$$_RecursiveSymbol!=c)return a.error("Recursive Renderer : Element does not have the RecursiveElement signature symbol.",['You should create an element only using "createRecursiveElement" method.']),!1;if("string"!=typeof e.elementType||!e.elementType||!e.elementType.toString().trim())return a.error('Recursive Renderer : "elementType" should not be empty or null.',["Element type should be of type string.","Make sure to provide a type for your element (ex: div in web)."]),!1;m.$$_RecursiveSymbol=e.$$_RecursiveSymbol,m.elementType=e.elementType,m.events={},m.attributes={},m.children=[],m.hooks={},m.flags={},m.instance={},m.style={},m.map=!1,m.key=e.key,m.ref=void 0,m.style=e.style,m.rendererOptions=e.rendererOptions,m.uid=t,m.parent=s,m.indexInParent=parseInt(t.split("-").pop());for(let t in e){if("flags"===t)for(let t in e.flags)r(t)&&(m.flags[t]=e.flags[t]);if("hooks"===t)for(let t in e.hooks)o(t,e.hooks[t])&&(m.hooks[t]=e.hooks[t]);n.useRendererIsEvent(t)?("function"!=typeof e[t]&&a.error(`Recursive Renderer : Event "${t}" is not a function.`),m.events[t]=e[t]):n.useRendererIsAttribute(t)&&(m.attributes[t]=e[t])}if(![null,void 0].includes(e.children)){let t=[];Array.isArray(e.children)||(e.children=[e.children]),e.children.forEach(((e,s)=>{const r=function(e,t,s,n){if([null,void 0].includes(e))return!1;if(e.elementType){if(e.flags&&!1===e.flags.renderIf)return!1;{let r=!1;return r=u(e,t,s,n),r}}return{elementType:l,$$_RecursiveSymbol:c,children:e,instance:void 0}}(e,m.uid+"-"+s,m,n);r&&(r.elementType===i?t.push(...r.children):p(r)&&t.push(r))})),m.children=t,m.elementType===d&&m.children.some((e=>e.elementType!=l))&&a.warn("Recursive Renderer : You are using the raw element while one or more children are not of type string. They will be converted to string."),m.map=function(e){const t={};let s=0;for(let n of e){if(!["string","number"].includes(typeof n.key))return!1;if(null!=t[n.key])return a.warn("Recursive Renderer : Duplicate keys detected. Each child should have a unique key."),!1;t[n.key]=s,s++}return t}(m.children)}return m};e.exports=u},9187:(e,t,s)=>{const{RecursiveRenderer:n}=s(2624),{RENDERER_PHASE_BEFORE_DESTROYED:r,RENDERER_PHASE_CHANGES:o,RENDERER_PHASE_ON_DESTROYED:a}=s(9085);e.exports=function(e,t){t.onBeforeElementDestroyed(e),t.delegateToRenderer(o,(()=>{t.useRendererRemoveElement(e)})),t.onElementDestroyed(e)}},3107:(e,t,s)=>{const{RecursiveRenderer:n}=s(2624),{RecursiveConsole:r}=s(6766),{RENDERER_PHASE_ON_CREATED:o,RECURSIVE_ELEMENT_SYMBOL:a}=s(9085),i=s(5330);e.exports=function(e){"function"!=typeof e.app&&r.error("App is not of type function."),e.root||r.error("No root was specified."),e.orchestrator.setStep.computeTree();const t=e.app();t.$$_RecursiveSymbol!=a&&r.error("Root element is not of type RecursiveElement.",["Use createRecursiveElement to create a valid element."]),e.current=i(t,"0",null,e),e.useRendererOnTreePrepared(e.current),e.orchestrator.setStep.commit(),e.useRendererRenderTree(),e.orchestrator.setStep.execOnCreated(),e.runPhase(o),e.setInstanceReference(e.current),e.clean(),e.orchestrator.setStep.free()}},5681:(e,t,s)=>{const{RecursiveRenderer:n}=s(2624),{ELEMENT_TYPE_RAW:r}=s(9085);e.exports=function(e,t){const s=e.elementType===r?t.useRendererCreateRawContainer(e):t.useRendererCreateInstance(e);if(e.attributes)for(let n in e.attributes)t.useRendererInjectAttribute(n,e.attributes[n],s);if(e.style&&t.useRendererInjectStyle(e.style,s),e.events)for(let n in e.events)t.useRendererInjectEvent(n,e.events[n],s);if(Array.isArray(e.children)&&e.elementType!==r)for(let n of e.children)t.useRendererInjectChild(n,s);return e.instance=s,t.onElementCreated(e),s}},5047:(e,t,s)=>{const{RecursiveRenderer:n}=s(2624),{RENDERER_PHASE_CHANGES:r}=s(9085);e.exports=function(e,t,s){s.onBeforeElementDestroyed(e),s.delegateToRenderer(r,(()=>s.useRendererReplaceElement(e,t))),s.onElementDestroyed(e),t.instance=e.instance}},2774:(e,t,s)=>{const{RecursiveRenderer:n}=s(2624);e.exports=function(e,t){if(e.hooks&&"function"==typeof e.hooks.onRef){const s=e.hooks.onRef(e.instance);"string"==typeof s&&t.stateManager.setRef(s,e.instance)}Array.isArray(e.children)&&e.children.forEach((e=>{t.setInstanceReference(e)}))}},5322:(e,t,s)=>{const{RecursiveRenderer:n}=s(2624),{RENDERER_PHASE_ON_DESTROYED:r,RENDERER_PHASE_CHANGES:o,RENDERER_PHASE_ON_UPDATED:a,RECURSIVE_ELEMENT_SYMBOL:i,RENDERER_PHASE_BEFORE_DESTROYED:l,RENDERER_PHASE_ON_CREATED:c}=s(9085),d=s(5330);e.exports=function(e){let t;e.orchestrator.setStep.computeTree(),t=d(e.app(),"0",null,e),t.$$_RecursiveSymbol!=i&&RecursiveConsole.error("Root element is not of type RecursiveElement.",["Use createRecursiveElement to create a valid element."]),e.useRendererOnTreePrepared(t),e.orchestrator.setStep.computeDiff(),e.updateElement(e.current,t),e.current=t,e.orchestrator.setStep.execBeforeDestroyed(),e.runPhase(l),e.orchestrator.setStep.commit(),e.runPhase(o),e.orchestrator.setStep.execOnDestroyed(),e.runPhase(r),e.orchestrator.setStep.execOnUpdated(),e.runPhase(a),e.orchestrator.setStep.execOnCreated(),e.runPhase(c),e.orchestrator.setStep.cleanStates(),e.setInstanceReference(e.current),e.clean()}},5399:(e,t,s)=>{const{RecursiveRenderer:n}=s(2624),{RENDERER_PHASE_CHANGES:r}=s(9085),{makeDiffList:o}=s(9310);e.exports=function(e,t,s){const n=o(e.attributes,t.attributes);for(let t in n.toUpdate)s.delegateToRenderer(r,(()=>{s.useRendererSetAttribute(t,n.toUpdate[t],e)}));for(let t in n.toAdd)s.delegateToRenderer(r,(()=>{s.useRendererSetAttribute(t,n.toAdd[t],e)}));for(let t in n.toRemove)s.delegateToRenderer(r,(()=>{s.useRendererRemoveAttribute(t,e.instance)}));return Object.keys(n.toRemove).length>0||Object.keys(n.toAdd).length>0||Object.keys(n.toUpdate).length>0}},6656:(e,t,s)=>{const{RecursiveRenderer:n}=s(2624);function r(e,t,s){for(let n=0;n<e.length;n++)s.updateElement(e[n],t[n])}e.exports=function(e,t,s){for(let n in e.children)if(!s.useRendererItemInTree(e.children[n]))return void s.replaceElement(e,t);if(e.map&&t.map){for(let n in e.map)null==t.map[n]&&s.removeElement(e.children[e.map[n]]);for(let n in t.map){const r=t.map[n],o=t.children[r];if(null==e.map[n])s.addElement(o,e,r);else{const t=e.map[n],a=e.children[t];s.useRendererGetElementPosition(a)!=r&&s.changeElementPosition(a,r),s.updateElement(a,o)}}}else if(e.children.length==t.children.length)r(e.children,t.children,s);else if(e.children.length>t.children.length){for(;e.children.length>t.children.length;)s.removeElement(e.children.pop());r(e.children.slice(0,t.children.length),t.children,s)}else{for(let n=e.children.length;n<t.children.length;n++)s.addElement(t.children[n],e);r(e.children,t.children.slice(0,e.children.length),s)}}},397:(e,t,s)=>{const{RecursiveRenderer:n}=s(2624),{RecursiveConsole:r}=s(6766),{ELEMENT_TYPE_TEXT_NODE:o,ELEMENT_TYPE_RAW:a}=s(9085);e.exports=function(e,t,s){const n=e.instance;if(n||r.error("Recursive Renderer : Instance of the element not found",["This error can happen when you manipulate the dom directly."]),e.flags&&!0===e.flags.forceRerender)s.replaceElement(e,t);else if(e.elementType!==t.elementType)s.replaceElement(e,t);else if(e.elementType===o&&t.elementType===o)e.children!==t.children&&s.useRendererUpdateText(e,t);else{const n=s.updateEvents(e,t),r=s.updateAttributes(e,t)&&s.updateAttributes(e,t);s.updateStyle(e,t),e.elementType===a?s.useRendererUpdateRawContainersAgainstEachOthers(e,t):s.updateChildren(e,t),(n||r)&&s.onElementUpdated(e)}t.instance=n}},8974:(e,t,s)=>{const{RecursiveRenderer:n}=s(2624),{RENDERER_PHASE_CHANGES:r}=s(9085),{makeDiffList:o}=s(9310);e.exports=function(e,t,s){const n=o(e.events,t.events);for(let t in n.toUpdate)s.delegateToRenderer(r,(()=>{s.useRendererAddEvent(t,n.toUpdate[t],e)}));for(let t in n.toAdd)s.delegateToRenderer(r,(()=>{s.useRendererAddEvent(t,n.toAdd[t],e)}));for(let t in n.toRemove)s.delegateToRenderer(r,(()=>{s.useRendererRemoveEvent(t,e.instance)}));return Object.keys(n.toRemove).length>0||Object.keys(n.toAdd).length>0}},9310:e=>{e.exports={checkChildIsValid:function(e){return![void 0,null,""].includes(e)&&!Array.isArray(e)},makeDiffList:function(e,t){const s={},n={},r={};let o={};"object"!=typeof e||Array.isArray(e)||(o={...o,...e}),"object"!=typeof t||Array.isArray(t)||(o={...o,...t});for(let a in o)t.hasOwnProperty(a)?e.hasOwnProperty(a)?(typeof e[a]==typeof t[a]&&"function"==typeof t[a]||JSON.stringify(e[a])!=JSON.stringify(t[a]))&&(n[a]=o[a]):e.hasOwnProperty(a)||(r[a]=o[a]):s[a]=o[a];return{toRemove:s,toUpdate:n,toAdd:r}}}},5e3:(e,t,s)=>{const{RecursiveConsole:n}=s(6766),{ROUTER_PATH_STATE:r,ROUTER_ROUTE_STATE:o,ROUTER_NOT_FOUND_ROUTE:a}=s(9085),{RecursiveOrchestrator:i}=s(8253),{RecursiveState:l}=s(3559),c=s(1816),d=s(4438),p=s(7519),u=s(5619),m=s(8824),h=s(4292),g=s(3270),y=s(1305);e.exports={RecursiveRouter:class{constructor(e,t,s,i,l){this.stateManager=i,this.orchestrator=l,this.base=t||"",this.scroll=s||!1,this.routes=c(e),this.routerContext={context:void 0,stack:[],depth:0,fragments:[],anchor:""},this.routes[a]||(this.routes[a]={path:a,title:"Not Found",component:()=>"404 Not Found"}),this.routes[a].redirectTo&&n.error("Recursive Router : The 404 not found route cannot have a redirection path.");const d=this.routes["/"];this.stateManager.setReserved(r,"/"),this.stateManager.setReserved(o,d),this.useRouterNavigationListener()}getPathState(){return this.stateManager.getReserved(r)}getRouteState(){return this.stateManager.getReserved(o)}goTo(e){p(e,this)}replace(e,t){h(e,t,this)}getParams(){return d(this)}renderFragment(){return u(this)}renderRoute(){return m(this)}resolvePath(e){return g(e,this.routes)}mountNewRoute(e,t,s){y(e,t,s,this)}useRouterMakeURL(e){n.error("useRouterMakeURL is not implemented")}useRouterGetLocationPath(){n.error("useRouterGetLocationPath is not implemented")}useRouterReplaceState(e,t,s){n.error("useRouterReplaceState is not implemented")}useRouterPushState(e,t,s){n.error("useRouterPushState is not implemented")}useRouterScrollToTop(){n.error("useRouterScrollToTop is not implemented")}useRouterGoToAnchor(e){n.error("useRouterGoToAnchor is not implemented")}useRouterNavigationListener(){n.error("useRouterNavigationListener is not implemented")}useRouterGetRoute(){n.error("useRouterGetRoute is not implemented")}useRouterOnLoad(){n.error("useRouterOnLoad is not implemented")}useRouterSetTitle(e){n.error("useRouterSetTitle is not implemented")}}}},3104:(e,t,s)=>{const{RecursiveRouter:n}=s(5e3);e.exports=function(e){const t=e.routerContext;t.context&&(t.stack.length>0?t.context=t.stack.pop():t.context=void 0),t.depth--}},5500:(e,t,s)=>{const{RecursiveRouter:n}=s(5e3),{ROUTER_NOT_FOUND_ROUTE:r}=s(9085),o=s(567);e.exports=function(e,t){const s=o(e,t);if(s.isDynamic)return s;for(let s in t.routes)if(e===s)return t.routes[s];return t.routes[r]}},6516:(e,t,s)=>{const{ROUTER_DYNAMIC_REG_EXP:n}=s(9085);e.exports=function(e,t){if("string"!=typeof e)return!1;const s=n,r=":recursive;";for(let n in t)if(n.replace(s,r)===e.replace(s,r))return n;return!1}},1816:(e,t,s)=>{const{RecursiveConsole:n}=s(6766);e.exports=function e(t){let s={};if(t&&t.path&&t.component){const r="function"==typeof t.onLoad?t.onLoad:()=>{},o="function"==typeof t.onExit?t.onExit:()=>{},a="string"==typeof t.title?t.title:null,i="string"==typeof t.redirectTo?t.redirectTo:null;if("function"!=typeof t.component&&n.error("Recursive Router : router's component should be of type function."),"string"!=typeof t.path&&n.error("Recursive Router : router's path should be of type string."),s[t.path]={path:t.path,component:t.component,redirectTo:i,title:a,onLoad:r,onExit:o},Array.isArray(t.routes)){const n=t.path,r="/"==t.path?"":"/";t.routes.forEach((t=>{if(t&&t.path){const o=t.path;t.path=n+r+o;const a=e(t);s={...s,...a}}}))}}return s}},4438:(e,t,s)=>{const{RecursiveRouter:n}=s(5e3),{ROUTER_DYNAMIC_REG_EXP:r}=s(9085),o=s(567);e.exports=function(e){const t=r,[s]=e.getPathState(),n=o(s,e);if(!n.isDynamic)return{};const a=n.template.path.match(t)||[],i=e.useRouterGetLocationPath().match(t)||[];if(a.length===i.length&&a.length>0){const e={};for(let t=0;t<a.length;t++){const s=a[t].replace(":","").replace(";",""),n=i[t].replace(":","").replace(";","");e[s]=n}return e}return{}}},7519:(e,t,s)=>{const{RecursiveRouter:n}=s(5e3),r=s(1305),o=s(3270);e.exports=function(e,t){if(!e)return;const[s,n,a]=o(e,t.routes),[i]=t.getPathState();i!==s&&(t.useRouterPushState(s,n,a),r(s,n,a,t))}},567:(e,t,s)=>{const{RecursiveRouter:n}=s(5e3),{ROUTER_DYNAMIC_REG_EXP:r}=s(9085);e.exports=function(e,t){const s=r;for(let n in t.routes){const r=n,o="recursive",a=e.match(s),i=n.match(s);if(i&&a)try{if(a.length===i.length&&i.length>0&&e.replace(s,o)===r.replace(s,o))return{isDynamic:!0,template:t.routes[n]}}catch(e){}}return{isDynamic:!1}}},1305:(e,t,s)=>{const{RecursiveRouter:n}=s(5e3);e.exports=function(e,t,s,n){const[r,o]=n.getPathState(),[a,i]=n.getRouteState(),l=n.routes[t];n.orchestrator.batchCallback((()=>{"function"==typeof a.onExit&&a.onExit(),i(l),o(e),"function"==typeof l.onLoad&&l.onLoad()})),s?n.useRouterGoToAnchor(s):n.scroll&&n.useRouterScrollToTop(),l.title&&n.useRouterSetTitle(l.title)}},8457:(e,t,s)=>{const{RecursiveConsole:n}=s(6766);e.exports=function(e){"string"!=typeof e&&n.error("Recursive Router : path can be only of type string.",[]);let t=e.trim();return""===t&&n.error("Recursive Router : path is empty.",[]),"/"!==t[0]&&n.error("Recursive Router : path should start with '/'.",[]),decodeURI(t)}},5619:(e,t,s)=>{const{RecursiveRouter:n}=s(5e3),r=(s(5500),s(6516),s(567)),o=s(8289);e.exports=function(e){const t=e.routerContext;if(t.depth>t.fragments.length)return"";const s=t.fragments.slice(0,t.depth).reduce(((e,t)=>`${e}${t}`));let[n]=o(s);const a=r(s,e);a.isDynamic&&(n=a.template.path);let i,l=e.routes[n]||e.routes["/404"]||!1;return i=l?l.isDynamic?l.template.component():l.component():"",i}},8824:(e,t,s)=>{const{RecursiveRouter:n}=s(5e3),r=s(5619),o=s(3554),a=s(6501);e.exports=function(e){const[t]=e.getRouteState();return o(e),a({route:t},(()=>r(e)),e)}},4292:(e,t,s)=>{const{RecursiveRouter:n}=s(5e3),r=s(1305),o=s(3270);e.exports=function(e,t,s){if(!e)return;const[n,a,i]=o(e,s.routes);n&&(s.useRouterReplaceState(n,a,i),r(n,a,t,s))}},3270:(e,t,s)=>{const n=s(6516),r=s(8457),o=s(8289);e.exports=function(e,t){const s=r(e),[a,i]=o(s),l=n(a,t);if(!l)return[s,"/404",""];if(t[l].redirectTo){const e=t[l].redirectTo,s=r(e),[a,i]=o(s),c=n(a);return c?[s,c,i]:[s,"/404",""]}return[s,l,i]}},3554:(e,t,s)=>{const{RecursiveRouter:n}=s(5e3);e.exports=function(e){const[t]=e.getPathState();e.routerContext.fragments=t.split("/").slice(1).map((e=>`/${e}`))}},2305:(e,t,s)=>{const{RecursiveRouter:n}=s(5e3);e.exports=function(e,t){const s=t.routerContext;s.depth++,s.context&&s.stack.push(s.context),s.context=e}},8289:(e,t,s)=>{const{ROUTER_ANCHOR_REG_EXP:n}=s(9085);e.exports=function(e){if("string"!=typeof e)return["",""];const t=n.exec(e);let s="",r="";return t?(s=e.substring(0,t.index),r=e.substring(t.index)):s=e,[s,r]}},6501:(e,t,s)=>{const{RecursiveRouter:n}=s(5e3),r=s(3104),o=s(2305);e.exports=function(e,t,s){"function"!=typeof t&&RecursiveConsole.error("Route component is not a function."),o(e,s);const n=t();return r(s),n}},5561:(e,t,s)=>{const{RecursiveConsole:n}=s(6766),{retrieveStatefulObject:r}=s(5650),{RecursiveState:o}=s(3559),{STATE_CACHE_STORE:a}=s(9085);e.exports=e=>{const t=a;function s(s){return r(e,t,s)}return{set:function(n,r,o,a){return!e.itemExists(n,t)&&e.addItem(n,r,t,o,a),e.setItemUsed(t,n),s(n)},get:function(r){return e.itemExists(r,t)||n.error("State with the uid "+r+" does not exists."),s(r)},clear:function(){const s=e.stores[t].items,n=Object.keys(s).length;if(n>e.cacheSize){for(let r in s)s[r].addOrder<n-e.cacheSize&&e.removeItem(r,t);e.stores[t].used=Object.keys(s)}},flush:function(){},name:t}}},5650:(e,t,s)=>{const{RecursiveState:n}=s(3559);e.exports={retrieveStatefulObject:function(e,t,s){const n=e.getItem(s,t);return[e.copy(n.value),function(n){e.itemExists(s,t)&&e.updateItem(s,n,t,(()=>{e.useBatchCallback((()=>{e.orchestrator.notifyStateChanged()}),t+Date.now())}))},function(){return e.itemExists(s,t)?e.copy(e.getItem(s,t,void 0).value):void 0},function(){if(!e.itemExists(s,t))return;const r=n.history[0];e.updateItem(s,r,t,(()=>{e.useBatchCallback((()=>{e.orchestrator.notifyStateChanged()}),t+Date.now())}))},e.copy(n.preValue)]}}},3559:(e,t,s)=>{const{copy:n}=s(459),r=s(5561),o=s(1346),a=s(7320),i=s(8726),l=s(7528),c=s(8344),d=s(7262),p=s(2514),u=s(8959),m=s(2897),h=s(412),{STATE_STATE_STORE:g,STATE_CACHE_STORE:y,STATE_RESERVED_STORE:f,STATE_REF_STORE:v}=s(9085),{RecursiveOrchestrator:b}=s(8253);e.exports={RecursiveState:class{constructor(){this.stores={},this.history=[this.stores],this.orchestrator=void 0,this.cacheSize=1e3,this.createStore(i(this)),this.createStore(o(this)),this.createStore(r(this)),this.createStore(a(this))}addItem(e,t,s,n,r){l(e,t,s,n,r,this)}itemExists(e,t){return u(e,t,this)}copy(e){return n(e)}getItem(e,t,s){return p(e,t,s,this)}removeItem(e,t){m(e,t,this)}updateItem(e,t,s,n,r){h(e,t,s,n,r,this)}clear(){c(this)}flush(){}createStore(e){d(e,this)}useBatchCallback(e,t){this.orchestrator&&this.orchestrator.batchCallback(e,t)}setItemUsed(e,t){this.stores[e]&&this.stores[e].used.push(t)}itemIsUsed(e,t){return this.stores[e].used.includes(t)}getState(e){return this.stores[g].get(e)}setState(e,t,s,n){return this.stores[g].set(e,t,s,n)}getCache(e){return this.stores[y].get(e)}setCache(e,t,s,n){return this.stores[y].set(e,t,s,n)}setReserved(e,t){return this.stores[f].set(e,t)}getReserved(e){return this.stores[f].get(e)}setRef(e,t){return this.stores[v].set(e,t)}getRef(e,t){return this.stores[v].get(e,t)}}}},7320:(e,t,s)=>{const{RecursiveState:n}=s(3559),{STATE_REF_STORE:r}=s(9085);e.exports=e=>{const t=r;return{set:function(s,n,r,o){e.addItem(s,n,t,r,o),e.setItemUsed(t,s)},get:function(s,n){return function(s,n){if(e.itemExists(s,t))return e.getItem(s,t).value;e.getItem(s,t,n)}(s,n)},clear:function(){for(let s in e.stores[t].items)e.itemIsUsed(t,s)||e.removeItem(s,t);e.stores[t].used=[]},flush:function(){},name:t}}},1346:(e,t,s)=>{const{RecursiveConsole:n}=s(6766),{retrieveStatefulObject:r}=s(5650),{RecursiveState:o}=s(3559),{STATE_RESERVED_STORE:a}=s(9085);e.exports=e=>{const t=a;function s(s){return r(e,t,s)}return{set:function(n,r,o,a){return!e.itemExists(n,t)&&e.addItem(n,r,t,o,a),e.setItemUsed(t,n),s(n)},get:function(r){return e.itemExists(r,t)||n.error("State with the uid "+r+" does not exists."),s(r)},clear:function(){},flush:function(){},name:t}}},7528:(e,t,s)=>{const{RecursiveConsole:n}=s(6766),{RecursiveState:r}=s(3559);e.exports=function(e,t,s,r,o,a){if("string"!=typeof e)return void n.error("State UID is not of type string.");if([void 0,null,""].includes(e.trim()))return void n.error("State UID cannot be one of these : '' or 'undefined' or 'null'.");if(void 0===a.stores[s])return void n.error("Invalid store name.");const i={value:t,preValue:void 0,history:[t],onRemoved:o,unsubscribe:()=>{},addOrder:Object.keys(a.stores[s].items).length};a.stores[s].items[e]=i,r&&"function"==typeof r&&(async()=>{const t=await r();"function"==typeof t&&a.itemExists(e,s)&&(a.stores[s].items[e].unsubscribe=t)})()}},8344:(e,t,s)=>{const{copy:n}=s(459),{RecursiveState:r}=s(3559);e.exports=function(e){e.history.push(n(e.stores));for(let t in e.stores)"function"==typeof e.stores[t].clear&&e.stores[t].clear()}},7262:(e,t,s)=>{const{RecursiveState:n}=s(3559),{RecursiveConsole:r}=s(6766);e.exports=function(e,t){const s=e.name,n=e.set,o=e.get,a=e.flush,i=e.obj,l=e.clear;if("string"!=typeof s)return void r.error("name is not a string");if(!s.trim())return void r.error("name is not valid");if("function"!=typeof n)return void r.error("set is not a function");if("function"!=typeof o)return void r.error("get is not a function");if("function"!=typeof l)return void r.error("clear is not a function");if("function"!=typeof a)return void r.error("flush is not a function");const c=s.trim();t.stores[c]?r.error("store already exists"):t.stores[c]={items:{},used:[],obj:i,set:n,get:o,clear:l,flush:a}}},2514:(e,t,s)=>{const{RecursiveState:n}=s(3559),{RecursiveConsole:r}=s(6766);e.exports=function(e,t,s,n){if(void 0!==n.stores[t])return void 0===n.stores[t].items[e]?s:n.stores[t].items[e];r.error("Invalid store name.")}},8959:(e,t,s)=>{const{RecursiveState:n}=s(3559);e.exports=function(e,t,s){return void 0!==s.stores[t]&&void 0!==s.stores[t].items[e]}},2897:(e,t,s)=>{const{RecursiveState:n}=s(3559),{RecursiveConsole:r}=s(6766),o=s(8959);e.exports=function(e,t,s){void 0===s.stores[t]&&r.error("Invalid store name."),o(e,t,s)||r.error("State does not exist in the current store.");const n=s.stores[t].items[e].onRemoved,a=s.stores[t].items[e].unsubscribe;"function"==typeof n&&n(),a(),delete s.stores[t].items[e]}},412:(e,t,s)=>{const{RecursiveState:n}=s(3559),{RecursiveConsole:r}=s(6766),o=s(8959);e.exports=function(e,t,s,n,a,i){void 0!==i.stores[s]?o(e,s,i)?(i.stores[s].items[e].value!==t||a)&&(i.stores[s].items[e].history.push(i.stores[s].items[e].value),i.stores[s].items[e].preValue=i.stores[s].items[e].value,i.stores[s].items[e].value=t,n&&"function"==typeof n&&n()):r.error("State does not exist in the current store."):r.error("Invalid store name.")}},8726:(e,t,s)=>{const{RecursiveState:n}=s(3559),{RecursiveConsole:r}=s(6766),{STATE_STATE_STORE:o}=s(9085),{retrieveStatefulObject:a}=s(5650);e.exports=e=>{const t=o;function s(s){return a(e,t,s)}return{set:function(n,r,o,a){return!e.itemExists(n,t)&&e.addItem(n,r,t,o,a),e.setItemUsed(t,n),s(n)},get:function(n){return e.itemExists(n,t)||r.error("State with the uid "+n+" does not exists."),s(n)},clear:function(){for(let s in e.stores[t].items)e.itemIsUsed(t,s)||e.removeItem(s,t);e.stores[t].used=[]},flush:function(){},name:t}}},8903:(e,t,s)=>{e.exports=s.p+"imgs/cv.2b00959d3d054a8c03cdcd02eb184678.pdf"},6019:(e,t,s)=>{e.exports=s.p+"imgs/android.ebd75f893b86f1087ea047e9fcb1de47.png"},4629:(e,t,s)=>{e.exports=s.p+"imgs/angular.b6d2a9dec3e43e0ffb95b7d6e29af358.png"},7132:(e,t,s)=>{e.exports=s.p+"imgs/dart.f00251a3d3eee7148f7aed2b511af02e.png"},1237:(e,t,s)=>{e.exports=s.p+"imgs/electron.7a073e965f8a5cd33ba93bad5da894c2.png"},6883:(e,t,s)=>{e.exports=s.p+"imgs/express.39a0f4c3d981885c64f851b1ac242bba.png"},178:(e,t,s)=>{e.exports=s.p+"imgs/firebase.18e8cd693c55dbadc622bd6a75cb9fa8.png"},1027:(e,t,s)=>{e.exports=s.p+"imgs/flutter.83219c099347619051f3aa0fa0e2108e.svg"},2066:(e,t,s)=>{e.exports=s.p+"imgs/java.2a1399f78477e0e27b8e4c39803bf36a.png"},2302:(e,t,s)=>{e.exports=s.p+"imgs/js.266bd9fb2663dcc057b43c239a73e01b.png"},5327:(e,t,s)=>{e.exports=s.p+"imgs/kotlin.0e22a842339118ef9a10b0703e40e95d.png"},7443:(e,t,s)=>{e.exports=s.p+"imgs/nest.6b64ab7782fa4ca87cf8d193ee2be1f1.svg"},9571:(e,t,s)=>{e.exports=s.p+"imgs/node.e328955d6bbbf3ebc72b7d1feadbf9cc.png"},2907:(e,t,s)=>{e.exports=s.p+"imgs/postgres.6c5d698f195dac2fe5afd11611dc0281.png"},6011:(e,t,s)=>{e.exports=s.p+"imgs/react.928f956d9c8ebcffb98a8e917154a81a.svg"},5994:(e,t,s)=>{e.exports=s.p+"imgs/recursive.7b768fd75655d260100f5681c79c9bce.png"},1973:(e,t,s)=>{e.exports=s.p+"imgs/ts.afcdb36e8c18284b47d885a9259e1733.png"},3210:(e,t,s)=>{e.exports=s.p+"imgs/vue.ca6e2b503a398e6f49171701284b06c4.png"}},t={};function s(n){var r=t[n];if(void 0!==r)return r.exports;var o=t[n]={exports:{}};return e[n](o,o.exports,s),o.exports}s.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return s.d(t,{a:t}),t},s.d=(e,t)=>{for(var n in t)s.o(t,n)&&!s.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},s.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),s.p="https://riadhadrani.github.io/RiadhAdrani";var n={};(()=>{"use strict";s.d(n,{rU:()=>pt,Uq:()=>ct,Bv:()=>ut,y0:()=>it,no:()=>at,BC:()=>mt,IW:()=>lt,A_:()=>dt});var e=s(7433),t=s(3410),r=s.n(t);function o(t){return(0,e.createElement)("h1",{...t,rendererOptions:{ns:"http://www.w3.org/1999/xhtml"}})}function a(t){return(0,e.createElement)("h2",{...t,rendererOptions:{ns:"http://www.w3.org/1999/xhtml"}})}function i(t){return(0,e.createElement)("h3",{...t,rendererOptions:{ns:"http://www.w3.org/1999/xhtml"}})}function l(t){return(0,e.createElement)("h4",{...t,rendererOptions:{ns:"http://www.w3.org/1999/xhtml"}})}function c(t){return(0,e.createElement)("p",{...t,rendererOptions:{ns:"http://www.w3.org/1999/xhtml"}})}function d(t){return(0,e.createElement)("a",{...t,rendererOptions:{ns:"http://www.w3.org/1999/xhtml"}})}function p(t){return(0,e.createElement)("span",{...t,rendererOptions:{ns:"http://www.w3.org/1999/xhtml"}})}function u(t){return(0,e.createElement)("img",{...t,rendererOptions:{ns:"http://www.w3.org/1999/xhtml"}})}function m(t){return(0,e.createElement)("object",{...t,rendererOptions:{ns:"http://www.w3.org/1999/xhtml"}})}function h(t){return(0,e.createElement)("button",{...t,rendererOptions:{ns:"http://www.w3.org/1999/xhtml"}})}function g(t){return(0,e.createElement)("column-view",{...t,rendererOptions:{ns:"http://www.w3.org/1999/xhtml"}})}function y(t){const s=(0,e.createElement)("input",{...t,rendererOptions:{ns:"http://www.w3.org/1999/xhtml"}});return r().items.TextField.handler(s),s}function f(t){return(0,e.createElement)("row-view",{...t,rendererOptions:{ns:"http://www.w3.org/1999/xhtml"}})}function v(t){const s=(0,e.createElement)("spacer-view",{...t,rendererOptions:{ns:"http://www.w3.org/1999/xhtml"}});return r().items.Spacer.handler(s),s}function b(e=[],t=" "){return e.reduce(((s,n,r)=>{let o="";return o=Array.isArray(n)?b(n):n,o+=r==e.length-1?"":t,s+o}),"")}function R(e){return`grayscale(${e})`}function x(...e){return`linear-gradient(${b(e,", ")})`}function E(e,t){return`repeat(${b([e,t],", ")})`}function w(e){return`var(--${e})`}const k=e=>o({children:e,style:{inline:{fontSize:"3em",textAlign:"center"}}}),S=({education:e,school:t,duration:s})=>({education:e,school:t,duration:s}),T=[S({education:"Applied Bachelor of Industrial Computing: Embedded Systems",school:"Higher Institute of Information's Technologies and Communication, Borj Cedria",duration:"September 2017 - July 2020"}),S({education:"Bachelor of Mathematics",school:"Lycée El-Wafa, Ariana",duration:"September 2013 - June 2017"})],C="main",A="main-accent",O="main-variant",_="text",I="text-accent",D="text-variant",P="background",M=(e,t=(()=>{}))=>h({children:e,className:"my-button",onClick:t,type:"button",style:{className:"text-button",scoped:!0,normal:{padding:["5px","15px"],margin:"5px"}}}),L=(e,t)=>pt({style:{inline:{textDecoration:"none"}},children:M(e),href:t});function N(t){return(0,e.createElement)("path",{...t,rendererOptions:{ns:"http://www.w3.org/2000/svg"}})}const z=({viewBox:t="0 0 24 24",path:s,...n})=>function(t){return(0,e.createElement)("svg",{...t,rendererOptions:{ns:"http://www.w3.org/2000/svg"}})}({viewBox:t,children:N({d:s}),...n}),U="M23 9v2h-2v7a3 3 0 01-3 3h-4v-6h-4v6H6a3 3 0 01-3-3v-7H1V9l11-7 5 3.18V2h3v5.09z",H="M10.15,13.35L4.79,8l5.35-5.35l0.71,0.71L6.21,8l4.65,4.65L10.15,13.35z",B="M4.97,12.65L9.62,8L4.97,3.35l0.71-0.71L11.03,8l-5.35,5.35L4.97,12.65z",j="M3 13h8V3H3v10zm0 8h8v-6H3v6zm10 0h8V11h-8v10zm0-18v6h8V3h-8z",F="M3 3v15a3 3 0 003 3h9v-6h6V3zm9 8H6v-1h6zm6-3H6V7h12zm-2 8h5l-5 5z",W="M17 6V5a3 3 0 00-3-3h-4a3 3 0 00-3 3v1H2v4a3 3 0 003 3h14a3 3 0 003-3V6zM9 5a1 1 0 011-1h4a1 1 0 011 1v1H9zm10 9a4 4 0 003-1.38V17a3 3 0 01-3 3H5a3 3 0 01-3-3v-4.38A4 4 0 005 14z",G="M3 3h4v4H3zm7 4h4V3h-4zm7-4v4h4V3zM3 14h4v-4H3zm7 0h4v-4h-4zm7 0h4v-4h-4zM3 21h4v-4H3zm7 0h4v-4h-4zm7 0h4v-4h-4z",V="M15 1v6h-2V4.41L7.41 10 6 8.59 11.59 3H9V1zm-4 10a1 1 0 01-1 1H5a1 1 0 01-1-1V6a1 1 0 011-1h2V3H5a3 3 0 00-3 3v5a3 3 0 003 3h5a3 3 0 003-3V9h-2z";var q=s(2302),Y=s.n(q),$=s(5994),Q=s.n($),X=s(9571),K=s.n(X),J=s(6011),Z=s.n(J),ee=s(3210),te=s.n(ee),se=s(4629),ne=s.n(se),re=s(6019),oe=s.n(re),ae=s(7132),ie=s.n(ae),le=s(1237),ce=s.n(le),de=s(5327),pe=s.n(de),ue=s(1973),me=s.n(ue),he=s(7443),ge=s.n(he),ye=s(6883),fe=s.n(ye),ve=s(2907),be=s.n(ve),Re=s(178),xe=s.n(Re),Ee=s(2066),we=s.n(Ee),ke=s(1027),Se=s.n(ke);const Te=(e,t)=>({name:e,src:t}),Ce=Te("JavaScript",Y()),Ae=Te("Recursive Js",Q()),Oe=Te("Node Js",K()),_e=Te("React",Z()),Ie=Te("Vue Js",te()),De=Te("Angular",ne()),Pe=Te("Android",oe()),Me=Te("Dart",ie()),Le=Te("Electron Js",ce()),Ne=Te("Kotlin",pe()),ze=Te("TypeScript",me()),Ue=Te("Nest Js",ge()),He=Te("Express Js",fe()),Be=Te("PostgreSQL",be()),je=Te("Firebase",xe()),Fe=Te("Java",we()),We=[Ce,Ae,Oe,_e,Ie,De,Pe,Me,Te("Flutter",Se()),Le,Fe,Ne,ze,He,Ue,Be,je];const Ge=We;let Ve=setTimeout((()=>{}),0);const qe=()=>{function e(){Ve=setTimeout((()=>{const[t,s]=it("slider");t.items.length<2||(t.direction>0?t.index==t.items.length-1?(t.direction=-1,t.index=t.items.length-2):t.index=t.index+1:0==t.index?(t.direction=1,t.index=1):t.index=t.index-1,Ye(t.index),s(t),e())}),2500)}const[t]=lt("slider",{index:0,items:Ge,direction:1},(()=>{e()}),(()=>{clearTimeout(Ve)}));return f({style:{scoped:!0,normal:{height:"300px",width:"300px",minHeight:"300px",minWidth:"300px",position:"relative",overflow:"hidden"}},children:[$e(),$e(!1),f({hooks:{onRef:()=>"slider"},style:{scoped:!0,normal:{height:"300px",width:"300px",position:"relative",overflow:"hidden"}},children:t.items.map((e=>function(e){return g({style:{scoped:!0,normal:{minHeight:"100%",minWidth:"100%",padding:["20px"],boxSizing:"border-box",alignItems:"center",justifyContent:"center",textAlign:"center"}},children:[u({width:120,height:120,src:e.src}),v({height:"10px"}),i({children:e.name})]})}(e)))})]})};function Ye(e){ct("slider").scroll({left:300*e,behavior:"smooth"})}function $e(e=!0){return g({style:{scoped:!0,normal:{height:"100%",justifyContent:"center",position:"absolute",left:e?"0px":"auto",right:e?"auto":"0px",background:x(e?"90deg":"-90deg",[w(A),"50%"],["transparent","100%"]),zIndex:10}},children:h({className:"my-button",type:"button",title:e?"Left":"Right",children:[z({viewBox:"0 0 16 16",path:e?H:B,fill:"white"})],style:{scoped:"true",normal:{borderRadius:"50%",height:"30px",width:"30px",zIndex:10}},onClick:()=>{const[t,s]=it("slider");if(!(t.items.length<2)){if(e){if(0==t.index)return;t.index=t.index-1,t.direction=-1}else{if(t.index==t.items.length-1)return;t.index=t.index+1,t.direction=1}Ye(t.index),s(t)}}})})}const Qe=({title:e,location:t,duration:s,description:n})=>({title:e,location:t,duration:s,description:n}),Xe=Qe({title:"Intern",location:"Brain Academy Tunisia",duration:"January 2020 - July 2020",description:'We developed the prototype of "SMARTchair" which is an EEG controlled wheelchair.\n    Using our skills was not enough, \n    so it was imminent for us to learn and get used to many other programming languages, \n    software and even new operating systems. \n    The project was defended the 19th of July 2020 and got "Very Good" as honor.'}),Ke=Qe({title:"Web Designer",location:"Triweb, Tunisia",duration:"May 2021 - December 2021",description:"My job consisted of designing (Using Adobe Photoshop and Illustrator) \n    the graphical charter of turnkey websites and integrating \n    them with the help of a custom CMS made for Tri-Web."}),Je=[Qe({title:"Freelancer",location:"Self-employed",duration:"Since November 2021",description:'Creating Mobile and Web Apps for customers \n    using various technologies like "Xamarin", \n    "Native Android", "React" ...'}),Ke,Xe],Ze=(e,t,s,n,r,o=[],a="",i=[],l=[])=>({name:e,type:t,logo:s,color:n,fromTo:r,links:o,shortDescription:a,fullDescription:i,techs:l}),et=[Ze("Recursive","UI Framework",Ae.src,"#cf2026","Since Spetember 2021",["https://github.com/RiadhAdrani/recursive","https://riadhadrani.github.io/recursive-docs/"],"Recursive is a Javascript framework to build beautiful component-based apps.",["Recursive is an ongoing project that allow developers to build a functional, component-based,"," Javascript only, beautiful and interactive Web applications."],[Ce,Oe]),Ze("WeTube","Web App","https://raw.githubusercontent.com/RiadhAdrani/wetube-fe/master/wetube.png","#00b0fa","July 2022",["https://github.com/RiadhAdrani/wetube-be","https://github.com/RiadhAdrani/wetube-fe"],"A Youtube clone built with Recursive and Express.",["Another clone added to the list of clones that I made using my own framework Recursive for the web,","and as you guessed it, its a Youtube clone."],[Ae,Ce,He,Be]),Ze("Audify","Desktop App","https://raw.githubusercontent.com/RiadhAdrani/audiphy/master/ss/audiphy.png","#3083f6","June 2022",["https://github.com/RiadhAdrani/audiphy"],"A simple audio player for Windows.","Audiphy is intended to be a Spotify clone, but turned out to be an audio player for Windows OS.",[Ce,Le,Ae]),Ze("Wroddit","Web App","https://riadhadrani.github.io/wroddit/imgs/wroddit-dark.ce2166f57a4607631a155b725ccc621a.png","#E9ECEF","May 2022",["https://github.com/RiadhAdrani/wroddit"],"Reddit clone made using Recursive.js for front-end and Firebase as a database.",[],[Ce,Ae,je]),Ze("Dwidder","Web App","https://raw.githubusercontent.com/RiadhAdrani/dwidder/master/src/assets/icon.png","#1e9eae","February 2022",["https://github.com/RiadhAdrani/dwidder"],"Making a mini social media website using Recursive.js",["Dwidder is a twitter clone made to showcase the potential of Recursive.js","The name came originally from a tunisian meal called Dwida as I was developping the app."],[Ce,Ae,je]),Ze("Questions Submission","Web App","https://raw.githubusercontent.com/RiadhAdrani/guess-app-questions-submission/master/src/assets/logo_solid.png","#ffde16","July 2021",["https://github.com/RiadhAdrani/guess-app-questions-submission"],"A website that allow users to submit their questions and answers for a possible game app.","In order to collect questions for a guessing game app that I am planning to do in the future, I decided to create a website with Vue.js to solve the problem.",[Ce,Ie,je]),Ze("Azur City App","Android App","https://raw.githubusercontent.com/RiadhAdrani/azur_app/master/app/src/main/res/drawable/ic_app_icon.jpg","#01acc8","February 2021 - May 2021",["https://github.com/RiadhAdrani/azur_app"],"A prototype of a commercial app made for Azur City. The App was presented as an End of studies projects.",[],[Pe,Ne]),Ze("Werewolves of the Miller's Hollow","Android App","https://raw.githubusercontent.com/RiadhAdrani/werewolves_of_the_millers_hollow/master/app/src/main/res/drawable/ww_app_icon.jpg","#fbb03b","January 2021 - June 2021",["https://github.com/RiadhAdrani/werewolves_of_the_millers_hollow"],'Creating a guide for the game "Werewolves of The Millers Hollow" originally " Les loups garous de Thierclieux"',[],[Pe,Ne]),Ze("Color Noter","Cross platform App","https://raw.githubusercontent.com/RiadhAdrani/color-noter-desktop/master/md/color-noter.png","#8cacb9","September 2020 - September 2021",["https://github.com/RiadhAdrani/color_note_plus","https://github.com/RiadhAdrani/color-noter-desktop","https://github.com/RiadhAdrani/color-noter-web"],"Color Noter is a color based note taking app that offer the user the ability to write and save his ideas and todos in an easy to use environment.",[],[Pe,Fe,Ce,Le,_e,Ae,je])];var tt=s(8903),st=s.n(tt);const nt=mt({path:"/",title:"Home | Riadh Adrani",component:()=>g({style:{scoped:!0,normal:{height:"100%",justifyContent:"center"}},children:[f({style:{scoped:!0,normal:{alignItems:"center"},mediaQueries:[{condition:"(max-width:800px)",normal:{flexDirection:"column",textAlign:"center"}}]},children:[g({style:{scoped:!0,normal:{flex:1.5,padding:["0px","10px"]},mediaQueries:[{condition:"(max-width:800px)",normal:{alignItems:"center"}}]},children:[o({children:"Riadh Adrani,",style:{scoped:!0,normal:{fontSize:"4em"}}}),a({children:"A self-made software developer based in Tunisia",style:{scoped:!0,normal:{fontSize:"2em",fontWeight:300}}}),v({height:"15px"}),f({style:{scoped:!0,normal:{flexWrap:"wrap"},mediaQueries:[{condition:"(max-width:800px)",normal:{justifyContent:"center"}}]},children:[L("Projects","/projects"),L("Professional Career","/pro"),L("Academic Background","/academy"),L("Resume","/resume")]})]}),qe()]})]}),routes:[mt({path:"projects",title:"Projects | Riadh Adrani",component:()=>{const[t,s]=lt("project-search",""),[n,r]=lt("project-tech",[]);function o(e){return null!=n.find((t=>t.name===e.name))}return g({children:[k("Projects"),v({height:"20px"}),y({value:t,placeholder:"Enter keywords",onInput:e=>s(e.target.value),style:{scoped:!0,normal:{padding:["10px","15px"],background:"transparent",border:["1px","solid",w(I)],borderRadius:"5px"}}}),v({height:"20px"}),f({style:{inline:{flexWrap:"wrap"}},children:Ge.map((e=>{return c({children:e.name,style:{scoped:!0,normal:{padding:["5px","15px"],margin:"5px",border:["1px","solid",w(D)],borderRadius:"15px",cursor:"pointer",background:o(e)?w(_):"transparent",color:o(e)?w(C):w(_)},hover:{filter:(t=.5,`opacity(${t})`)}},onClick:()=>{o(e)?r(n.filter((t=>t.name!=e.name))):r([...n,e])}});var t}))}),v({height:"30px"}),(m={style:{scoped:!0,normal:{display:"grid",gridTemplateColumns:E(3,"1fr"),gridColumnGap:"20px",gridRowGap:"20px"},mediaQueries:[{condition:"(max-width:1200px)",normal:{gridTemplateColumns:E(2,"1fr")}},{condition:"(max-width:800px)",normal:{gridTemplateColumns:E(1,"1fr")}}]},children:et.filter((e=>""==t.trim()||!!e.name.toLowerCase().trim().includes(t.toLowerCase().trim()))).filter((e=>{if(0==n.length)return!0;for(let t of e.techs)if(o(t))return!0;return!1})).map((t=>(t=>{return g({className:"item-card",style:{scoped:!0,normal:{transitionDuration:"150ms"},hover:{backgroundColor:t.color+"22",borderColor:t.color+"77"}},children:[u({title:t.name,src:t.logo,alt:t.name,loading:"lazy",style:{inline:{height:"40px",width:"fit-content"}}}),v({height:"10px"}),a({children:[p({children:t.name}),(s={children:t.links.map((e=>d({style:{inline:{display:"inline-flex",alignItems:"center",margin:["0","5px"]}},href:e,target:"_blank",children:z({viewBox:"0 0 16 16",fill:"white",path:V,height:"15px",width:"15px"})})))},(0,e.createElement)("fragment",{...s,rendererOptions:{ns:"http://www.w3.org/1999/xhtml"}}))]}),v({height:"10px",style:{inline:{borderBottom:["1px","solid",w(D)]}}}),v({height:"10px"}),i({children:t.type,style:{inline:{fontWeight:200}}}),l({children:t.fromTo,style:{inline:{fontWeight:400}}}),v({height:"10px"}),c({children:t.shortDescription,style:{inline:{minHeight:"3em"}}}),v({height:"10px"}),f({style:{inline:{flexWrap:"wrap",marginTop:"auto"}},children:t.techs.map((e=>{return g({dataSet:{title:e.name},style:{scoped:!0,normal:{justifyContent:"center",alignItems:"center",padding:["10px"],margin:["5px"],border:["1px","solid",w(D)],borderRadius:"50%",cursor:"help",position:"relative",filter:R(1),transitionDuration:"150ms"},hover:{borderColor:w(_),filter:R(0)},"[data-title]:hover::after":{content:(t="data-title",`attr(${t})`),position:"absolute",width:"max-content",top:"120%",left:"10px",padding:["5px","10px"],backgroundColor:w(O),border:["1px","solid",w(C)],borderRadius:"15px"}},children:u({loading:"lazy",src:e.src,title:e.name,alt:e.name,height:"15px",width:"15px"})});var t}))})]});var s})(t)))},(0,e.createElement)("div",{...m,rendererOptions:{ns:"http://www.w3.org/1999/xhtml"}}))]});var m}}),mt({path:"pro",title:"Professional Career | Riadh Adrani",component:()=>g({children:[k("Professional Career"),v({height:"30px"}),g({children:Je.map((e=>g({className:"item-card",style:{scoped:!0,normal:{marginBottom:"10px"}},children:[a({children:e.title}),v({height:"10px",style:{inline:{borderBottom:["1px","solid",w(D)]}}}),v({height:"10px"}),l({children:e.location,style:{inline:{fontWeight:200}}}),l({children:e.duration}),v({height:"10px"}),c({children:e.description})]})))})]})}),mt({path:"academy",title:"Academic Background | Riadh Adrani",component:()=>g({children:[k("Academic Background"),v({height:"30px"}),g({children:T.map((e=>g({className:"item-card",style:{scoped:!0,normal:{marginBottom:"10px"}},children:[a({children:e.education}),v({height:"10px",style:{inline:{borderBottom:["1px","solid",w(D)]}}}),v({height:"10px"}),l({children:e.school,style:{inline:{fontWeight:200}}}),l({children:e.duration})]})))})]})}),mt({path:"resume",title:"Resumé | Riadh Adrani",component:()=>{return g({children:[k("Resumé"),v({height:"30px"}),g({style:{inline:{alignItems:"center"}},children:[c({children:"The Resumé should start downloading automatically..."}),v({height:"10px"}),d({children:M("Download Manually"),href:st()}),m({children:(t={src:st(),type:"application/pdf"},(0,e.createElement)("embed",{...t,rendererOptions:{ns:"http://www.w3.org/1999/xhtml"}})),data:st(),type:"application/pdf"})]})]});var t}})]}),rt=(e,t,s)=>{const n=ut()==t;return pt({children:f({style:{inline:{alignItems:"center"}},children:[z({viewBox:"0 0 24 24",path:s,fill:"white",height:"20px",width:"20px",style:{scoped:!0,normal:{marginRight:"10px"},mediaQueries:[{condition:"(max-width:1100px)",normal:{marginRight:"0px"}}]}}),p({children:e,style:{scoped:!0,mediaQueries:[{condition:"(max-width:1100px)",normal:{display:"none"}}]}})]}),href:t,style:{scoped:!0,normal:{padding:["15px","10px"],margin:["0px","5px"],color:"inherit",textDecoration:"none",borderBottom:["4px","solid",n?w(_):"transparent"],transitionDuration:"200ms"},hover:{borderBottomColor:w(D)}}})},ot=new e.RecursiveWebApp({root:document.body,app:()=>((()=>{function e(e,t){return t}dt({imports:["https://fonts.googleapis.com/css2?family=Cairo:wght@200;300;400;500;600;700;800;900&family=Cousine:ital,wght@0,400;0,700;1,400;1,700&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap"],var:{[C]:e(0,"#1e1e1e"),[A]:e(0,"#101010"),[O]:e(0,"#0a0a0a"),[_]:e(0,"#ffffff"),[I]:e(0,"#777777"),[D]:e(0,"#555555"),[P]:e(0,"#3e3e3e"),"background-accent":e(0,"#5e5e5e"),"background-variant":e(0,"#7e7e7e")},selectors:{"*":{fontFamily:"'Cairo', sans-serif",lineHeight:"1.35em",color:w(_)},body:{margin:"0px",minHeight:"100vh",display:"flex",overflowY:"scroll"},"h1,h2,h3,h4,h5,h6":{margin:"0px",padding:["5px","0px"]},h3:{fontWeight:600},p:{margin:"0px"},".container":{justifySelf:"center",alignSelf:"center",width:"70%"},".my-button":{backgroundColor:w(C),border:["1px","solid","transparent"],cursor:"pointer",display:"flex",alignItems:"center",backgroundColor:w(C),boxShadow:["0px","0px","3px","0px",w(C)]},".my-button:hover":{boxShadow:["0px","0px","3px","0px",w(I)]},".item-card":{padding:["20px"],border:["1px","solid",w(P)],borderRadius:"5px",backgroundColor:w(C)}},mediaQueries:{"(max-width:1100px)":{".container":{width:"80%"}},"(max-width:900px)":{".container":{width:"90%"}},"(max-width:800px)":{".container":{width:"95%"}}}})})(),g({style:{scoped:!0,normal:{width:"100%",minHeight:"100vh"}},children:[f({style:{scoped:!0,normal:{justifyContent:"center",backgroundColor:w(C),color:"white",position:"sticky",top:"0px",boxShadow:["1px","1px","5px","0px",w(C)],zIndex:10}},children:[f({className:"container",style:{inline:{justifyContent:"center"}},children:[rt("Home","/",U),rt("Projects","/projects",G),rt("Professional Carrer","/pro",W),rt("Academic Background","/academy",j),rt("Resume","/resume",F)]})]}),g({style:{scoped:!0,normal:{flex:1,backgroundColor:w(A),alignItems:"center",padding:["20px",0]}},children:g({className:"container",style:{inline:{height:"100%"}},children:at()})})]})),route:nt,base:"RiadhAdrani"});function at(){return ot.renderRoute()}function it(e){return ot.getState(e)}function lt(e,t,s,n){return ot.setState(e,t,s,n)}function ct(e,t=document.createElement("div")){return ot.getRef(e,t)}function dt(e){ot.setStyle(e)}function pt(e){return ot.Link(e)}function ut(){return ot.getRoute()}function mt(e){return arguments[0]}ot.render()})()})();